{"version":3,"sources":["Game.js","components/CoinCarbon.js","components/CompanyHandLayout/companyCellNames.js","components/CoinMoney.js","components/CompanyCard.js","constants/companyDeck.js","constants/carbonDeck.js","components/TeamHandLayout/TeamCellNames.js","constants/teamDeck.js","components/CompanyStack.js","components/NamePlate.js","components/DragItem.js","components/CompanyHand.js","components/EventTeamPlace.js","components/CarbonEventCard.js","components/TeamCard.js","components/TestCellDnd/IsCard.js","components/CompanyCard3/Coin.js","components/CompanyCard3/SourceBox.js","components/PlaceBid.js","components/CompanyHandLayout/PlayerHand.js","components/Card.js","components/TeamHandLayout/TeamHand.js","components/CarbonEventCard2.js","components/Doit.js","NZGBoard.js","App.js","reportWebVitals.js","index.js"],"names":["topCard","findIndex","useStyles","makeStyles","theme","mainSection","display","fontSize","width","height","alignItems","justifyContent","CoinCarbon","item","children","classes","Box","className","actualCarbon","CELL_NAMES","borderRadius","border","backImage","backgroundImage","process","svgmain","backgroundPosition","backgroundSize","backgroundRepeat","margin","valuesMain","synergyMain","actualValues","marginLeft","marginTop","paddingTop","carbonActual","backgroundColor","carbonDropAct","carbonActualText","color","fontWeight","valueActual","valueActualText","initialValues","initialCarbon","initialValue","initialCarbonText","initialValueText","synLeft","synMid","synLeftText","synMidText","companyName","directionValue1","directionValue2","directionValue3","directionValue4","companyDeck","id","order","idValue","direction","synmain","name","type","actualValue","companyBank","cell","carbonDeck","frontImage","event1","text","coinRaise","carbonRaise","synergy","event2","f1","f2","f3","f4","f5","f6","f7","f0","e0","g1","g2","g3","g4","g5","g6","g7","g0","h1","h2","h3","h4","h5","h6","h7","h0","i1","i2","i3","i4","i5","i6","i7","i0","j9","j10","j11","j12","j0","j1","j2","j3","j4","j5","j6","j7","j8","teamDeck","minSignBid","reduceCarb","changeEvent","counter","currentId","Game","setup","ctx","G","deck","players","currentCarbon","temperatureIncrease","bid","minBid","goldBank","silverBank","coinBank","carbonBank","concat","random","Shuffle","j","numPlayers","score","handCompanyDeck","handCarbonDeck","handTeamDeck","bank","coin","coinsCopy","carbonCoins","teamMembers","currentBid","console","log","phases","draw","turn","moveLimit","moves","IncreaseCoin","idCard","DecreaseCoin","MoveCard","ChangeEvent","InitialDraw","i","shift","currentPlayer","push","events","endTurn","DiscardCompany","find","splice","length","DiscardTeam","endIf","start","next","pickEvent","DrawCarbonEventCard","PickCarbonEvent","playerID","counterEvent","counterEventGRO","companyMarket","sellCompany","bidForCompany","takeOverCompany","root","alignContent","zIndex","avatarNumber2","avatarNumber1","avatarNumber3","avatarNumber4","nameSection","nameText","textAlign","coinImg","coinsImg","carbonImg","teamImg","coinValue","React","Component","card","backCarbon","greenBackground","whiteBackground","frontCarbon","eventButtona","eventButtonb","CarbonEventCard","setTest","carbonEvent","setEvent","setButtonAEvent","chosenEvent","setChoice","returnItemsForTeamCell","setButtonBEvent","buttonAEvent","buttonBEvent","clickPhase","setClickPhase","useRef","onClick","clsx","flexWrap","TeamCard","Coin","setValue","value","setItems","ref","useDrop","accept","drop","useDrag","end","collect","monitor","isDragging","drag","useMemo","opacity","CompanyCard3","useState","_item","isOver","isOverCurrent","paddingLeft","cardDirectionClass","placeBidBackGroundFill","placeBid","PlaceBid","presentBid","setStartBid","setPresentBid","bankFlex","companyBankFlex","eventButtonAGreen","eventButtonAWhite","timer","auctionTest","startBid","leadingBidder","presentBidText","timeLeft","placeBidBackGroundClear","turnCarbon","pickCarbonEventFlow","playGRO","negativeValue","buySellCompany","takeOverGEO","playGSOInTurn","hireTeam","restructure","MovableCompanyCard","index","currentCellName","moveCardHandler","items","changeItemCell","currentItem","cellName","prevState","map","e","dropResult","getDropResult","cellId","playerId","l","MovableTeamCard","setPlayerNum","playerNum","timeoutA","timeoutFinal","setNegativeValue","setPlayGRO","timeoutB","setTimeout","style","CompanyCell","title","ID","canDrop","TeamCell","didDrop","PlayerHand","teamCards","setTeamCards","setBuySellCompany","setTakeOverGEO","setPlayGSOInTurn","setHireTeam","setRestructure","setLeadingBidder","undefined","setTimeLeft","setPlaceBid","returnItemsForCompanyCell","window","innerWidth","filter","a1","a2","a3","a4","a5","a6","a7","a8","a9","a0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c0","d1","d2","d3","d4","d5","d6","d7","d8","d9","d0","e1","m1","m2","m3","buttonnAEvent","QuarterTimer","expiryTimestamp","useTimer","autoStart","onExpire","pause","seconds","minutes","hours","days","isRunning","stop","resume","restart","useEffect","CurrentLeaderTimer","time","Date","setSeconds","getSeconds","bankId","cellsList","mapTeamBank","mapCompanyBank","mt","Card","marginBottom","position","mr","Front","this","props","Back","src","img","alt","ImageArea","MainArea","toString","Doit","background","auction","App","Client","game","board","isMobile","DndProvider","backend","TouchBackend","HTML5Backend","debug","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe9a499f.chunk.js","sourcesContent":["import {useState} from 'react'\nimport {companyDeck} from \"./constants/companyDeck\"\nimport {carbonDeck} from \"./constants/carbonDeck\"\nimport {teamDeck} from \"./constants/teamDeck\"\nimport {keys} from \"@material-ui/core/styles/createBreakpoints\";\n\n// const getLength = (G,ctx) =>{\n//     let lengthOfCom = G.players[0].handCompanyDeck.length;\n//     return lengthOfCom;\n// };\n// export default getLength;\n\n// function DrawCard(G, ctx) {\n//     G.deck--;\n//     G.hand[ctx.currentPlayer]++;\n// }\n//\n// function PlayCard(G, ctx) {\n//     G.deck++;\n//     G.hand[ctx.currentPlayer]--;\n// }\n//\n// export const Game = {\n//     setup: ctx => ({ deck: 6, hand: Array(ctx.numPlayers).fill(0) }),\n//     moves: { DrawCard, PlayCard },\n//     turn: { moveLimit: 1 },\n// };\n\n// function DrawCard(G, ctx) {\n//     G.companyDeck--;\n//     G.hand[ctx.currentPlayer]++;\n//     G.bank.coin[ctx.currentPlayer]++;\n//\n// }\n\n// function PlayCard(G, ctx) {\n//     G.companyDeck++;\n//     G.hand[ctx.currentPlayer]--;\n// }\n\nexport function getInitialState(ctx) {\n\n    const G = {\n        deck: [],\n        players: [],\n        carbonDeck: [],\n        currentCarbon: [],\n        teamDeck: [],\n        companyDeck: [],\n        temperatureIncrease: 0,\n        bid: 0,\n        minBid: 0,\n        goldBank: 10,\n        silverBank: 30,\n        coinBank: 100,\n        carbonBank: 30,\n    };\n\n    // Add a deck for every player\n    // for (let i = 0; i < ctx.numPlayers; i++) {\n    G.companyDeck = G.companyDeck.concat(companyDeck);\n    G.carbonDeck = G.carbonDeck.concat(carbonDeck);\n    G.teamDeck = G.teamDeck.concat(teamDeck);\n    // }\n\n    // console.log(ctx.currentPlayer);\n    // Shuffle resulting deck using lodash\n    // G.companyDeck = ctx.random.Shuffle(G.companyDeck);\n    G.carbonDeck = ctx.random.Shuffle(G.carbonDeck);\n    G.teamDeck = ctx.random.Shuffle(G.teamDeck);// TODO: Use boardgame.io provided random shuffle function, which will be important when we are running a server\n\n    // Set up the game state for each player\n    for (let j = 0; j < ctx.numPlayers; j++) {\n        G.players[j] = {\n            score: 0,\n            handCompanyDeck: [],\n            handCarbonDeck: [],\n            handTeamDeck: [],\n            bank: {\n                coin: 15,\n                coinsCopy: 15,\n                carbonCoins: 0,\n                teamMembers: 0\n            },\n            currentBid: 0,\n        };\n    }\n    // topCard = G.carbonDeck.shift();\n    // G.currentCarbon.push(topCard);\n    //\n    // for (let i = 0; i < 4; i++) {\n    //     for (let k = 0; k < 3; k++) {\n    //         topCard = G.companyDeck.shift();\n    //         G.players[i].handCompanyDeck.push(topCard);\n    //     }\n    //\n    //\n    // }\n    //\n    // for (let i = 0; i < 2; i++) {\n    //     for (let k = 0; k < 4; k++) {\n    //         topCard = G.teamDeck.shift();\n    //         G.players[k].handTeamDeck.push(topCard);\n    //     }\n    // }\n\n\n    // For debugging \"game over\" state– this sets the deck to only have a single card\n    // G.deck = new Array(G.deck[0]);\n\n    console.log(\"Initial Game State\", G, \"Initial ctx\", ctx);\n\n    // Our game state is ready to go– return it!\n    return G;\n}\n\nlet topCard;\nlet findIndex;\n\n\nexport const currentId = [];\n\nexport const Game  = {\n\n\n\n    name: \"NetZeroGame\",\n\n    setup: getInitialState,\n    // moves: {\n    //     PlayCompany: (G, ctx, props) => {\n    //         topCard = G.players[ctx.currentPlayer].handCompanyDeck.shift();\n    //         G.companyDeck.push(topCard);\n    //     },\n    // },\n    phases: {\n        draw: {\n            turn: {moveLimit: 3},\n            moves: {\n                IncreaseCoin: (G,ctx,name,idCard) => {\n                    // alert(name) ;\n                    // console.log({name})\n                    // console.log(G.companyDeck[idCard-1].actualValue)\n                    ++G.companyDeck[idCard-1].actualValue\n                    // console.log(G.companyDeck[idCard-1].actualValue)\n\n                    // topCard=G.companyDeck[idCard-1].order===idCard\n                    // console.log({topCard})\n\n\n                    // G.companyDeck[1].actualValue--\n                    // console.log(G.companyDeck[0].actualValue)\n                },\n                DecreaseCoin:(G,ctx,name,idCard)=>{\n                    // console.log({name})\n                    // console.log({idCard})\n                    --G.companyDeck[idCard-1].actualValue\n                    // topCard=G.companyDeck[idCard-1].order===idCard\n                    // console.log({topCard})\n                },\n                MoveCard:(G,ctx,name,idCard)=>{\n                    // alert(name);\n                    console.log(name);\n\n\n                },\n                ChangeEvent:(G,ctx)=>{\n                    G.companyDeck[1].actualCarbon--;\n                },\n                InitialDraw: (G, ctx) => {\n                    for (let i = 0; i < 4; i++) {\n                        topCard = G.companyDeck.shift();\n                        currentId[i] = topCard.id;\n\n                        // console.log(currentId);\n                        G.players[ctx.currentPlayer].handCompanyDeck.push(topCard);\n                    }\n\n                    for (let i = 0; i < 3; i++) {\n                        topCard = G.teamDeck.shift();\n                        G.players[ctx.currentPlayer].handTeamDeck.push(topCard);\n                    }\n                    ctx.events.endTurn();\n                },\n                DiscardCompany: (G,ctx,id) => {\n\n                    topCard = G.players[ctx.currentPlayer].handCompanyDeck.find((item) => item.id === id);\n                    G.companyDeck.push(topCard);\n                    findIndex = G.players[ctx.currentPlayer].handCompanyDeck.findIndex(i => i.id === id);\n                    if (findIndex > -1) {\n                        G.players[ctx.currentPlayer].handCompanyDeck.splice(findIndex, 1);\n                    }\n                    for (let i = 0; i < G.players[ctx.currentPlayer].handCompanyDeck.length; i++) {\n                        G.players[ctx.currentPlayer].bank.coin -= G.players[ctx.currentPlayer].handCompanyDeck[i].initialValue;\n                    }\n                },\n                DiscardTeam: (G, ctx, id) => {\n                    topCard = G.players[ctx.currentPlayer].handTeamDeck.find((item) => item.id === id);\n                    G.teamDeck.push(topCard);\n                    const findIndex = G.players[ctx.currentPlayer].handTeamDeck.findIndex(i => i.id === id);\n                    if (findIndex > -1) {\n                        G.players[ctx.currentPlayer].handTeamDeck.splice(findIndex, 1);\n                    }\n\n                },\n\n\n            },\n            endIf: G => (G.players[3].handTeamDeck.length === 2),//TODO change endif\n            start: true,\n            next: \"pickEvent\",\n        },\n        pickEvent: {\n            next: \"counterEvent\",\n            moves: {\n                DrawCarbonEventCard: (G, ctx) => {\n                    topCard = G.carbonDeck.shift();\n                    G.currentCarbon.push(topCard);\n\n                },\n                PickCarbonEvent: (G, ctx, id) => {\n                    if (id === 1) {\n\n                        G.players[ctx.playerID].bank.coin += G.players[ctx.currentPlayer].handCarbonDeck[0].event1.coinRaise;\n\n\n                    } else {\n\n                        G.players[ctx.playerID].bank.coin += G.players[ctx.currentPlayer].handCarbonDeck[0].event2.coinRaise;\n\n\n                    }\n\n                },\n            },\n            turn: {moveLimit: 2},\n        },\n        counterEvent: {\n            moves: {\n                counterEventGRO: (G, ctx, id) => {\n                    topCard = G.players[ctx.playerID].handTeamDeck.find((item) => item.type === \"GRO\");\n                    G.teamDeck.push(topCard);\n                    findIndex = G.players[ctx.currentPlayer].handCompanyDeck.findIndex(i => i.type === \"GRO\");\n                    if (findIndex > -1) {\n                        G.players[ctx.currentPlayer].handCompanyDeck.splice(findIndex, 1);\n                    }\n                },\n\n            },\n            turn: {moveLimit: 1},\n        },\n        companyMarket: {\n            moves: {\n                sellCompany: (G, ctx) => {\n\n                },\n                bidForCompany: (G, ctx) => {\n\n                },\n                takeOverCompany: (G, ctx) => {\n                    topCard = G.players[ctx.currentPlayer].handTeamDeck.find((item) => item.type === \"GEO\");\n                    G.teamDeck.push(topCard);\n\n                },\n            },\n            turn: {moveLimit: 2},\n        },\n\n\n        // turn: {moveLimit: 2},\n\n    }\n};\n\n\n","import React, {useState} from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport '../styles/App.css';\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        mainSection: {\r\n            display: \"flex\",\r\n            fontSize: 18,\r\n            // backgroundColor:\"green\",\r\n\r\n            width: \"32px\",\r\n            height: \"32px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n        }\r\n    }));\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\n\r\nconst CoinCarbon = ({item,children}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Box className={`${classes.mainSection} + \" \" + mainFont greyFont `}>\r\n\r\n                {item.actualCarbon}\r\n\r\n\r\n            </Box>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CoinCarbon;","export let CELL_NAMES = {\n    a1: 'a1',\n    a2: 'a2',\n    a3: 'a3',\n    a4: 'a4',\n    a5: 'a5',\n    a6: 'a6',\n    a7: 'a7',\n    a8: 'a8',\n    a9: 'a9',\n    a0: 'a0',\n    b1: 'b1',\n    b2: 'b2',\n    b3: 'b3',\n    b4: 'b4',\n    b5: 'b5',\n    b6: 'b6',\n    b7: 'b7',\n    b8: 'b8',\n    b9: 'b9',\n    b0: 'b0',\n    c1: 'c1',\n    c2: 'c2',\n    c3: 'c3',\n    c4: 'c4',\n    c5: \"c5\",\n    c6: \"c6\",\n    c7: \"c7\",\n    c8: \"c8\",\n    c9: \"c9\",\n    c0: \"c0\",\n    d1: 'd1',\n    d2: 'd2',\n    d3: 'd3',\n    d4: 'd4',\n    d5: \"d5\",\n    d6: \"d6\",\n    d7: \"d7\",\n    d8: \"d8\",\n    d9: \"d9\",\n    d0: \"d0\",\n    k0: \"k0\",\n    k1: 'k1',\n    k2: 'k2',\n    k3: 'k3',\n    k4: 'k4',\n    k5: \"k5\",\n    k6: \"k6\",\n    k7: \"k7\",\n    k8: \"k8\",\n    k9: \"k9\",\n    k10: \"k10\",\n    k11: \"k11\",\n    k12: \"k12\",\n    k13: \"k13\",\n    k14: \"k14\",\n    k15: \"k15\",\n    k16: \"k16\",\n    k17: \"k17\",\n    k18: \"k18\",\n    l1:\"l1\",\n\n    f1: 'f1',\n    f2: 'f2',\n    f3: 'f3',\n    f4: 'f4',\n    f5: 'f5',\n    f6: 'f6',\n    f7: 'f7',\n    f0: 'f0',\n    e0: \"e0\",\n    e1:\"e1\",\n    g1: 'g1',\n    g2: 'g2',\n    g3: 'g3',\n    g4: 'g4',\n    g5: 'g5',\n    g6: 'g6',\n    g7: 'g7',\n    g0: 'g0',\n    h1: 'h1',\n    h2: 'h2',\n    h3: 'h3',\n    h4: 'h4',\n    h5: 'h5',\n    h6: 'h6',\n    h7: 'h7',\n    h0: 'h0',\n    i1: 'i1',\n    i2: 'i2',\n    i3: 'i3',\n    i4: 'i4',\n    i5: 'i5',\n    i6: 'i6',\n    i7: 'i7',\n    i0: 'i0',\n    j9: 'j9',\n    j10: 'j10',\n    j11: 'j11',\n    j12: 'j12',\n    j0: 'j0',\n    j1: 'j1',\n    j2: 'j2',\n    j3: 'j3',\n    j4: 'j4',\n    j5: 'j5',\n    j6: 'j6',\n    j7: 'j7',\n    j8: 'j8',\n    m1:'m1',\n    m2:'m2',\n    m3:'m3',\n}\n","import React, {useState} from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport '../styles/App.css';\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        mainSection: {\r\n            display: \"flex\",\r\n            fontSize: 18,\r\n            // backgroundColor:\"green\",\r\n\r\n            width: \"32px\",\r\n            height: \"32px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n        }\r\n    }));\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\n\r\nconst CoinMoney = ({item}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Box className={`${classes.mainSection} + \" \" + mainFont`}>\r\n\r\n                {item.actualValue}\r\n\r\n\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CoinMoney;\r\n","import React, {useRef, useState} from 'react';\nimport {Box, Typography} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport '../styles/App.css';\n// import {SourceBox} from \"./TestCellDnd/IsCard\";\nimport CoinCarbon from \"./CoinCarbon\";\nimport {DndProvider, useDrag, useDrop,DragSource,DropTarget,ConnectDragSource,ConnectDropTarget } from \"react-dnd\";\nimport CoinMoney from \"./CoinMoney\";\n\n// const image = \"../img/company/14/background-1.png\"\nconst useStyles = makeStyles(theme => (\n    {\n        mainSection: {\n            // display: \"flex\",\n            width: \"120px\",\n            height: \"120px\",\n            borderRadius: \"10px\",\n            // backgroundColor:\"white\",\n            border: \"black\",\n        },\n\n        backImage: item => ({\n            backgroundImage: `url(${process.env.PUBLIC_URL + item.svgmain})`,\n            backgroundPosition: 'center',\n            backgroundSize: '100%',\n            backgroundRepeat: 'no-repeat',\n            height: '120px',\n            width: '120px',\n            display: 'block',\n            margin: 'auto',\n            // backgroundColor: \"white\",\n            // flexDirection:\"column\",\n\n            // marginTop: \"2%\",\n            // marginLeft: \"3%%\",\n        }),\n        valuesMain: {},\n        synergyMain: {},\n        actualValues: {\n            display: \"flex\",\n            justifyContent: 'space-between',\n            width: \"87%\",\n            height: \"26%\",\n            marginLeft: \"6%\",\n            marginTop: \"4%\",\n            paddingTop: \"6%\",\n        },\n        carbonActual: {\n            backgroundColor: \"black\",\n            border: \"3px solid grey\",\n            height: \"90%\",\n            width: \"27%\",\n            borderRadius: 50,\n            marginTop: \"2%\",\n            // marginLeft:\"6%\",\n        },\n        carbonDropAct: {\n            backgroundColor: \"black\",\n            border: \"3px solid grey\",\n            borderRadius: 50,\n            marginTop: \"2%\",\n            height: \"3%\",\n            width: \"1.5%\",\n\n        },\n        carbonActualText: {\n            color: \"grey\",\n            fontSize: \"16pt\",\n            marginLeft: \"28%\",\n            marginTop: \"-5%\",\n            fontWeight: 501,\n        },\n        valueActual: {\n            backgroundColor: \"white\",\n            border: \"3px solid #539bc5\",\n            height: \"90%\",\n            width: \"27%\",\n            borderRadius: 50,\n            marginTop: \"2%\",\n            // marginLeft: 104,\n        },\n        valueActualText: {\n            color: \"black\",\n            fontSize: \"16pt\",\n            marginLeft: \"28%\",\n            marginTop: \"-5%\",\n            fontWeight: 501,\n        },\n        initialValues: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"36%\",\n            height: \"17%\",\n            marginTop: \"12%\",\n            marginLeft: \"57%\",\n        },\n        initialCarbon: {\n            backgroundColor: \"black\",\n            border: \"3px solid grey\",\n            // height: \"100%\",\n            width: \"34%\",\n            borderRadius: 50,\n\n        },\n        initialValue: {\n            backgroundColor: \"white\",\n            border: \"3px solid #539bc5\",\n            // height: \"100%\",\n            width: \"34%\",\n            borderRadius: 50,\n\n        },\n        initialCarbonText: {\n            color: \"grey\",\n            fontSize: \"11pt\",\n            marginLeft: \"23%\",\n            marginTop: \"-19%\",\n            // fontWeight:501,\n        },\n        initialValueText: {\n            color: \"black\",\n            fontSize: \"11pt\",\n            marginLeft: \"23%\",\n            marginTop: \"-19%\",\n            // fontWeight:501,\n        },\n        synLeft: {\n            backgroundColor: \"white\",\n            border: \"2px solid #539bc5\",\n            height: \"10%\",\n            width: \"10%\",\n            marginTop: \"-18%\",\n            marginLeft: \"9%\",\n            borderRadius: 50,\n        },\n        synMid: {\n            backgroundColor: \"white\",\n            border: \"2px solid #539bc5\",\n            height: \"10%\",\n            borderRadius: 50,\n            width: \"10%\",\n            marginTop: \"-21%\",\n            marginLeft: \"34%\",\n\n\n        },\n        synLeftText: {\n            color: \"black\",\n            fontSize: \"7pt\",\n            marginLeft: \"1%\",\n            marginTop: \"-5%\",\n        },\n        synMidText: {\n            // fontWeight:501,\n            color: \"black\",\n            fontSize: \"7pt\",\n            marginLeft: \"1%\",\n            marginTop: \"-5%\",\n        },\n        companyName: {\n            marginTop: \"30.5%\",\n            marginLeft: \"8.5%\",\n            fontSize: \"10pt\",\n\n        },\n        directionValue1: {},\n        directionValue2: {\n            display: \"flex\",\n            fontSize: 18,\n            // backgroundColor:\"green\",\n\n            width: \"32px\",\n            height: \"32px\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n\n        },\n        directionValue3: {},\n        directionValue4: {},\n    }))\n\n\n//TODO get the card with props of current player,hook only changables\n\n\nconst CompanyCard = ({G, item, key, playerID,children}) => {\n    // const card = G.players[0].handCompanyDeck[0]\n    const classes = useStyles(item);\n\n\n\n    const cardDirectionClass = (item) => {\n\n        if (item.direction === 2) {\n\n            return (\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"105px\"} paddingTop={\"80px\"} paddingLeft={\"7px\"} >\n                    <CoinCarbon item={item} />\n                    <CoinMoney item={item}/>\n                    {children}\n                </Box>\n            );\n        }\n        if (item.direction === 1) {\n            return (\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"105px\"} paddingTop={\"80px\"} paddingLeft={\"7px\"} >\n\n\n                    <CoinMoney item={item}/>\n                    <CoinCarbon  item={item}/>\n                    {children}\n                </Box>\n            );\n        }\n        if (item.direction === 3) {\n\n            return (\n                    <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"106px\"} paddingTop={\"6px\"} paddingLeft={\"7px\"} >\n                        <CoinCarbon item={item} />\n                        <CoinMoney item={item}/>\n                        {children}\n\n\n                    </Box>\n            );\n        }\n        if (item.direction === 4) {\n\n            return (\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"106px\"} paddingTop={\"6px\"} paddingLeft={\"7px\"} >\n                    <CoinMoney item={item}/>\n                    <CoinCarbon item={item}/>\n                    {children}\n                </Box>\n            );\n        }\n    }\n    // const ref = useRef(null);\n    //\n    // const [, drop ] = useDrop(\n    //\n    //     {\n    //         accept: \"coinMoney\",\n    //     }\n    // );\n    //\n    // const [{isDragging},drag] = useDrag({\n    //\n    //     type: \"coinMoney\",\n    //\n    //     end: (draggedItem, monitor) => {\n    //\n    // },\n    //         collect: (monitor) => ({\n    //             isDragging: monitor.isDragging(),\n    //         }),\n    //     });\n    //\n    // const opacity = isDragging ? 0 : 1;\n    //\n    // drag(drop(ref));\n\n\n    // console.log(ID)\n    // console.log(currentId)\n    // const [{ isDragging }, drag] = useDrag({\n    //     type: \"companyCard\",\n    //     id: `${key}`,\n    //     collect: (monitor) => ({\n    //         isDragging: !!monitor.isDragging(),\n    //     }),\n    // })\n\n    // console.log(props.ctx);w\n    //console.log(playerId);\n\n\n    return (\n        <>\n            {/*<img src={process.env.PUBLIC_URL + '/img/company/cc12.png'} alt=\"\"/>*/}\n            <Box className={`${classes.mainSection}`}>\n\n\n                <Box className={`${classes.backImage}`}>\n\n\n                    {cardDirectionClass(item)}\n                    {children}\n\n                    {/*<Box zIndex={1} className={classes.actualValues}>*/}\n\n\n                    {/*    <Box className={classes.carbonActual}>*/}\n                    {/*        <Typography className={classes.carbonActualText}>{G.players[\"2\"].handCompanyDeck[0].carbonCoins}</Typography>*/}\n                    {/*    </Box>*/}\n\n\n                    {/*    <Box className={classes.valueActual}>*/}\n                    {/*        <Typography className={`${classes.valueActualText} `}>{G.players[1].handCompanyDeck[0].initialCarbon}</Typography>*/}\n                    {/*    </Box>*/}\n\n\n                    {/*</Box>*/}\n                    {/*<Box zIndex={2} className={classes.initialValues}>*/}\n                    {/*    <Box className={classes.initialValue}>*/}\n                    {/*        <Typography className={classes.initialValueText}>{G.players[1].handCompanyDeck[0].carbonCoins}</Typography>*/}\n                    {/*    </Box>*/}\n                    {/*    <Box className={classes.initialCarbon}>*/}\n                    {/*        <Typography className={classes.initialCarbonText}>{G.players[1].handCompanyDeck[0].initialCarbon}</Typography>*/}\n                    {/*    </Box>*/}\n                    {/*</Box>*/}\n\n\n                    {/*<Box className={classes.synLeft}>*/}\n                    {/*    <Typography className={classes.synLeftText}>+3</Typography>*/}\n                    {/*</Box>*/}\n                    {/*<Box className={classes.synMid}>*/}\n                    {/*    <Typography className={classes.synMidText}>+3</Typography>*/}\n                    {/*</Box>*/}\n                    {/*<Box className={classes.companyName}>{item.companyName}</Box>*/}\n\n                </Box>\n\n            </Box>\n\n\n        </>\n    );\n};\n\n\nexport default CompanyCard;","import {CELL_NAMES} from \"../components/CompanyHandLayout/companyCellNames\";\n\nexport let companyDeck = [\n\n\n    //TODO: try to make a single company deck with 5 separate arrays of cards for players and a bank.\n    //TODO: It will be easier to perform all the moves\n    {\n        id: \"1\",\n        order: 1,\n        idValue: 1,\n        direction: 2,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Dwellings, Inc.',\n        type: 'consumer',\n        initialValue: 2,\n        initialCarbon: 2,\n        actualValue: 2,\n        actualCarbon: 2,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC1.svg\",\n        cell:CELL_NAMES.a0,\n    },\n\n    {\n        id: \"2\",\n        order: 2,\n        idValue: 2,\n        direction: 2,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Steaks, Inc.',\n        type: 'consumer',\n        initialValue: 1,\n        initialCarbon: 1,\n        actualValue: 1,\n        actualCarbon: 1,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC2.svg\",\n        cell:CELL_NAMES.a1,\n    },\n\n    {\n        id: \"3\",\n        order: 3,\n        idValue: 3,\n        direction: 2,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Smartphone, Inc.',\n        type: 'consumer',\n        initialValue: 3,\n        initialCarbon: 1,\n        actualValue: 3,\n        actualCarbon: 1,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC3.svg\",\n        cell:CELL_NAMES.b9,\n    },\n\n    {\n        id: \"4\",\n        order: 4,\n        idValue: 4,\n        direction: 2,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Airline, Inc.',\n        type: 'consumer',\n        initialValue: 4,\n        initialCarbon: 2,\n        actualValue: 4,\n        actualCarbon: 2,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC4.svg\",\n        cell:CELL_NAMES.a5,\n    },\n\n    {\n        id: \"5\",\n        order: 5,\n        idValue: 5,\n        direction: 1,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Aircraft, Inc.',\n        type: 'production',\n        initialValue: 4,\n        initialCarbon: 2,\n        actualValue: 4,\n        actualCarbon: 2,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC5.svg\",\n        cell:CELL_NAMES.b4,\n    },\n\n    {\n        id: \"6\",\n        order: 6,\n        idValue: 6,\n        direction: 1,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Packaging, Inc.',\n        type: 'production',\n        initialValue: 2,\n        initialCarbon: 1,\n        actualValue: 2,\n        actualCarbon: 1,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC6.svg\",\n        cell:CELL_NAMES.b3,\n    },\n\n    {\n        id: \"7\",\n        order: 7,\n        idValue: 7,\n        direction: 1,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Chemicals, Inc.',\n        type: 'production',\n        initialValue: 4,\n        initialCarbon: 2,\n        actualValue: 4,\n        actualCarbon: 2,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC7.svg\",\n        cell:CELL_NAMES.k4,\n    },\n\n    {\n        id: \"8\",\n        order: 8,\n        idValue: 8,\n        direction: 1,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Software, Inc.',\n        type: 'production',\n        initialValue: 4,\n        initialCarbon: 1,\n        actualValue: 4,\n        actualCarbon: 1,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC8.svg\",\n        cell:CELL_NAMES.d1,\n    },\n    {\n        id: \"9\",\n        order: 9,\n        idValue: 9,\n        direction: 1,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Cement, Inc.',\n        type: 'production',\n        initialValue: 3,\n        initialCarbon: 2,\n        actualValue: 3,\n        actualCarbon: 2,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC9.svg\",\n        cell:CELL_NAMES.c1,\n    },\n\n    {\n        id: \"10\",\n        order: 10,\n        idValue: 10,\n        direction: 4,\n        name: 'Shipping, Inc.',\n        type: 'distribution',\n        initialValue: 4,\n        initialCarbon: 3,\n        actualValue: 4,\n        actualCarbon: 3,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC10.svg\",\n        cell:CELL_NAMES.k0,\n    },\n\n    {\n        id: \"11\",\n        order: 11,\n        idValue: 11,\n        direction: 4,\n        name: 'Road Transport, Inc.',\n        type: 'distribution',\n        initialValue: 5,\n        initialCarbon: 3,\n        actualValue: 5,\n        actualCarbon: 3,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC11.svg\",\n        cell:CELL_NAMES.c6,\n    },\n\n    {\n        id: \"12\",\n        order: 12,\n        idValue: 12,\n        direction: 4,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Data & Wireless, Inc.',\n        type: 'distribution',\n        initialValue: 3,\n        initialCarbon: 2,\n        actualValue: 3,\n        actualCarbon: 2,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC12.svg\",\n        cell:CELL_NAMES.k3,\n    },\n\n    {\n        id: \"13\",\n        order: 13,\n        idValue: 13,\n        direction: 4,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Grid & Pipeline, Inc.',\n        type: 'distribution',\n        initialValue: 3,\n        initialCarbon: 1,\n        actualValue: 3,\n        actualCarbon: 1,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC13.svg\",\n        cell:CELL_NAMES.d6,\n    },\n\n    {\n        id: \"14\",\n        order: 14,\n        idValue: 14,\n        direction: 3,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Oil & Gas, Inc.',\n        type: 'resource',\n        initialValue: 6,\n        initialCarbon: 3,\n        actualValue: 6,\n        actualCarbon: 3,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC14.svg\",\n        cell:CELL_NAMES.c0,\n    },\n\n    {\n        id: \"15\",\n        order: 15,\n        idValue: 15,\n        direction: 3,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Sand & Metal, Inc.',\n        type: 'resource',\n        initialValue: 2,\n        initialCarbon: 1,\n        actualValue: 2,\n        actualCarbon: 1,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC15.svg\",\n        cell:CELL_NAMES.k2,\n    },\n\n    {\n        id: \"16\",\n        order: 16,\n        idValue: 16,\n        direction: 3,\n        synmain: \"../img/company/16/background-16.png\",\n        name: 'Farm, Inc.',\n        type: 'resource',\n        initialValue: 3,\n        initialCarbon: 2,\n        actualValue: 3,\n        actualCarbon: 2,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC16.svg\",\n        cell:CELL_NAMES.k1,\n    },\n\n    {\n        id: \"17\",\n        order: 17,\n        idValue: 17,\n        direction: 3,\n        synmain: \"../img/company/14/background-1.png\",\n        // svgmain:\"../img/company/CompositeLayer.svg\",\n        name: 'Wind Power, Inc.',\n        type: 'resource',\n        initialValue: 3,\n        initialCarbon: 0,\n        actualValue: 3,\n        actualCarbon: 0,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC17.svg\",\n        cell:CELL_NAMES.d7  ,\n    },\n\n    {\n        id: \"18\",\n        order: 18,\n        idValue: 18,\n        direction: 3,\n        synmain: \"../img/company/14/background-1.png\",\n        name: 'Recycling, Inc.',\n        type: 'resource',\n        initialValue: 5,\n        initialCarbon: 1,\n        actualValue: 5,\n        actualCarbon: 1,\n        companyBank: 0,\n        svgmain: \"/img/newCards/CC18.svg\",\n        cell:CELL_NAMES.k5,\n    },\n\n];\n\nexport const getRandomCard = (deck) =>\n    deck[Math.floor(Math.random() * deck.length)];\n","export const carbonDeck = [\n\n    //TODO optimise and make it readable\n    {\n        backImage: \"/img/carbonevent/CE_Back.svg\",\n    },\n\n    {\n        backImage: \"/img/carbonevent/CE_Back.svg\",\n\n        frontImage:\"/img/carbonevent/CE1.svg\",\n        event1: {\n            id: [1],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: 0,\n            carbonRaise: -1,\n            synergy: true,\n\n        },\n        event2: {\n            id: [1, 11, 16],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: -2,\n            carbonRaise: -2,\n            synergy: true,\n\n        },\n    },\n\n    {\n        backImage: \"/img/carbonevent/CE_Back.svg\",\n        frontImage:\"/img/carbonevent/CE2.svg\",\n        event1: {\n            id: [1],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: 0,\n            carbonRaise: -1,\n            synergy: true,\n\n},\n        event2: {\n            id: [1, 11, 16],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: -2,\n            carbonRaise: -2,\n            synergy: true,\n\n        },\n    },\n    {\n        event1: {\n            id: [1],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: 0,\n            carbonRaise: -1,\n            synergy: true,\n\n        },\n        event2: {\n            id: [1, 11, 16],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: -2,\n            carbonRaise: -2,\n            synergy: true,\n\n        },\n    },\n    {\n        event1: {\n            id: [1],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: 0,\n            carbonRaise: -1,\n            synergy: true,\n\n        },\n        event2: {\n            id: [1, 11, 16],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: -2,\n            carbonRaise: -2,\n            synergy: true,\n\n        },\n    }, {\n        event1: {\n            id: [1],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: 0,\n            carbonRaise: -1,\n            synergy: true,\n\n        },\n        event2: {\n            id: [1, 11, 16],\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\n            coinRaise: -2,\n            carbonRaise: -2,\n            synergy: true,\n\n        },\n    },\n    // {\n    //     id: 1,\n    //     idText: \"DWELLINGS,INC.\",\n    //     text: \"Cities upcycle existing buildings to new efficient energy standarts\",\n    //     idText2: [\"AIRLINE,INC.\", \"AIRCRAFT,INC.\", \"OIL&GAS,INC.\"],\n    //     text2: \"Spreading flight shame reduces demand for air travel.\",\n    //\n    //     event1: [\n    //         {\n    //             event:1,\n    //             id: 1,\n    //             coinRaise: 0,\n    //             carbonRaise: -1,\n    //             synergy: true,\n    //         }\n    //     ],\n    //     event2: [\n    //         {\n    //             event:2,\n    //             id: 4,\n    //             coinRaise: -1,\n    //             carbonRaise: -1,\n    //             synergy: false,\n    //         },\n    //         {\n    //             id: 5,\n    //             coinRaise: -1,\n    //             carbonRaise: -1,\n    //             synergy: false,\n    //         },\n    //         {\n    //             id: 14,\n    //             coinRaise: -1,\n    //             carbonRaise: -1,\n    //             synergy: false,\n    //         },\n    //     ],\n    //\n    // },\n    // {\n    //     id: 2,\n    //     idText: \"STEAKS,INC.\",\n    //     text: \"Cattle feed with seaweed reduces methane emissions from livestock.\",\n    //     idText2: [\"DWELLINGS,INC.\", \"ROAD TRANSPORT,INC.\", \"FARM,INC.\"],\n    //     text2: \"Vertical farming in cities increases in popularity.\",\n    //\n    //     event1: [\n    //         {\n    //             id: 2,\n    //             coinRaise: 0,\n    //             carbonRaise: -1,\n    //             synergy: true,\n    //         }\n    //     ],\n    //     event2: [\n    //         {\n    //             id: 1,\n    //             coinRaise: 0,\n    //             carbonRaise: 0,\n    //             synergy: true,\n    //         },\n    //         {\n    //             id: 11,\n    //             coinRaise: -1,\n    //             carbonRaise: -1,\n    //             synergy: false,\n    //         },\n    //         {\n    //             id: 16,\n    //             coinRaise: 0,\n    //             carbonRaise: -1,\n    //             synergy: true,\n    //         },\n    //     ],\n    //\n    // },\n\n\n];\n\n// export const cDeck = [\n//     {\n//         Event1:{\n//             id:[1],\n//             coinRaise: 0,\n//             carbonRaise: -1,\n//             synergy: true,\n//\n//         },\n//         Event2:{\n//             id:[1,11,16],\n//             coinRaise: 0,\n//             carbonRaise: -2,\n//             synergy: true,\n//\n//         },\n//     },{}\n// ];","export const CELL_NAMES = {\r\n    f1: 'f1',\r\n    f2: 'f2',\r\n    f3: 'f3',\r\n    f4: 'f4',\r\n    f5: 'f5',\r\n    f6: 'f6',\r\n    f7: 'f7',\r\n    f0: 'f0',\r\n    e0: \"e0\",\r\n    g1: 'g1',\r\n    g2: 'g2',\r\n    g3: 'g3',\r\n    g4: 'g4',\r\n    g5: 'g5',\r\n    g6: 'g6',\r\n    g7: 'g7',\r\n    g0: 'g0',\r\n    h1: 'h1',\r\n    h2: 'h2',\r\n    h3: 'h3',\r\n    h4: 'h4',\r\n    h5: 'h5',\r\n    h6: 'h6',\r\n    h7: 'h7',\r\n    h0: 'h0',\r\n    i1: 'i1',\r\n    i2: 'i2',\r\n    i3: 'i3',\r\n    i4: 'i4',\r\n    i5: 'i5',\r\n    i6: 'i6',\r\n    i7: 'i7',\r\n    i0: 'i0',\r\n    j9: 'j9',\r\n    j10: 'j10',\r\n    j11: 'j11',\r\n    j12: 'j12',\r\n    j0: 'j0',\r\n    j1: 'j1',\r\n    j2: 'j2',\r\n    j3: 'j3',\r\n    j4: 'j4',\r\n    j5: 'j5',\r\n    j6: 'j6',\r\n    j7: 'j7',\r\n    j8: 'j8',\r\n\r\n\r\n}","//TODO playerView to hide team cards in multiplayer\nimport {CELL_NAMES} from \"../components/TeamHandLayout/TeamCellNames.js\";\nexport const teamDeck  = [\n    {\n        id:19,\n        name:\"1\",\n        type: \"GEO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: true,\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\n        svgmain: \"/img/teamcards/TC1.svg\",\n        cell: CELL_NAMES.g0,\n    },\n    {\n        id:20,\n        name:\"2\",\n        type: \"GSO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: false,\n        counter: [\"GSO\"],\n        svgmain: \"/img/teamcards/TC2.svg\",\n        cell:CELL_NAMES.h0,\n    },\n    {\n        id:21,\n        name:\"3\",\n        type: \"GRO\",\n        minSignBid: 1,\n        reduceCarb: false,\n        changeEvent: true,\n        counter: [\"GRO\"],\n        svgmain: \"/img/teamcards/TC3.svg\",\n        cell: CELL_NAMES.i0,\n    },\n    {\n        id:22,\n        name:\"4\",\n        type: \"GEO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: true,\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\n        svgmain: \"/img/teamcards/TC4.svg\",\n        cell:CELL_NAMES.j0,\n    },\n    {\n        id:23,\n        name:\"5\",\n        type: \"GSO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: false,\n        counter: [\"GSO\"],\n        svgmain: \"/img/teamcards/TC5.svg\",\n        cell:CELL_NAMES.j1,\n    },\n    {\n        id:24,\n        name:\"6\",\n        type: \"GRO\",\n        minSignBid: 1,\n        reduceCarb: false,\n        changeEvent: true,\n        counter: [\"GRO\"],\n        svgmain: \"/img/teamcards/TC6.svg\",\n        cell:CELL_NAMES.j2,\n    },\n    {\n        id:25,\n        name:\"7\",\n        type: \"GEO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: true,\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\n        svgmain: \"/img/teamcards/TC7.svg\",\n        cell:CELL_NAMES.j3,\n    },\n    {\n        id:26,\n        name:\"8\",\n        type: \"GSO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: false,\n        counter: [\"GSO\"],\n        svgmain: \"/img/teamcards/TC8.svg\",\n        cell:CELL_NAMES.j6,\n    },\n    {\n        id:27,\n        name:\"9\",\n        type: \"GRO\",\n        minSignBid: 1,\n        reduceCarb: false,\n        changeEvent: true,\n        counter: [\"GRO\"],\n        svgmain: \"/img/teamcards/TC9.svg\",\n        cell:CELL_NAMES.j4,\n    },\n    {\n        id:28,\n        name:\"10\",\n        type: \"GEO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: true,\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\n        svgmain: \"/img/teamcards/TC10.svg\",\n        cell:CELL_NAMES.j5,\n    },\n    {\n        id:29,\n        name:\"11\",\n        type: \"GSO\",\n        minSignBid: 1,\n        reduceCarb: true,\n        changeEvent: false,\n        counter: [\"GSO\"],\n        svgmain: \"/img/teamcards/TC11.svg\",\n        cell:CELL_NAMES.f0,\n\n    },\n    {\n        id:30,\n        name:\"12\",\n        type: \"GRO\",\n        minSignBid: 1,\n        reduceCarb: false,\n        changeEvent: true,\n        counter: [\"GRO\"],\n        svgmain: \"/img/teamcards/TC12.svg\",\n        cell:CELL_NAMES.f1,\n    },\n    ]\n","import React, {useCallback, useState} from 'react';\nimport {Box, Grid} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {currentId} from \"../Game\";\nimport CompanyCard from \"./CompanyCard\";\n\n// const image = \"../img/company/14/background-1.png\"\nconst useStyles = makeStyles(theme => ({\n    mainSection: {\n        height:255,\n\n        // backgroundImage:`url(${image})`,\n        // backgroundRepeat: \"no-repeat\",\n\n\n    },\n    root:{\n        width:250,\n    },\n}))\n\n\n//TODO get the card with props of current player,hook only changables\n\nconst CompanyStack = ({G,playerId,ctx,moves}) => {\n    const classes = useStyles();\n    console.log(G);\n    // const id = playerId.toString();\n    const player = G.players[playerId];\n\n\n\n    const cards = player.handCompanyDeck.map(card =>\n\n            <Grid item className={classes.root} sm={6} md={6} xs={6} lg={6} >\n                <CompanyCard card={card} key={card.id}  G={G}  ctx={ctx} moves={moves}/>\n            </Grid>\n\n            );\n\n\n\n\n\n    return (\n\n\n            <Box width={240} height={240}>\n                <Grid container spacing={1} justify={\"center\"} >\n                     {cards}\n                </Grid>\n            </Box>\n\n    );\n};\n\n\nexport default CompanyStack;","import React from 'react';\nimport {Box, Typography} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {currentId} from \"../Game\";\nimport CompanyCard from \"./CompanyCard\";\nimport {\n    Draggable,\n    Droppable,\n    DragComponent,\n    DragState\n} from \"react-dragtastic\"\nimport CoinCarbon from \"./CoinCarbon\";\nimport CoinMoney from \"./CoinMoney\";\n\n// const image = \"../img/company/14/background-1.png\"\nconst useStyles = makeStyles(theme => ({\n    mainSection: {\n        // display: \"flex\",\n        width: \"120px\",\n        height: \"120px\",\n        borderRadius: \"8px\",\n        // border: \"1px solid #a49f9f\",\n        // backgroundColor:\"white\",\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n\n        // position:\"absolute\",\n        alignContent: \"center\",\n        // margin:\"0 auto\",\n        zIndex: 0,\n\n    },\n\n    avatarNumber2:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/avatars/Avatar_B.svg\"})`,\n    },\n    avatarNumber1:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/avatars/Avatar_Aturn.svg\"})`,\n    },\n    avatarNumber3:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/avatars/Avatar_C.svg\"})`,\n    },\n    avatarNumber4:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/avatars/Avatar_D.svg\"})`,\n    },\n    nameSection: {\n        width: \"100%\",\n        // height:\"20%\",\n        // paddingTop:\"5%\",\n    },\n    nameText: {\n        color: \"white\",\n        textAlign: \"center\",\n        fontSize: \"8pt\",\n        fontWeight: \"1000\",\n\n    },\n    coinImg: {\n        height: \"30%\",\n        width: \"85%\",\n        marginLeft: \"5%\",\n    },\n    coinsImg: {\n        backgroundColor: \"white\",\n        borderRadius: 50,\n        border: \"3px solid #539bc5\",\n        height: \"61%\",\n        width: \"22%\",\n    },\n    carbonImg: {\n        backgroundColor: \"black\",\n        border: \"3px solid grey\",\n        borderRadius: 50,\n        height: \"61%\",\n        width: \"22%\",\n    },\n    teamImg: {\n        backgroundColor: \"lightskyblue\",\n        borderRadius: 50,\n        border: \"3px solid purple\",\n        height: \"61%\",\n        width: \"22%\",\n    },\n    coinValue: {\n        height: \"30%\",\n        width: \"85%\",\n        marginLeft: \"5%\",\n    },\n\n}))\n\n\n//TODO get the card with props of current player,hook only changables\n\nconst NamePlate = ({G, playerId,avatarId}) => {\n    const classes = useStyles();\n\n\n    const cardDirectionClass = (avatarId) => {\n\n        if (avatarId === 2) {\n\n            return (\n              <Box position=\"relative\" className={[classes.mainSection, classes.avatarNumber2].join(' ')}>\n\n              </Box>\n            );\n        }\n        if (avatarId === 1) {\n            return (\n                <Box position=\"relative\" className={[classes.mainSection, classes.avatarNumber1].join(' ')}>\n\n                </Box>\n            );\n        }\n        if (avatarId === 3) {\n\n            return (\n                <Box position=\"relative\" className={[classes.mainSection, classes.avatarNumber3].join(' ')}>\n\n                </Box>\n            );\n        }\n        if (avatarId === 4) {\n\n            return (\n                <Box position=\"relative\" className={[classes.mainSection, classes.avatarNumber4].join(' ')}>\n\n                </Box>\n            );\n        }\n    }\n    return (\n        <Box>\n            {cardDirectionClass(avatarId)}\n        </Box>\n    );\n\n};\n\n\nexport default NamePlate;","import React from \"react\";\nimport 'gridstack/dist/gridstack.min.css';\nimport { GridStack } from 'gridstack';\n// THEN to get HTML5 drag&drop\nimport 'gridstack/dist/h5/gridstack-dd-native';\n\nexport class DragItem extends React.Component {\n    state = {\n        count: 0,\n        info: \"\",\n        items: [\n            { x: 2, y: 1, h: 2 },\n            { x: 2, y: 4, w: 3 },\n            { x: 4, y: 2 },\n            { x: 3, y: 1, h: 2 },\n            { x: 0, y: 6, w: 2, h: 2 },\n        ],\n    };\n\n    componentDidMount() {\n        // Provides access to the GridStack instance across the React component.\n        this.grid = GridStack.init({\n            float: true,\n            cellHeight: \"70px\",\n            minRow: 1,\n        });\n\n        this.grid.on(\"dragstop\", (event, element) => {\n            const node = element.gridstackNode;\n            this.setState({\n                info: `you just dragged node #${node.id} to ${node.x},${node.y} – good job!`,\n            });\n\n            // Clear the info text after a two second timeout.\n            // Clears previous timeout first.\n            window.clearTimeout(this.timerId);\n            this.timerId = window.setTimeout(() => {\n                this.setState({\n                    info: \"\",\n                });\n            }, 2000);\n        });\n    }\n\n    addNewWidget = () => {\n        const node = this.state.items[this.state.count] || {\n            x: Math.round(12 * Math.random()),\n            y: Math.round(5 * Math.random()),\n            w: Math.round(1 + 3 * Math.random()),\n            h: Math.round(1 + 3 * Math.random()),\n        };\n        node.id = node.content = String(this.state.count);\n        this.setState((prevState) => ({\n            count: prevState.count + 1,\n        }));\n        this.grid.addWidget(node);\n    };\n\n    render() {\n        return (\n            <div>\n\n                <button type=\"button\" onClick={this.addNewWidget}>\n                    Add Widget\n                </button>\n                {this.state.info}\n                <section class=\"grid-stack\"></section>\n            </div>\n        );\n    }\n}\n","import React, {useCallback, useState} from 'react';\nimport {Box, Grid, Typography} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {currentId} from \"../Game\";\n// import CompanyCard from \"./CompanyCard\";\n\n\n// const image = \"../img/company/14/background-1.png\"\nconst useStyles = makeStyles(theme => ({\n\n    root:{\n        width:200,\n    },\n    mainSection:   {\n        // display: \"flex\",\n        width: 100,\n        height: 100 ,\n        borderRadius: 20,\n        backgroundColor:\"white\",\n        border:\"black\",\n    },\n\n    backImage: card =>( {\n        backgroundImage:`url(${card.synmain})`,\n        backgroundPosition: 'center',\n        backgroundSize: '86%',\n        backgroundRepeat: 'no-repeat',\n        height: '100%',\n        width: '100%',\n        display: 'block',\n        margin: 'auto',\n        // flexDirection:\"column\",\n\n        // marginTop: \"2%\",\n        // marginLeft: \"3%%\",\n    }),\n    valuesMain: {},\n    synergyMain: {},\n    actualValues:{\n        display:\"flex\",\n        justifyContent:'space-between',\n        width:\"87%\",\n        height:\"26%\",\n        marginLeft:\"6%\",\n        marginTop:\"4%\",\n        paddingTop:\"6%\",\n    },\n    carbonActual: {\n        backgroundColor: \"black\",\n        border: \"3px solid grey\",\n        height: \"90%\",\n        width: \"27%\",\n        borderRadius: 50,\n        marginTop:\"2%\",\n        // marginLeft:\"6%\",\n    },\n    carbonDropAct:{\n        backgroundColor: \"black\",\n        border: \"3px solid grey\",\n        borderRadius: 50,\n        marginTop:\"2%\",\n        height: \"3%\",\n        width: \"1.5%\",\n\n    },\n    carbonActualText: {\n        color: \"grey\",\n        fontSize: \"16pt\",\n        marginLeft: \"28%\",\n        marginTop: \"-5%\",\n        fontWeight:501,\n    },\n    valueActual: {\n        backgroundColor: \"white\",\n        border: \"3px solid #539bc5\",\n        height: \"90%\",\n        width: \"27%\",\n        borderRadius: 50,\n        marginTop:\"2%\",\n        // marginLeft: 104,\n    },\n    valueActualText: {\n        color: \"black\",\n        fontSize: \"16pt\",\n        marginLeft: \"28%\",\n        marginTop: \"-5%\",\n        fontWeight:501,\n    },\n    initialValues:{\n        display:\"flex\",\n        justifyContent:\"space-between\",\n        width:\"36%\",\n        height:\"17%\",\n        marginTop:\"12%\",\n        marginLeft:\"57%\",\n    },\n    initialCarbon: {\n        backgroundColor: \"black\",\n        border: \"3px solid grey\",\n        // height: \"100%\",\n        width: \"34%\",\n        borderRadius: 50,\n\n    },\n    initialValue: {\n        backgroundColor: \"white\",\n        border: \"3px solid #539bc5\",\n        // height: \"100%\",\n        width: \"34%\",\n        borderRadius: 50,\n\n    },\n    initialCarbonText: {\n        color: \"grey\",\n        fontSize: \"11pt\",\n        marginLeft: \"23%\",\n        marginTop: \"-19%\",\n        // fontWeight:501,\n    },\n    initialValueText: {\n        color: \"black\",\n        fontSize: \"11pt\",\n        marginLeft: \"23%\",\n        marginTop: \"-19%\",\n        // fontWeight:501,\n    },\n    synLeft:{\n        backgroundColor: \"white\",\n        border: \"2px solid #539bc5\",\n        height: \"10%\",\n        width: \"10%\",\n        marginTop: \"-18%\",\n        marginLeft: \"9%\",\n        borderRadius: 50,\n    },\n    synMid:{\n        backgroundColor: \"white\",\n        border: \"2px solid #539bc5\",\n        height: \"10%\",\n        borderRadius:50,\n        width: \"10%\",\n        marginTop: \"-21%\",\n        marginLeft: \"34%\",\n\n\n    },\n    synLeftText:{\n        color: \"black\",\n        fontSize: \"7pt\",\n        marginLeft: \"1%\",\n        marginTop: \"-5%\",\n    },\n    synMidText:{\n        // fontWeight:501,\n        color: \"black\",\n        fontSize: \"7pt\",\n        marginLeft: \"1%\",\n        marginTop: \"-5%\",\n    },\n    companyName:{\n        marginTop: \"30.5%\",\n        marginLeft:\"8.5%\",\n        fontSize:\"10pt\",\n\n    },\n}))\n\n\n\n//TODO get the card with props of current player,hook only changables\n\nconst CompanyHand = ({G,playerId,ctx,moves}) => {\n    const classes = useStyles();\n\n    console.log(G);\n    // const id = playerId.toString();\n    const player = G.players[playerId];\n\n    const [handCards, setHandCards] = useState(player.handCompanyDeck);\n\n\n    const CompanyCard = ({card,key,G,ctx,moves}) => {\n\n        const classes = useStyles(card);\n        // console.log(currentId)\n\n\n        // console.log(props.ctx);\n        //console.log(playerId);\n\n\n\n\n\n\n        return (\n\n            <Box\n                className={`${classes.mainSection}`}\n            >\n\n\n                <Box className={`${classes.backImage}`}>\n                    <Box zIndex={1} className={classes.actualValues}>\n\n\n                        <Box className={classes.carbonActual}>\n                            <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\n                        </Box>\n\n\n                        <Box className={classes.valueActual}>\n                            <Typography className={`${classes.valueActualText} `}>{card.actualValue}</Typography>\n                        </Box>\n\n\n                    </Box>\n                    <Box zIndex={2} className={classes.initialValues}>\n                        <Box className={classes.initialValue}>\n                            <Typography className={classes.initialValueText}>{card.initialValue}</Typography>\n                        </Box>\n                        <Box className={classes.initialCarbon}>\n                            <Typography className={classes.initialCarbonText}>{card.initialCarbon}</Typography>\n                        </Box>\n                    </Box>\n\n\n                    <Box className={classes.synLeft}>\n                        <Typography className={classes.synLeftText}>+3</Typography>\n                    </Box>\n                    <Box className={classes.synMid}>\n                        <Typography className={classes.synMidText}>+3</Typography>\n                    </Box>\n                    <Box className={classes.companyName}>{card.companyName}</Box>\n\n                </Box>\n\n            </Box>\n\n\n        );\n    };\n\n    const cards = handCards.map(card =>\n\n        <Grid item className={classes.root} sm={6} md={6} xs={6} lg={6} >\n            <CompanyCard card={card} key={card.id}  G={G}  ctx={ctx} moves={moves}/>\n        </Grid>\n\n    );\n\n    return (\n\n\n        <Box width={200} height={200}>\n            <Grid container spacing={1} justify={\"center\"} >\n                {cards}\n            </Grid>\n        </Box>\n\n    );\n};\n\n\nexport default CompanyHand;","import React, {useRef, useState} from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {carbonDeck} from \"../constants/carbonDeck\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\n\r\n\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    backCarbon: carbonDeck => ({\r\n\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + carbonDeck.backImage})`,\r\n\r\n\r\n\r\n    }),\r\n\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst EventTeamPlace = ({setEvent, carbonEvent,key,children}) => {\r\n\r\n    const classes = useStyles(carbonDeck);\r\n    const ref = useRef(null);\r\n    const [{isActive,didDrop}, drop] = useDrop({\r\n        accept: 'TeamCard',\r\n        drop: () => ({name: \"team\"}),\r\n        collect:(monitor)=>({\r\n            isActive: monitor.canDrop() && monitor.isOver(),\r\n            didDrop: monitor.didDrop(),\r\n        }),\r\n\r\n    });\r\n\r\n\r\n    return (\r\n\r\n            <Box ref={drop} display={\"flex\"} width={\"60px\"} height={\"120px\"} onClick={()=>{\r\n\r\n            }}  className={classes.backCarbon}>\r\n\r\n                {children}\r\n            </Box>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default EventTeamPlace;","import React, {useRef, useState} from 'react';\nimport {Box, Typography} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {carbonDeck} from \"../constants/carbonDeck\";\nimport EventTeamPlace from \"./EventTeamPlace\";\nimport {useDrop} from \"react-dnd\";\nimport clsx from 'clsx';\n\n\n// const image = \"../img/company/14/background-1.png\"\nconst useStyles = makeStyles(theme => ({\n        backCarbon: carbonDeck => ({\n            width: 240,\n            height: 240,\n            // backgroundColor: \"#20eb09\",\n            borderRadius: 8,\n            backgroundPosition: 'center',\n            backgroundSize: '100%',\n            backgroundRepeat: 'no-repeat',\n            backgroundImage: `url(${process.env.PUBLIC_URL + carbonDeck.backImage})`,\n            // ${process.env.PUBLIC_URL + '/img/company/cc12.png'}/\n            // position:\"absolute\",\n            alignContent: \"center\",\n            // margin:\"0 auto\",\n            zIndex: 0,\n\n            // border: '1px solid #a49f9f',\n        }),\n        greenBackground: {backgroundColor: \"#20eb09\"},\n        whiteBackground: {backgroundColor: \"white\"},\n        frontCarbon: (carbonDeck) => ({\n            width: 240,\n            height: 240,\n            // backgroundColor: \"white\",\n            borderRadius: 8,\n            backgroundPosition: 'center',\n            backgroundSize: '100%',\n            backgroundRepeat: 'no-repeat',\n            backgroundImage: `url(${process.env.PUBLIC_URL + carbonDeck.frontImage})`,\n            // position:\"absolute\",\n            alignContent: \"center\",\n            margin: \"0 auto\",\n            zIndex: 0,\n            // border: '1px solid #a49f9f',\n            // border: '0.5px solid #a49f9f',\n        }),\n        eventButtona: {\n            backgroundPosition: 'center',\n            backgroundSize: '100%',\n            backgroundRepeat: 'no-repeat',\n            alignContent: \"center\",\n            backgroundColor: \"#20eb09\",\n            borderRadius: 8,\n            margin: \"0 auto\",\n            backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/eventbuttons/a_transparent.svg\"})`,\n        },\n        eventButtonb: {\n            backgroundPosition: 'center',\n            backgroundSize: '100%',\n            backgroundRepeat: 'no-repeat',\n            alignContent: \"center\",\n            margin: \"0 auto\",\n            backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/eventbuttons/b_transparent.svg\"})`,\n        },\n    }))\n\n\n//TODO get the card with props of current player,hook only changables\n;\nconst CarbonEventCard = ({setTest,carbonEvent, setEvent, chosenEvent,\n                             setChoice,moves, returnItemsForTeamCell,\n                              setButtonAEvent,setButtonBEvent,\n                                buttonAEvent,buttonBEvent,clickPhase,setClickPhase,\n                             ...rest}) => {\n\n    // const backImage = carbonDeck[0].backImage;\n\n    // const [clickPhase, setClickPhase] = useState(true)\n    const classes = useStyles(carbonDeck[carbonEvent]);\n    const ref = useRef(null);\n\n    return (\n        <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"540px\"} height={\"240px\"}\n             marginLeft={\"0px\"}>\n            <Box display={\"inline-block\"} onClick={() => {\n                if (carbonEvent !== 2) {\n                    setEvent(carbonEvent + 1);\n                    // setChoice(\"hey\");\n                    setClickPhase(!clickPhase)\n                    setButtonAEvent(!buttonAEvent)\n                    setButtonBEvent(!buttonBEvent)\n\n\n                }\n            }}\n                 className={clickPhase == 1 ? clsx(classes.backCarbon, classes.greenBackground) :\n                     clsx(classes.backCarbon, classes.whiteBackground)}>\n\n            </Box>\n            <Box display={\"flex\"} flexWrap={\"wrap\"} className={carbonEvent >= 0 ? classes.frontCarbon : null}>\n\n            </Box>\n\n\n        </Box>\n\n\n    );\n};\n\n\nexport default CarbonEventCard;","import React, {useCallback, useState} from 'react';\nimport {Box, Grid, Typography} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {GridContextProvider, GridDropZone, GridItem} from \"react-grid-dnd\";\n\n\n// const image = \"../img/company/14/background-1.png\"\nconst useStyles = makeStyles(theme => ({\n    mainSection: item => ({\n        width: \"60px\",\n        // border: \"0.5px solid #a49f9f\",\n        height: \"120px\",\n        // backgroundColor:\"limegreen\",\n        borderRadius: \"8px\",\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `url(${process.env.PUBLIC_URL + item.svgmain})`,\n        // position:\"absolute\",\n        alignContent: \"center\",\n        // margin:\"0 auto\",s\n        // zIndex:0,\n        // marginRight:\"1px\",\n        // marginTop:\"\",\n    }),\n\n}))\n\n\n//TODO get the card with props of current player,hook only changables\n\nconst TeamCard = ({G, item}) => {\n    const classes = useStyles(item);\n\n\n    return (\n\n        <Box className={classes.mainSection}>\n\n        </Box>\n\n\n    );\n}\n\n\nexport default TeamCard;","// import CompanyCard from \"../CompanyCard\";\n// import {Square} from \"./Square\";\n// export const IsCard = ({ G,item,isCard,key }) => isCard ? null : <CompanyCard G={G} item={item} key={key}/>\n\n\nimport { useState, useCallback, useMemo, memo } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => (\n    {\n        mainSection: {\n            display: \"flex\",\n            fontSize: 18,\n            // backgroundColor:\"green\",\n\n            width: \"32px\",\n            height: \"32px\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n        }\n    }));\nexport const SourceBox = memo(function SourceBox({item,children}) {\n\n    const classes = useStyles();\n\n    const [, drag] = useDrag(\n        () => ({\n            type: \"coinMoney\",\n\n            collect: (monitor) => ({\n                isDragging: monitor.isDragging()\n            })\n        })\n    );\n    return (\n        <div ref={drag} className={`${classes.mainSection} + \" \" + mainFont greyFont `} >\n            {3}\n            {children}\n        </div>\n    );\n});\n","import React, {useState, useCallback, useMemo, memo, useRef} from \"react\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport '../../styles/App.css';\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        mainSection: {\r\n            display: \"flex\",\r\n            fontSize: 18,\r\n            // backgroundColor:\"green\",\r\n\r\n            width: \"32px\",\r\n            height: \"32px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n        }\r\n    }));\r\n\r\n\r\n const Coin=({ color,name,idCard,setValue,setItems,value, children,item,moves,G,ctx })=> {\r\n\r\n    // const [{ isDragging }, drag] = useDrag(\r\n    //   {\r\n    //     item: {type: \"color\"},\r\n    //\r\n    //     collect: (monitor) => ({\r\n    //       isDragging: monitor.isDragging()\r\n    //     })\r\n    //   }\r\n    //\r\n    // );\r\n    const ref = useRef(null);\r\n    const classes = useStyles();\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'bid',\r\n\r\n    });\r\n\r\n    const [{isDragging}, drag] = useDrag({\r\n        item: {idCard,name,type: 'bid'},\r\n        end: ( ) => {\r\n\r\n            // moves.InitialDraw();\r\n            // if (value!=G.companyDeck[idCard-1].actualValue){\r\n            //     setValue(G.companyDeck[idCard-1].actualValue)\r\n            // }\r\n                moves.DecreaseCoin(name,idCard);\r\n            // setItems(G.companyDeck);\r\n\r\n            //\r\n\r\n                setValue(G.companyDeck[idCard-1].actualValue)\r\n            setValue(value-1)\r\n                console.log(G.companyDeck[idCard-1].actualValue);\r\n\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n\r\n\r\n    const containerStyle = useMemo(\r\n        () => ({\r\n            opacity: isDragging ? 0.4 : 1,\r\n\r\n        }),\r\n        [isDragging]\r\n    );\r\n    drag(drop(ref))\r\n    return (\r\n        <div ref={ref} >\r\n            <Box className={`${classes.mainSection} + \" \" + mainFont`}>\r\n\r\n                {value}\r\n\r\n\r\n            </Box>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\n export default Coin;","import React, {useState, useEffect, useMemo, memo, useRef} from \"react\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport CoinCarbon from \"../CoinCarbon\";\r\nimport Coin from \"./Coin\";\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport '../../styles/App.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        mainSection: {\r\n            // display: \"flex\",\r\n            width: \"120px\",\r\n            height: \"120px\",\r\n            borderRadius: \"10px\",\r\n            // backgroundColor:\"white\",\r\n            // border: \"black\",\r\n            // borderStyle:\"solid\",\r\n            // borderImage:\"linear-gradient(blue,transparent)1\",\r\n            // borderBottom:0,\r\n        },\r\n\r\n        backImage: item => ({\r\n            backgroundImage: `url(${process.env.PUBLIC_URL + item.svgmain})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: '100%',\r\n            backgroundRepeat: 'no-repeat',\r\n            height: '120px',\r\n            width: '120px',\r\n            display: 'block',\r\n            margin: 'auto',\r\n            // backgroundColor: \"white\",\r\n            // flexDirection:\"column\",\r\n\r\n            // marginTop: \"2%\",\r\n            // marginLeft: \"3%%\",\r\n        }),\r\n        valuesMain: {},\r\n        synergyMain: {},\r\n        actualValues: {\r\n            display: \"flex\",\r\n            justifyContent: 'space-between',\r\n            width: \"87%\",\r\n            height: \"26%\",\r\n            marginLeft: \"6%\",\r\n            marginTop: \"4%\",\r\n            paddingTop: \"6%\",\r\n        },\r\n        carbonActual: {\r\n            backgroundColor: \"black\",\r\n            border: \"3px solid grey\",\r\n            height: \"90%\",\r\n            width: \"27%\",\r\n            borderRadius: 50,\r\n            marginTop: \"2%\",\r\n            // marginLeft:\"6%\",\r\n        },\r\n        carbonDropAct: {\r\n            backgroundColor: \"black\",\r\n            border: \"3px solid grey\",\r\n            borderRadius: 50,\r\n            marginTop: \"2%\",\r\n            height: \"3%\",\r\n            width: \"1.5%\",\r\n\r\n        },\r\n        carbonActualText: {\r\n            color: \"grey\",\r\n            fontSize: \"16pt\",\r\n            marginLeft: \"28%\",\r\n            marginTop: \"-5%\",\r\n            fontWeight: 501,\r\n        },\r\n        valueActual: {\r\n            backgroundColor: \"white\",\r\n            border: \"3px solid #539bc5\",\r\n            height: \"90%\",\r\n            width: \"27%\",\r\n            borderRadius: 50,\r\n            marginTop: \"2%\",\r\n            // marginLeft: 104,\r\n        },\r\n        valueActualText: {\r\n            color: \"black\",\r\n            fontSize: \"16pt\",\r\n            marginLeft: \"28%\",\r\n            marginTop: \"-5%\",\r\n            fontWeight: 501,\r\n        },\r\n        initialValues: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"36%\",\r\n            height: \"17%\",\r\n            marginTop: \"12%\",\r\n            marginLeft: \"57%\",\r\n        },\r\n        initialCarbon: {\r\n            backgroundColor: \"black\",\r\n            border: \"3px solid grey\",\r\n            // height: \"100%\",\r\n            width: \"34%\",\r\n            borderRadius: 50,\r\n\r\n        },\r\n        initialValue: {\r\n            backgroundColor: \"white\",\r\n            border: \"3px solid #539bc5\",\r\n            // height: \"100%\",\r\n            width: \"34%\",\r\n            borderRadius: 50,\r\n\r\n        },\r\n        initialCarbonText: {\r\n            color: \"grey\",\r\n            fontSize: \"11pt\",\r\n            marginLeft: \"23%\",\r\n            marginTop: \"-19%\",\r\n            // fontWeight:501,\r\n        },\r\n        initialValueText: {\r\n            color: \"black\",\r\n            fontSize: \"11pt\",\r\n            marginLeft: \"23%\",\r\n            marginTop: \"-19%\",\r\n            // fontWeight:501,\r\n        },\r\n        synLeft: {\r\n            backgroundColor: \"white\",\r\n            border: \"2px solid #539bc5\",\r\n            height: \"10%\",\r\n            width: \"10%\",\r\n            marginTop: \"-18%\",\r\n            marginLeft: \"9%\",\r\n            borderRadius: 50,\r\n        },\r\n        synMid: {\r\n            backgroundColor: \"white\",\r\n            border: \"2px solid #539bc5\",\r\n            height: \"10%\",\r\n            borderRadius: 50,\r\n            width: \"10%\",\r\n            marginTop: \"-21%\",\r\n            marginLeft: \"34%\",\r\n\r\n\r\n        },\r\n        synLeftText: {\r\n            color: \"black\",\r\n            fontSize: \"7pt\",\r\n            marginLeft: \"1%\",\r\n            marginTop: \"-5%\",\r\n        },\r\n        synMidText: {\r\n            // fontWeight:501,\r\n            color: \"black\",\r\n            fontSize: \"7pt\",\r\n            marginLeft: \"1%\",\r\n            marginTop: \"-5%\",\r\n        },\r\n        companyName: {\r\n            marginTop: \"30.5%\",\r\n            marginLeft: \"8.5%\",\r\n            fontSize: \"10pt\",\r\n\r\n        },\r\n        directionValue1: {},\r\n        directionValue2: {\r\n            display: \"flex\",\r\n            fontSize: 18,\r\n            // backgroundColor:\"green\",\r\n\r\n            width: \"32px\",\r\n            height: \"32px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n\r\n        },\r\n        directionValue3: {},\r\n        directionValue4: {},\r\n    }))\r\n\r\n\r\nexport const CompanyCard3 = ({G, item, name , idCard, playerID, children, moves, ctx,setItems}) => {\r\n\r\n    const classes = useStyles(item);\r\n    const [value, setValue] = useState(G.companyDeck[idCard-1].actualValue);\r\n\r\n// console.log({idCard});\r\n\r\n\r\n\r\n\r\n    // let topCard = G.find((item)=> item.id === 1)\r\n    // console.log(topCard.actualValue)\r\n\r\n\r\n    // const [{ isDragging }, drag] = useDrag(\r\n    //   {\r\n    //     item: {type: \"color\"},\r\n    //\r\n    //     collect: (monitor) => ({\r\n    //       isDragging: monitor.isDragging()\r\n    //     })\r\n    //   }\r\n    //\r\n    // );\r\n    const ref = useRef(null);\r\n\r\n    const [, drop] = useDrop(\r\n    // ()=>(\r\n        {\r\n        accept: 'bid',\r\n            drop(_item){\r\n\r\n                // if (value!=G.companyDeck[idCard-1].actualValue){\r\n                //     setValue(G.companyDeck[idCard-1].actualValue)\r\n                // }\r\n                moves.IncreaseCoin(name,idCard);\r\n\r\n                    setValue(G.companyDeck[idCard-1].actualValue)\r\n                setValue(value+1)\r\n                    // console.log(G.companyDeck[idCard-1].actualValue);\r\n\r\n                // setItems(G.companyDeck);\r\n\r\n\r\n            },\r\n\r\n\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            isOverCurrent: monitor.isOver(),\r\n\r\n        }),\r\n    }\r\n    // ),[setItems],\r\n    //\r\n    );\r\n\r\n\r\n    // const [{isDragging}, drag] = useDrag({\r\n    //     item: { type: 'companyCard'},\r\n    //\r\n    //     collect: (monitor) => ({\r\n    //         isDragging: monitor.isDragging(),\r\n    //     }),\r\n    // });\r\n\r\n    // const opacity = isDragging ? 0 : 1;\r\n\r\n\r\n    //   const containerStyle = useMemo(\r\n    //   () => ({\r\n    //     opacity: isDragging ? 0.4 : 1,\r\n    //\r\n    //   }),\r\n    //   [isDragging]\r\n    // );\r\n\r\n\r\n    const cardDirectionClass = (item, moves) => {\r\n\r\n        if (item.direction === 2) {\r\n\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"105px\"} paddingTop={\"80px\"}\r\n                     paddingLeft={\"7px\"}>\r\n                    <CoinCarbon item={item}/>\r\n                    <Coin moves={moves} setValue={setValue} setItems={setItems} G={G} ctx={ctx} value={value} name={name} item={item} idCard={idCard}/>\r\n                    {children}\r\n                </Box>\r\n            );\r\n        }\r\n        if (item.direction === 1) {\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"105px\"} paddingTop={\"80px\"}\r\n                     paddingLeft={\"7px\"}>\r\n                    <Coin moves={moves} setValue={setValue} setItems={setItems} G={G} ctx={ctx} value={value} name={name} item={item} idCard={idCard}/>\r\n                    <CoinCarbon item={item}/>\r\n                    {children}\r\n                </Box>\r\n            );\r\n        }\r\n        if (item.direction === 3) {\r\n\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"106px\"} paddingTop={\"6px\"}\r\n                     paddingLeft={\"7px\"}>\r\n                    <CoinCarbon item={item}/>\r\n                    <Coin moves={moves} setValue={setValue} setItems={setItems} G={G} ctx={ctx} value={value} name={name} item={item} idCard={idCard}/>\r\n                    {children}\r\n\r\n\r\n                </Box>\r\n            );\r\n        }\r\n        if (item.direction === 4) {\r\n\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"106px\"} paddingTop={\"6px\"}\r\n                     paddingLeft={\"7px\"}>\r\n                    <Coin moves={moves} setValue={setValue} G={G} setItems={setItems} ctx={ctx} value={value} name={name} item={item} idCard={idCard}/>\r\n                    <CoinCarbon item={item}/>\r\n                    {children}\r\n                </Box>\r\n            );\r\n        }\r\n    }\r\n    drop(ref);\r\n    return (\r\n        <div ref={ref}>\r\n            <Box className={`${classes.mainSection}`}>\r\n                <Box  className={`${classes.backImage}`}>\r\n                    {cardDirectionClass(item, moves)}\r\n                    {children}\r\n                </Box>\r\n            </Box>\r\n            {children}\r\n        </div>\r\n\r\n    );\r\n};\r\n","import React, {useState, useEffect, useMemo, memo, useRef} from \"react\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        placeBidBackGroundFill:{\r\n            backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/Place_bid_green.svg\"})`,\r\n\r\n        },\r\n        placeBid: {\r\n            // backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/Place_bid_green.svg\"})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: '100%',\r\n            backgroundRepeat: 'no-repeat',\r\n            alignContent: \"center\",\r\n            borderRadius: 8,\r\n            width: \"240px\",\r\n            height: \"60px\",\r\n        },\r\n    }));\r\n\r\n\r\nconst PlaceBid = ({G, item, name , idCard,children,placeBid,setStartBid,presentBid,setPresentBid}) => {\r\n\r\n    const classes = useStyles(item);\r\n    // const [value, setValue] = useState(G.companyDeck[idCard-1].actualValue);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const [, drop] = useDrop(\r\n\r\n        {\r\n            accept: 'bid',\r\n            drop(_item){\r\n            // setStartBid(G.companyDeck[idCard-1].actualValue)\r\n            setPresentBid(presentBid+1)\r\n\r\n            },\r\n\r\n\r\n            collect: (monitor) => ({\r\n                isOver: monitor.isOver(),\r\n                isOverCurrent: monitor.isOver(),\r\n\r\n            }),\r\n        }\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n    drop(ref);\r\n    return (\r\n        <div ref={ref}>\r\n            <Box\r\n                className={placeBid == 1 ? clsx(classes.placeBid, classes.placeBidBackGroundFill) : null}>\r\n\r\n            </Box>\r\n\r\n            {children}\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default PlaceBid;","import React, {useEffect, useRef, useState} from 'react';\nimport {DndProvider, useDrag, useDrop, DragSource, DropTarget, ConnectDragSource, ConnectDropTarget} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport {TouchBackend} from \"react-dnd-touch-backend\";\nimport '../../styles/App.css';\nimport {CELL_NAMES} from \"./companyCellNames\";\nimport CompanyCard from \"../CompanyCard\";\nimport {CompanyCard3} from \"../CompanyCard3/SourceBox\";\nimport CarbonEventCard from \"../CarbonEventCard\";\n// import {SourceBox} from \"../TestCellDnd/IsCard\";\nimport {companyDeck} from \"../../constants/companyDeck\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Box, Typography} from '@material-ui/core'\nimport {carbonDeck} from \"../../constants/carbonDeck\";\nimport {Game} from \"../../Game\";\nimport {teamDeck} from \"../../constants/teamDeck\";\nimport TeamCard from \"../TeamCard\";\nimport EventTeamPlace from \"../EventTeamPlace\";\nimport {useTimer} from 'react-timer-hook';\nimport clsx from 'clsx';\nimport PlaceBid from '../PlaceBid'\nimport {number} from \"prop-types\";\n\n// const image = \"../img/company/14/background-1.png\"\nconst useStyles = makeStyles(theme => ({\n    bankFlex: {\n        width: 120,\n        height: 120,\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/company/Avatar_Bank.svg\"})`,\n        // ${process.env.PUBLIC_URL + '/img/company/cc12.png'}/\n        // position:\"absolute\",\n        alignContent: \"center\",\n        // margin:\"0 auto\",\n        zIndex: 0,\n\n        // border: '1px solid #a49f9f',\n    },\n    companyBankFlex: {\n        display: \"flex\",\n        width: \"1620px\",\n        justifyContent: \"space-around\",\n        marginLeft: \"180px\",\n        marginTop: \"60px\",\n\n    },\n    eventButtonAGreen: {\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        backgroundColor: \"#20eb09\",\n        borderRadius: 8,\n        margin: \"0 auto\",\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/eventbuttons/a_transparent.svg\"})`,\n    },\n    eventButtonAWhite: {\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        backgroundColor: \"white\",\n        margin: \"0 auto\",\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/eventbuttons/a_transparent.svg\"})`,\n    },\n    greenBackground: {\n        backgroundColor: \"#20eb09\",\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/eventbuttons/b_transparent.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n    },\n    whiteBackground: {\n        backgroundColor: \"white\",\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/eventbuttons/b_transparent.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n    },\n    timer: {\n        paddingLeft: \"15px\",\n        paddingTop: \"32px\",\n    },\n    auctionTest:{\n        backgroundColor: \"white\",\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n\n    },\n    startBid:{\n        backgroundColor: \"white\",\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/Start_bid_no_value_grey.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n        width:\"60px\",\n        height:\"60px\",\n    },\n    leadingBidder:{\n        // backgroundColor: \"white\",\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/Leading_bidder_A_grey.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n        width:\"60px\",\n        height:\"60px\",\n    },\n    presentBid:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/present_bid_grey_no_value.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n        width:\"60px\",\n        height:\"60px\",\n        backgroundColor:\"#e5e5e5\",\n        // paddingTop:\"26px\",\n        // marginLeft:\"26px\",\n    },\n    presentBidText:{\n        paddingTop:\"12px\",\n        textAlign:\"center\",\n    },\n    timeLeft:{\n        width:\"60px\",\n        height:\"60px\",\n    },\n    placeBidBackGroundClear:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/Place_bid_green.svg\"})`,\n    },\n    placeBidBackGroundFill:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/Place_bid_green.svg\"})`,\n\n    },\n    placeBid:{\n        // backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/auctionButtons/Place_bid_green.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n        width:\"240px\",\n        height:\"60px\",\n    },\n    turnCarbon:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Turn_Carbon_event_Card_GREEN.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n    },\n    pickCarbonEventFlow:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Pick_Carbon_Event_GREEN.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n    },\n    playGRO:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Play_GRO_OR_GEO_green.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n\n    },\n    negativeValue:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Deal_with_negative_Company_value_GREEN.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8,\n    },\n    buySellCompany:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Buy_Sell_Company_on_auction_GREEN.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8\n    },\n    takeOverGEO:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Takeover_Company_using_GEO_Green.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8\n    },\n    playGSOInTurn:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Play_GSO_green.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8\n    },\n    hireTeam:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Hire_team_green.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8\n    },\n    restructure:{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/flowChart/Restructure_GREEN.svg\"})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        alignContent: \"center\",\n        borderRadius: 8\n    },\n\n}))\n\n\nconst MovableCompanyCard = ({\n                                name, idCard, index, currentCellName, moveCardHandler,\n                                setItems, G, playerID, item, items, ctx, moves\n                            }) => {\n\n\n    const changeItemCell = (currentItem, cellName) => {\n        setItems((prevState) => {\n            return prevState.map(e => {\n                return {\n                    ...e,\n                    cell: e.name === currentItem.name ? cellName : e.cell\n                }\n            })\n        });\n    }\n\n    // console.log(G);\n\n    const ref = useRef(null);\n\n    const [, drop] = useDrop({\n        accept: 'companyCard',\n\n        // hover(item: any, monitor) {\n        //     if (!ref.current) {\n        //         return;\n        //     }\n        //     const dragIndex = item.public;\n        //     const hoverIndex = public;\n        //     // Don't replace items with themselves\n        //     if (dragIndex === hoverIndex) {\n        //         return;\n        //     }\n        //     // Determine rectangle on screen\n        //     const hoverBoundingRect = ref.current?.getBoundingClientRect();\n        //     // Get vertical middle\n        //     const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n        //     // Determine mouse position\n        //     const clientOffset = monitor.getClientOffset();\n        //     // Get pixels to the top\n        //     const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n        //     // Only perform the move when the mouse has crossed half of the items height\n        //     // When dragging downwards, only move when the cursor is below 50%\n        //     // When dragging upwards, only move when the cursor is above 50%\n        //     // Dragging downwards\n        //     if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        //         return;\n        //     }\n        //     // Dragging upwards\n        //     if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        //         return;\n        //     }\n        //     // Time to actually perform the action\n        //     moveCardHandler(dragIndex, hoverIndex);\n        //     // moves.DiscardCompany(G ,ctx,2);\n        //     // Note: we're mutating the monitor item here!\n        //     // Generally it's better to avoid mutations,\n        //     // but it's good here for the sake of performance\n        //     // to avoid expensive public searches.\n        //     item.public = hoverIndex;\n        // },\n    });\n\n    const [{isDragging}, drag] = useDrag({\n        item: {index, name, idCard, currentCellName, type: 'companyCard'},\n        end: (item, monitor) => {\n\n            const dropResult = monitor.getDropResult();\n            moves.MoveCard(name, idCard);\n\n\n            if (dropResult) {\n                const {name} = dropResult;\n                let playerId = [\"a\", \"b\", \"c\", \"d\", \"k\", \"l\"];\n                let cellId;\n\n                for (let j = 0; j < 6; j++) {\n                    for (let l = 0; l < 18; l++) {\n                        cellId = playerId[j].concat(l);\n                        switch (name) {\n                            case cellId :\n                                changeItemCell(item, cellId);\n                                return;\n                            default:\n                                break;\n                        }\n                    }\n                }\n            }\n        },\n\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n\n    // const opacity = isDragging ? 0 : 1;\n    //\n\n\n    drag(drop(ref));\n\n\n    return (\n        <div ref={ref}>\n            <CompanyCard3 setItems={setItems} ctx={ctx} G={G} item={item} name={name} idCard={idCard}\n                          playerID={playerID} moves={moves}/>\n\n        </div>\n    )\n\n}\n// const [playerNum,setPlayerNum] = useState(11)\nconst MovableTeamCard = ({\n                             name, index, currentCellName, moveCardHandler, setItems, G,\n                             playerID, item, setPlayerNum, playerNum, buttonBEvent, buttonAEvent,\n                             setButtonBEvent, setButtonAEvent,timeoutFinal , setNegativeValue,setPlayGRO,timeoutB,timeoutA,\n                         }) => {\n    let playerId = [\"j\"];\n    // const [playerNum,setPlayerNum] = useState(11)\n    let cellId;\n    const changeItemCell = (currentItem, cellName) => {\n\n\n        if (cellName == \"e0\" || cellName == \"e1\") {\n            cellId = playerId[0].concat(playerNum);\n            // let temp = playerNum\n            setPlayerNum(--playerNum);\n            console.log(playerNum);\n            setButtonAEvent(!buttonAEvent);\n            setButtonBEvent(!buttonBEvent);\n            // timeoutFinal();\n            setTimeout(timeoutA,15000);\n\n            setItems((prevState) => {\n\n                return prevState.map(e => {\n\n                    return {\n                        ...e,\n                        cell: e.name === currentItem.name ? cellId : e.cell\n                    }\n                })\n            });\n\n\n        } else {\n            setItems((prevState) => {\n                return prevState.map(e => {\n\n                    return {\n                        ...e,\n                        cell: e.name === currentItem.name ? cellName : e.cell\n                    }\n                })\n            });\n\n        }\n        ;\n\n\n    }\n\n\n    // console.log(ID);\n\n    const ref = useRef(null);\n\n    const [, drop] = useDrop({\n        accept: 'TeamCard',\n\n    });\n\n    const [{isDragging}, drag] = useDrag({\n        item: {index, name, currentCellName, type: 'TeamCard'},\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n\n            if (dropResult) {\n                const {name} = dropResult;\n                let playerId = [\"f\", \"g\", \"h\", \"i\", \"e\", \"j\",\"m\"];\n                let cellId;\n\n                for (let j = 0; j < 7; j++) {\n                    for (let l = 0; l < 12; l++) {\n                        cellId = playerId[j].concat(l);\n\n                        switch (name) {\n                            case cellId :\n                                changeItemCell(item, cellId);\n                                return;\n                            default:\n                                break;\n                        }\n                    }\n                }\n            }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const opacity = isDragging ? 0 : 1;\n\n    drag(drop(ref));\n\n    return (\n        <div ref={ref} style={{opacity}}>\n            <TeamCard G={G} item={item} playerID={playerID}/>\n        </div>\n    )\n}\n\nconst CompanyCell = ({children, className, name, title, G, ctx, ID}) => {\n    const [{isOver, canDrop}, drop] = useDrop({\n        accept: \"companyCard\",\n        drop: () => ({name: title}),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n\n    });\n\n\n    return (\n        <div ref={drop} className={className}>\n            {/* <p>{title}</p> */}\n            {children}\n        </div>\n    )\n}\n\nconst TeamCell = ({children, className, name, title, G, ctx, ID}) => {\n    const [{isOver, canDrop}, drop] = useDrop({\n        accept: \"TeamCard\",\n        drop: () => ({name: title}),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n            didDrop: monitor.didDrop(),\n        }),\n\n    });\n\n\n    return (\n        <div ref={drop} className={className}>\n            {/* <p>{title}</p> */}\n            {children}\n        </div>\n    )\n}\n\n\n// const bidCoinCell = ({children, title}) => {\n//     const [{isOver, canDrop}, drop] = useDrop({\n//         accept: 'bid' || \"\",\n//         drop: () => ({name: title}),\n//         collect: (monitor) => ({\n//             isOver: monitor.isOver(),\n//             canDrop: monitor.canDrop(),\n//         }),\n//\n//     });\n//\n//\n//     return (\n//         <div ref={drop}>\n//             {/* <p>{title}</p> */}\n//             {children}\n//         </div>\n//     )\n// }\n\n\nexport const PlayerHand = ({G, ctx, moves, ID, children}) => {\n\n    const [carbonEvent, setEvent] = useState(0);\n    const [chosenEvent, setChoice] = useState(0);\n    const [items, setItems] = useState(G.companyDeck);\n    const [teamCards, setTeamCards] = useState(teamDeck);\n    const [clickPhase, setClickPhase] = useState(true);\n    const [playGRO, setPlayGRO] = useState(0);\n    const [buttonAEvent, setButtonAEvent] = useState(0);\n    const [buttonBEvent, setButtonBEvent] = useState(0);\n    const [playerNum, setPlayerNum] = useState(11)\n    const [negativeValue, setNegativeValue] = useState(0);\n    const [buySellCompany,setBuySellCompany] = useState(0);\n    const [takeOverGEO,setTakeOverGEO] = useState(0);\n    const [playGSOInTurn,setPlayGSOInTurn] = useState(0);\n    const [hireTeam,setHireTeam] = useState(0);\n    const [restructure,setRestructure] = useState(0);\n    const [startBid,setStartBid] = useState(0);\n    const [leadingBidder,setLeadingBidder] = useState(0);\n    const [presentBid,setPresentBid] = useState(undefined);\n    const [timeLeft,setTimeLeft] = useState(0);\n    const [placeBid, setPlaceBid] = useState(0);\n\n\n    // console.log(testUpdate);\n    //TODO: this stops the board from update. Change to move cards. Needs to be fixed\n\n    // if (items != G.companyDeck){\n    //     setItems(G.companyDeck)\n    // }\n\n\n    // console.log(items);\n    const classes = useStyles(carbonDeck);\n    // G.companyDeck[1].cell = CELL_NAMES.b6\n\n    const isMobile = window.innerWidth < 600;\n\n    const card = G.players[0].handCompanyDeck[2];\n\n    // const moveCardHandler = (dragIndex, hoverIndex, G) => {\n    //\n    //     const dragItem = items[dragIndex];\n    //     // console.log(items);\n    //     if (dragItem) {\n    //\n    //         // moves.InitialDraw();\n    //\n    //         setItems((prevState => {\n    //             const copiedStateArray = [...prevState];\n    //\n    //             // remove item by \"hoverIndex\" and put \"dragItem\" instead\n    //             const prevItem = copiedStateArray.splice(hoverIndex, 1, dragItem);\n    //\n    //             // remove item by \"dragIndex\" and put \"prevItem\" instead\n    //             copiedStateArray.splice(dragIndex, 1, prevItem[0]);\n    //             // setItems(G.companyDeck);\n    //             return copiedStateArray;\n    //         }));\n    //     }\n    // };\n\n    const returnItemsForCompanyCell = (cellName) => {\n        //\n        // if (items != G.companyDeck){\n        //     setItems(G.companyDeck)\n        // }\n        // console.log(items);\n        return items.filter((item) => item.cell === cellName).map((item, index) => (\n            <MovableCompanyCard idCard={item.idValue}\n                                name={item.name}\n                                currentCellName={item.cell}\n                                setItems={setItems}\n                                index={index}\n                // moveCardHandler={moveCardHandler}\n                                item={item}\n                                items={items}\n                                G={G}\n                                playerID={ID}\n                                ctx={ctx}\n                                moves={moves}\n            />\n        ))\n    };\n\n    const {\n        a1,\n        a2,\n        a3,\n        a4,\n        a5,\n        a6,\n        a7,\n        a8,\n        a9,\n        a0,\n        b1,\n        b2,\n        b3,\n        b4,\n        b5,\n        b6,\n        b7,\n        b8,\n        b9,\n        b0,\n        c1,\n        c2,\n        c3,\n        c4,\n        c5,\n        c6,\n        c7,\n        c8,\n        c9,\n        c0,\n        d1,\n        d2,\n        d3,\n        d4,\n        d5,\n        d6,\n        d7,\n        d8,\n        d9,\n        d0,\n        f1,\n        f2,\n        f3,\n        f4,\n        f5,\n        f6,\n        f7,\n        f0,\n        e0,\n        e1,\n        g1,\n        g2,\n        g3,\n        g4,\n        g5,\n        g6,\n        g7,\n        g0,\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        h7,\n        h0,\n        i1,\n        i2,\n        i3,\n        i4,\n        i5,\n        i6,\n        i7,\n        i0,\n        j1,\n        j2,\n        j3,\n        j4,\n        j5,\n        j6,\n        j7,\n        j0,\n        j8,\n        j9,\n        j10,\n        j11,\n        j12,\n        k0,\n        k1,\n        k2,\n        k3,\n        k4,\n        k5,\n        k6,\n        k7,\n        k8,\n        k9,\n        k10,\n        k11,\n        k12,\n        k13,\n        k14,\n        k15,\n        k16,\n        k17,\n        k18,\n        l1,\n        m1,\n        m2,\n        m3,\n    } = CELL_NAMES;\n\n    const returnItemsForTeamCell = (cellName) => {\n\n        return teamCards.filter((item) => item.cell === cellName).map((item, index, G) => (\n            <MovableTeamCard key={item.id}\n                             name={item.name}\n                             currentCellName={item.cell}\n                             setItems={setTeamCards}\n                             index={index}\n                // moveCardHandler={moveCardHandler}\n                             G={G}\n                             item={item}\n                             playerID={ID}\n                             playerNum={playerNum}\n                             setPlayerNum={setPlayerNum}\n                             buttonnAEvent={buttonAEvent}\n                             buttonBEvent={buttonBEvent}\n                             setButtonAEvent={setButtonAEvent}\n                             setButtonBEvent={setButtonBEvent}\n                             setNegativeValue={setNegativeValue}\n                             setPlayGRO={setPlayGRO}\n                             timeoutA={timeoutA}\n            />\n        ))\n    };\n\n\n    const mapTeamBank = () => {\n\n        let cellId;\n        let bankId = [\"j\"];\n        let cellsList = [];\n        for (let i = 0; i < 12; i++) {\n            cellId = bankId[0].concat(i);\n            cellsList.push(\n                <TeamCell title={cellId} className={\"cellColumn\"}>\n                    {returnItemsForTeamCell(cellId)}\n                </TeamCell>\n            )\n\n        }\n        return cellsList;\n    }\n\n    const mapCompanyBank = () => {\n        let cellId;\n        let bankId = [\"k\"];\n        let cellsList = [];\n\n        for (let i = 0; i < 18; i++) {\n            cellId = bankId[0].concat(i);\n            cellsList.push(\n                <CompanyCell title={cellId} className={\"column testBorder\"}>\n                    {returnItemsForCompanyCell(cellId, G)}\n                </CompanyCell>\n            )\n\n        }\n        return cellsList;\n    }\n    const bidCoinCellPlace = ({moves, children, ...props}) => {\n\n\n        return (\n            <div className={\"bidCoinCell\"}>\n\n                <CompanyCell className={\"column\"}></CompanyCell>\n                {/*<div>bid: {G.bid}</div>*/}\n                {children}\n            </div>\n        )\n\n\n    };\n    const bidCell = (moves) => {\n\n\n        let cellIdBid = \"l1\";\n        return (\n            <Box display={\"flex\"} width={\"540px\"} height={\"120px\"} marginLeft={\"0px\"}>\n\n\n                <div className={\"bidContainer\"} width={\"120px\"}>\n                    <CompanyCell title={cellIdBid} className={\"column testBorder\"}>\n                        {returnItemsForCompanyCell(cellIdBid, G)}\n                    </CompanyCell>\n                    {/*{bidCoinCellPlace(moves, children)}*/}\n                    {/*<CompanyCell title={cellIdBid} className={\"cellColumn testBorder\"}>*/}\n                    {/*    {returnItemsForCompanyCell(cellIdBid)}*/}\n                    {/*</CompanyCell>*/}\n                    {/*<CompanyCell title={cellIdBid} className={\"column testBorder\"}>*/}\n                    {/*    {returnItemsForCompanyCell(cellIdBid)}*/}\n                    {/*</CompanyCell>*/}\n                    {/*<CompanyCell title={cellIdBid} className={\"column testBorder\"}>*/}\n                    {/*    {returnItemsForCompanyCell(cellIdBid)}*/}\n                    {/*</CompanyCell>*/}\n                </div>\n\n                <Box width={\"240px\"} height={\"120px\"} display={\"flex\"} flexWrap={\"wrap\"}>\n\n                    <Box className={startBid == 1 ? classes.startBid:null} width={\"60px\"} height={\"60px\"}></Box>\n                    <Box className={leadingBidder == 1 ? classes.leadingBidder:null} width={\"60px\"} height={\"60px\"}></Box>\n                    <Box className={presentBid >= 0 ? `${classes.presentBid} + \" \" + mainFont`:null} width={\"60px\"} height={\"60px\"}>\n                        <p className={classes.presentBidText}>{presentBid >= 0 ? presentBid : null}</p>\n                    </Box>\n                    <Box className={timeLeft == 1 ? classes.timeLeft:null} width={\"60px\"} height={\"60px\"}></Box>\n                    {/*<Box*/}\n                        <Box width={'240px'} height={'60px'}>\n                    {/*    className={placeBid == 1 ? clsx(classes.placeBid, classes.placeBidBackGroundFill) : null}>*/}\n\n                    {/*</Box>*/}\n                            <PlaceBid G={G} ctx={ctx} placeBid={placeBid} presentBid={presentBid} setStartBid={setStartBid} setPresentBid={setPresentBid} item={items}/>\n                        </Box>\n                </Box>\n\n                <Box display={\"flex\"} flexWrap={\"wrap\"}>\n                    <TeamCell title={m1} className={\"cellColumn\"}>\n                        {returnItemsForTeamCell(m1)}\n\n                    </TeamCell>\n                    <TeamCell title={m2} className={\"cellColumn\"}>\n                        {returnItemsForTeamCell(m2)}\n\n                    </TeamCell>\n                    <TeamCell title={m3} className={\"cellColumn\"}>\n                        {returnItemsForTeamCell(m3)}\n\n                    </TeamCell>\n                </Box>\n            </Box>\n\n\n        )\n    };\n\n    const EventTeamPlace = () => {\n\n\n        return (<div onClick={() => {\n            console.log(\"hey\")\n\n        }}>\n            <TeamCell title={e0} className={\"cellColumn\"}>\n                {returnItemsForTeamCell(e0)}\n            </TeamCell>\n            <TeamCell title={e1} className={\"cellColumn\"}>\n                {returnItemsForTeamCell(e1)}\n            </TeamCell>\n        </div>);\n    };\n\n    const QuarterTimer = ({\n                              expiryTimestamp, buttonAEvent,\n                              buttonBEvent,\n                              setButtonAEvent,\n                              setButtonBEvent,\n                              carbonEvent,\n\n                          }) => {\n        const {\n            seconds,\n            minutes,\n            hours,\n            days,\n            isRunning,\n            start,\n            pause,\n            stop,\n            resume,\n            restart,\n        } = useTimer({\n            expiryTimestamp, autoStart: false, onExpire: () => {\n                // setButtonAEvent(!buttonAEvent);\n                pause();\n            }\n        });\n        useEffect(() => {\n            start();\n        }, [carbonEvent]);\n        useEffect(() => {\n            // restart();\n        }, [setButtonAEvent, setButtonBEvent]);\n        return (\n            <>\n                <span>{minutes}</span>:<span>{seconds}</span>\n            </>\n        )\n    };\n\n    const CurrentLeaderTimer = ({\n                                    buttonAEvent,\n                                    buttonBEvent,\n                                    setButtonAEvent,\n                                    setButtonBEvent,\n                                    carbonEvent,\n                                }) => {\n        const time = new Date()\n        time.setSeconds(time.getSeconds() + 15);\n        return (\n            <Box>\n                <QuarterTimer expiryTimestamp={time}\n                              buttonnAEvent={buttonAEvent}\n                              buttonBEvent={buttonBEvent}\n                              setButtonAEvent={setButtonAEvent}\n                              setButtonBEvent={setButtonBEvent}\n                              carbonEvent={carbonEvent}/>\n\n            </Box>\n        )\n    };\n\n    const timeoutA = () => {\n        setButtonAEvent(0);\n    setButtonBEvent(0);\n    setNegativeValue(1)\n    setPlayGRO(0)\n        setTimeout(() => {\n            setNegativeValue(0)\n            setBuySellCompany(1)\n            setTakeOverGEO(1)\n            setPlayGSOInTurn(1)\n            setHireTeam(1)\n            setRestructure(1)\n        } ,15000)\n};\n\n\n\n    // const timeoutB = setTimeout(function(){\n    //     setButtonAEvent(0);\n    //     setButtonBEvent(0);\n    //     setNegativeValue(1)\n    //     setPlayGRO(0)\n    // }, 15000);\n\n    // const timeoutFinal = setTimeout(() => {\n    //     clearTimeout(timeoutFinal)\n    //     setButtonAEvent(0);\n    //     setButtonBEvent(0);\n    //     setNegativeValue(1);\n    //     setPlayGRO(0);\n    //     clearTimeout(timeoutB);\n    //     clearTimeout(timeoutA);\n    // }, 15000);\n\n\n\n// TODO: map handcompany into cells\n    return (\n        <>\n            <div className={\"teamBlock\"}>\n                <div className={\"flowTeam\"}>\n                    <div className={\"cellFlow\"}>\n                        <TeamCell title={f0} className='cellColumn '>\n                            {returnItemsForTeamCell(f0)}\n                        </TeamCell>\n                        <TeamCell title={f1} className='cellColumn '>\n                            {returnItemsForTeamCell(f1)}\n                        </TeamCell>\n                        <TeamCell title={f2} className='cellColumn '>\n                            {returnItemsForTeamCell(f2)}\n                        </TeamCell>\n                        <TeamCell title={f3} className='cellColumn'>\n                            {returnItemsForTeamCell(f3)}\n                        </TeamCell>\n                        <TeamCell title={f4} className='cellColumn'>\n                            {returnItemsForTeamCell(f4)}\n                        </TeamCell>\n                        <TeamCell title={f5} className='cellColumn'>\n                            {returnItemsForTeamCell(f5)}\n                        </TeamCell>\n                        <TeamCell title={f6} className='cellColumn'>\n                            {returnItemsForTeamCell(f6)}\n                        </TeamCell>\n                        <TeamCell title={f7} className='cellColumn'>\n                            {returnItemsForTeamCell(f7)}\n                        </TeamCell>\n\n                    </div>\n                    <div className={\"cellFlow\"}>\n                        <TeamCell title={g0} className='cellColumn '>\n                            {returnItemsForTeamCell(g0)}\n                        </TeamCell>\n                        <TeamCell title={g1} className='cellColumn '>\n                            {returnItemsForTeamCell(g1)}\n                        </TeamCell>\n                        <TeamCell title={g2} className='cellColumn '>\n                            {returnItemsForTeamCell(g2)}\n                        </TeamCell>\n                        <TeamCell title={g3} className='cellColumn'>\n                            {returnItemsForTeamCell(g3)}\n                        </TeamCell>\n                        <TeamCell title={g4} className='cellColumn'>\n                            {returnItemsForTeamCell(g4)}\n                        </TeamCell>\n                        <TeamCell title={g5} className='cellColumn'>\n                            {returnItemsForTeamCell(g5)}\n                        </TeamCell>\n                        <TeamCell title={g6} className='cellColumn'>\n                            {returnItemsForTeamCell(g6)}\n                        </TeamCell>\n                        <TeamCell title={g7} className='cellColumn'>\n                            {returnItemsForTeamCell(g7)}\n                        </TeamCell>\n\n                    </div>\n                </div>\n            </div>\n            <div className={\"companyBlock\"}>\n                <div className={\"companyFlex\"}>\n                    <div className=\"container\">\n                        <CompanyCell title={a0} className='column '>\n                            {returnItemsForCompanyCell(a0)}\n                        </CompanyCell>\n                        <CompanyCell title={a1} className='column '>\n                            {returnItemsForCompanyCell(a1)}\n                        </CompanyCell>\n                        <CompanyCell title={a2} className='column '>\n                            {returnItemsForCompanyCell(a2, G)}\n                        </CompanyCell>\n                        <CompanyCell title={a3} className='column'>\n                            {returnItemsForCompanyCell(a3, G)}\n                        </CompanyCell>\n                        <CompanyCell title={a4} className='column'>\n                            {returnItemsForCompanyCell(a4, G)}\n                        </CompanyCell>\n                        <CompanyCell title={a5} className='column'>\n                            {returnItemsForCompanyCell(a5, G)}\n                        </CompanyCell>\n                        <CompanyCell title={a6} className='column'>\n                            {returnItemsForCompanyCell(a6, G)}\n                        </CompanyCell>\n                        <CompanyCell title={a7} className='column'>\n                            {returnItemsForCompanyCell(a7, G)}\n                        </CompanyCell>\n                        <CompanyCell title={a8} className='column'>\n                            {returnItemsForCompanyCell(a8, G)}\n                        </CompanyCell>\n                        <CompanyCell title={a9} className='column'>\n                            {returnItemsForCompanyCell(a9, G)}\n                        </CompanyCell>\n                    </div>\n                    <div className={\"eventCard\"}>\n                        <CarbonEventCard carbonEvent={carbonEvent} chosenEvent={chosenEvent} setEvent={setEvent}\n                                         setChoice={setChoice} moves={moves}\n                                         returnItemsForTeamCell={returnItemsForTeamCell}\n                                         setButtonAEvent={setButtonAEvent} setButtonBEvent={setButtonBEvent}\n                                         buttonAEvent={buttonAEvent} buttonBEvent={buttonBEvent}\n                                         clickPhase={clickPhase} setClickPhase = {setClickPhase}\n\n                        />\n                        <Box display={\"flex\"} flexWrap={\"wrap\"} width={\"60px\"} height={\"240px\"}>\n                            {/*{EventTeamPlace()}*/}\n                            <div onClick={() => {\n                                console.log(\"hey\");\n                                setButtonAEvent(!buttonAEvent);\n                                setClickPhase(3);\n                                setPlayGRO(1);\n                                // const timeoutA =  setTimeout(function(){\n                                //     setButtonAEvent(0);\n                                //     setButtonBEvent(0);\n                                //     setNegativeValue(1)\n                                //     setPlayGRO(0)\n                                // }, 15000);\n                               // const myTimeOut = setTimeout(timeoutA,15000);\n                                // clearTimeout(timeoutB);\n                                // return myTimeOut;\n                                // testTimer();\n\n                            }}>\n                                <Box className={buttonAEvent == 1 ? classes.eventButtonAGreen :\n                                    classes.eventButtonAWhite}>\n                                    <TeamCell title={e0} className={\"cellColumn\"}>\n                                        {returnItemsForTeamCell(e0)}\n                                    </TeamCell>\n                                </Box>\n                            </div>\n                            <div onClick={() => {\n                                console.log(\"hey\");\n                                setButtonBEvent(!buttonAEvent);\n                                setClickPhase(3);\n                                setPlayGRO(1);\n                                // timeoutB();\n                                // clearTimeout(testTimer);\n                                console.log('cleared?');\n\n                            }}>\n                                <Box className={buttonBEvent == 1 ? classes.greenBackground :\n                                    classes.whiteBackground}>\n                                    <TeamCell title={e1} className={\"cellColumn\"}>\n                                        {returnItemsForTeamCell(e1)}\n                                    </TeamCell>\n                                </Box>\n                            </div>\n\n                        </Box>\n                    </div>\n                    <div className=\"container\">\n                        <CompanyCell title={b0} className='column'>\n                            {returnItemsForCompanyCell(b0, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b1} className='column'>\n                            {returnItemsForCompanyCell(b1, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b2} className='column'>\n                            {returnItemsForCompanyCell(b2, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b3} className='column'>\n                            {returnItemsForCompanyCell(b3, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b4} className='column'>\n                            {returnItemsForCompanyCell(b4, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b5} className='column'>\n                            {returnItemsForCompanyCell(b5, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b6} className='column'>\n                            {returnItemsForCompanyCell(b6, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b7} className='column'>\n                            {returnItemsForCompanyCell(b7, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b8} className='column'>\n                            {returnItemsForCompanyCell(b8, G)}\n                        </CompanyCell>\n                        <CompanyCell title={b9} className='column'>\n                            {returnItemsForCompanyCell(b9, G)}\n                        </CompanyCell>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className={classes.companyBankFlex}>\n                {/*<div className={classes.bankFlex}>*/}\n\n                {/*</div>*/}\n                <div className={\"teamBank\"}>\n                    {mapTeamBank()}\n                </div>\n                <div className={\"companyBank\"}>\n                    {mapCompanyBank()}\n                </div>\n            </div>\n            <div className={\"companyBlock lower\"}>\n                <div className={\"companyFlex\"}>\n                    <div className=\"container\">\n                        <CompanyCell title={c0} className='column '>\n                            {returnItemsForCompanyCell(c0, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c1} className='column '>\n                            {returnItemsForCompanyCell(c1, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c2} className='column '>\n                            {returnItemsForCompanyCell(c2, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c3} className='column'>\n                            {returnItemsForCompanyCell(c3, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c4} className='column'>\n                            {returnItemsForCompanyCell(c4, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c5} className='column'>\n                            {returnItemsForCompanyCell(c5, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c6} className='column'>\n                            {returnItemsForCompanyCell(c6, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c7} className='column'>\n                            {returnItemsForCompanyCell(c7, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c8} className='column'>\n                            {returnItemsForCompanyCell(c8, G)}\n                        </CompanyCell>\n                        <CompanyCell title={c9} className='column'>\n                            {returnItemsForCompanyCell(c9, G)}\n                        </CompanyCell>\n                    </div>\n                    {bidCell(moves)}\n                    <div className=\"container\">\n                        <CompanyCell title={d0} className='column '>\n                            {returnItemsForCompanyCell(d0, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d1} className='column '>\n                            {returnItemsForCompanyCell(d1, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d2} className='column '>\n                            {returnItemsForCompanyCell(d2, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d3} className='column'>\n                            {returnItemsForCompanyCell(d3, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d4} className='column'>\n                            {returnItemsForCompanyCell(d4, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d5} className='column'>\n                            {returnItemsForCompanyCell(d5, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d6} className='column'>\n                            {returnItemsForCompanyCell(d6, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d7} className='column'>\n                            {returnItemsForCompanyCell(d7, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d8} className='column'>\n                            {returnItemsForCompanyCell(d8, G)}\n                        </CompanyCell>\n                        <CompanyCell title={d9} className='column'>\n                            {returnItemsForCompanyCell(d9, G)}\n                        </CompanyCell>\n                    </div>\n                </div>\n            </div>\n            <div className={\"teamBlock\"}>\n                <div className={\"flowTeam\"}>\n                    <div className={\"cellFlow\"}>\n                        <TeamCell title={h0} className='cellColumn '>\n                            {returnItemsForTeamCell(h0)}\n                        </TeamCell>\n                        <TeamCell title={h1} className='cellColumn '>\n                            {returnItemsForTeamCell(h1)}\n                        </TeamCell>\n                        <TeamCell title={h2} className='cellColumn '>\n                            {returnItemsForTeamCell(h2)}\n                        </TeamCell>\n                        <TeamCell title={h3} className='cellColumn'>\n                            {returnItemsForTeamCell(h3)}\n                        </TeamCell>\n                        <TeamCell title={h4} className='cellColumn'>\n                            {returnItemsForTeamCell(h4)}\n                        </TeamCell>\n                        <TeamCell title={h5} className='cellColumn'>\n                            {returnItemsForTeamCell(h5)}\n                        </TeamCell>\n                        <TeamCell title={h6} className='cellColumn'>\n                            {returnItemsForTeamCell(h6)}\n                        </TeamCell>\n                        <TeamCell title={h7} className='cellColumn'>\n                            {returnItemsForTeamCell(h7)}\n                        </TeamCell>\n\n                    </div>\n\n                    <Box className={\"flowChart\"}  display={\"flex\"} flexWrap={\"wrap\"} height={\"120px\"} width={\"540px\"} mt={'-60px'}>\n                        <Box className={\"timers\"} height={\"120px\"} width={\"60px\"}>\n                        <Box className={`${classes.timer} + \" \" + mainFont`} width={\"60px\"} height={\"60px\"} >\n                            <CurrentLeaderTimer\n                                buttonnAEvent={buttonAEvent}\n                                            buttonBEvent={buttonBEvent}\n                                            setButtonAEvent={setButtonAEvent}\n                                            setButtonBEvent={setButtonBEvent}\n                                            carbonEvent={carbonEvent}\n                            />\n                        </Box>\n                            <Box   width={\"60px\"} height={\"60px\"} >\n\n                            </Box>\n                        </Box>\n                        <Box display={\"flex\"} flexWrap={\"wrap\"} className={\"pickCarbon\"}width={\"60px\"} height={\"60px\"}>\n                            <Box width={\"60px\"} height={\"30px\"} className={clickPhase == 1 ? classes.turnCarbon :\n                                null }>\n\n                            </Box>\n                            <Box onClick={() => {\n                                console.log(\"hey\")\n                                setButtonAEvent(!buttonAEvent)\n                                setClickPhase(3)\n\n                            }}\n                            className={clickPhase == false ? classes.pickCarbonEventFlow : null } width={\"60px\"} height={\"30px\"}>\n\n                            </Box>\n                        </Box>\n                        <Box className={\"flowBlock3\"} display={\"flex\"} flexWrap={\"wrap\"} width={\"120px\"} height={\"120px\"}>\n                            <Box className={ playGRO == 1 ? classes.playGRO : null } width={\"60px\"} height={\"120px\"} ></Box>\n                            <Box className={negativeValue == 1 ? classes.negativeValue : null } width={\"60px\"} height={\"120px\"}></Box>\n                        </Box>\n                        <Box className={\"flowBlock4\"} display={\"flex\"} flexWrap={\"wrap\"} width={\"60px\"} height={\"120px\"}>\n                            <Box width={\"60px\"} height={\"30px\"} onClick={()=>{\n                                // setBuySellCompany(1)\n                                setTakeOverGEO(0)\n                                setPlayGSOInTurn(0)\n                                setHireTeam(0)\n                                setRestructure(0)\n                                setStartBid(1)\n                                setPlaceBid(1)\n                                setLeadingBidder(1)\n                                setPresentBid(1)\n                                setTimeLeft(1)\n                                setPresentBid(0)\n                            }} className={ buySellCompany == 1 ? classes.buySellCompany : null }></Box>\n                            <Box width={\"60px\"} height={\"30px\"}></Box>\n                            <Box width={\"60px\"} height={\"60px\"}></Box>\n                        </Box>\n\n{/*//TODO make a function that is triggered here that stops the timeout inside the component*/}\n\n                        <Box className={\"flowBlock5\"} display={\"flex\"} flexWrap={\"wrap\"} width={\"60px\"} height={\"120px\"}>\n                            <Box width={\"60px\"} height={\"30px\"} className={ takeOverGEO == 1 ? classes.takeOverGEO : null }></Box>\n                            <Box width={\"60px\"} height={\"30px\"}></Box>\n                            <Box width={\"60px\"} height={\"60px\"}></Box>\n                        </Box>\n                        <Box className={\"flowBlock6\"} display={\"flex\"} flexWrap={\"wrap\"} width={\"60px\"} height={\"120px\"}>\n                            <Box width={\"60px\"} height={\"60px\"} className={ playGSOInTurn == 1 ? classes.playGSOInTurn : null }></Box>\n                            <Box width={\"60px\"} height={\"60px\"}></Box>\n                        </Box>\n                        <Box className={\"flowBlock7\"} display={\"flex\"} flexWrap={\"wrap\"} width={\"60px\"} height={\"120px\"}>\n                            <Box width={\"60px\"} height={\"30px\"} className={ hireTeam == 1 ? classes.hireTeam : null }></Box>\n                            <Box width={\"60px\"} height={\"30px\"}></Box>\n                            <Box width={\"60px\"} height={\"60px\"}></Box>\n                        </Box>\n                        <Box className={\"flowBlock8\"} display={\"flex\"} flexWrap={\"wrap\"} width={\"60px\"} height={\"120px\"}>\n                            <Box width={\"60px\"} height={\"120px\"} className={ restructure == 1 ? classes.restructure : null }></Box>\n                        </Box>\n\n                    </Box>\n                    <div className={\"cellFlow\"}>\n                        <TeamCell title={i0} className='cellColumn '>\n                            {returnItemsForTeamCell(i0)}\n                        </TeamCell>\n                        <TeamCell title={i1} className='cellColumn '>\n                            {returnItemsForTeamCell(i1)}\n                        </TeamCell>\n                        <TeamCell title={i2} className='cellColumn '>\n                            {returnItemsForTeamCell(i2)}\n                        </TeamCell>\n                        <TeamCell title={i3} className='cellColumn'>\n                            {returnItemsForTeamCell(i3)}\n                        </TeamCell>\n                        <TeamCell title={i4} className='cellColumn'>\n                            {returnItemsForTeamCell(i4)}\n                        </TeamCell>\n                        <TeamCell title={i5} className='cellColumn'>\n                            {returnItemsForTeamCell(i5)}\n                        </TeamCell>\n                        <TeamCell title={i6} className='cellColumn'>\n                            {returnItemsForTeamCell(i6)}\n                        </TeamCell>\n                        <TeamCell title={i7} className='cellColumn'>\n                            {returnItemsForTeamCell(i7)}\n                        </TeamCell>\n\n                    </div>\n                </div>\n\n            </div>\n            {children}\n        </>\n    );\n}\n","import React, {useState} from \"react\";\nimport {\n    GridContextProvider,\n    GridDropZone,\n    GridItem,\n    swap,\n    move\n} from \"react-grid-dnd\";\nimport {Box, Grid, Typography} from '@material-ui/core'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport \"../styles/project.css\";\nimport NamePlate from \"./NamePlate\";\nimport CompanyHand from \"./CompanyHand\";\nimport CarbonEventCard from \"./CarbonEventCard\";\nimport TeamCard from \"./TeamCard\";\nimport {IsCard} from \"./TestCellDnd/IsCard\";\nimport {PlayerHand} from \"./CompanyHandLayout/PlayerHand\";\nimport {TeamHand} from \"./TeamHandLayout/TeamHand\";\nimport CategoryTreeFork from \"./TestCellDnd/Board\";\nimport Example from \"./CompanyCard3/example\"\n\n// const useStyles = makeStyles(theme => ({\n//     root:{\n//         width:200,\n//     },\n//     mainSection:   {\n//         // display: \"flex\",\n//         width: \"90px\",\n//         height: 90 ,\n//         borderRadius: 15,\n//         backgroundColor:\"white\",\n//         // border:\"black\",\n//         marginBottom:\"20px\",\n//         cursor:\"pointer\",\n//     },\n//\n//     backImage: card =>( {\n//         backgroundImage:`url(${card.synmain})`,\n//         backgroundPosition: 'center',\n//         backgroundSize: '86%',\n//         backgroundRepeat: 'no-repeat',\n//         height: '100%',\n//         width: '100%',\n//         display: 'block',\n//         margin: 'auto',\n//         // flexDirection:\"column\",\n//\n//         // marginTop: \"2%\",\n//         // marginLeft: \"3%%\",\n//     }),\n//     valuesMain: {},\n//     synergyMain: {},\n//     actualValues:{\n//         display:\"flex\",\n//         justifyContent:'space-between',\n//         width:\"87%\",\n//         height:\"26%\",\n//         marginLeft:\"6%\",\n//         marginTop:\"4%\",\n//         paddingTop:\"6%\",\n//     },\n//     carbonActual: {\n//         backgroundColor: \"black\",\n//         border: \"3px solid grey\",\n//         height: \"90%\",\n//         width: \"27%\",\n//         borderRadius: 50,\n//         marginTop:\"2%\",\n//         // marginLeft:\"6%\",\n//     },\n//\n//     carbonActualText: {\n//         color: \"grey\",\n//         fontSize: \"13pt\",\n//         marginLeft: \"28%\",\n//         marginTop: \"-5%\",\n//         fontWeight:501,\n//     },\n//     valueActual: {\n//         backgroundColor: \"white\",\n//         border: \"3px solid #539bc5\",\n//         height: \"90%\",\n//         width: \"27%\",\n//         borderRadius: 50,\n//         marginTop:\"2%\",\n//         // marginLeft: 104,\n//     },\n//     valueActualText: {\n//         color: \"black\",\n//         fontSize: \"13pt\",\n//         marginLeft: \"28%\",\n//         marginTop: \"-5%\",\n//         fontWeight:501,\n//     },\n//     initialValues:{\n//         display:\"flex\",\n//         justifyContent:\"space-between\",\n//         width:\"36%\",\n//         height:\"17%\",\n//         marginTop:\"12%\",\n//         marginLeft:\"57%\",\n//     },\n//     initialCarbon: {\n//         backgroundColor: \"black\",\n//         border: \"3px solid grey\",\n//         // height: \"100%\",\n//         width: \"34%\",\n//         borderRadius: 50,\n//\n//     },\n//     initialValue: {\n//         backgroundColor: \"white\",\n//         border: \"3px solid #539bc5\",\n//         // height: \"100%\",\n//         width: \"34%\",\n//         borderRadius: 50,\n//\n//     },\n//     initialCarbonText: {\n//         color: \"grey\",\n//         fontSize: \"8pt\",\n//         marginLeft: \"23%\",\n//         marginTop: \"-19%\",\n//         fontWeight:501,\n//     },\n//     initialValueText: {\n//         color: \"black\",\n//         fontSize: \"8pt\",\n//         marginLeft: \"23%\",\n//         marginTop: \"-19%\",\n//         fontWeight:501,\n//     },\n//     synLeft:{\n//         backgroundColor: \"white\",\n//         border: \"2px solid #539bc5\",\n//         height: \"10%\",\n//         width: \"10%\",\n//         marginTop: \"-18%\",\n//         marginLeft: \"9%\",\n//         borderRadius: 50,\n//     },\n//     synMid:{\n//         backgroundColor: \"white\",\n//         border: \"2px solid #539bc5\",\n//         height: \"10%\",\n//         borderRadius:50,\n//         width: \"10%\",\n//         marginTop: \"-21%\",\n//         marginLeft: \"34%\",\n//\n//\n//     },\n//     synLeftText:{\n//         color: \"black\",\n//         fontSize: \"6pt\",\n//         marginLeft: \"1%\",\n//         marginTop: \"-5%\",\n//         fontWeight:501,\n//\n//     },\n//     synMidText:{\n//         // fontWeight:501,\n//         color: \"black\",\n//         fontSize: \"6pt\",\n//         marginLeft: \"1%\",\n//         marginTop: \"-5%\",\n//         fontWeight:501,\n//\n//     },\n//     companyName:{\n//         marginTop: \"30.5%\",\n//         marginLeft:\"8.5%\",\n//         fontSize:\"8pt\",\n//\n//     },\n//     auction:{\n//         textAlign:\"center\",\n//         marginTop:\"17%\",\n//         fontSize:20,\n//     },\n//     bid:{\n//         backgroundColor: \"darkgreen\",\n//         border: \"5px solid white\",\n//         zIndex:0,\n//     },\n// }));\n\n\nexport const Card = ({G, ctx,moves,...props}) => {\n    // console.log(G);\n    // const playerID = [\"1\",\"2\",\"3\",\"4\"]\n    // console.log(G.players[0].handCompanyDeck);\n    // const classes = useStyles();\n    //    const [items, setItems] = React.useState({\n    //     first: G.players[0].handCompanyDeck,\n    //     second: G.players[1].handCompanyDeck,\n    //     third: G.players[2].handCompanyDeck,\n    //     fourth: G.players[3].handCompanyDeck,\n    //        main:G.companyDeck,\n    //        firstTeam: G.players[0].handTeamDeck,\n    //        secondTeam: G.players[1].handTeamDeck,\n    //        thirdTeam: G.players[2].handTeamDeck,\n    //        fourthTeam: G.players[3].handTeamDeck,\n    //        mainTeam:G.teamDeck,\n    // });\n\n\n    //  const CompanyCard = ({card,key,G}) => {\n    //     const classes = useStyles(card);\n    //\n    //     return (\n    //\n    //         <Box\n    //             className={`${classes.mainSection}`}\n    //         >\n    //\n    //\n    //             <Box className={`${classes.backImage}`}>\n    //                 <Box zIndex={1} className={classes.actualValues}>\n    //\n    //\n    //                     <Box className={classes.carbonActual}>\n    //                         <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\n    //                     </Box>\n    //\n    //\n    //                     <Box className={classes.valueActual}>\n    //                         <Typography className={`${classes.valueActualText} `}>{card.actualValue}</Typography>\n    //                     </Box>\n    //\n    //\n    //                 </Box>\n    //                 <Box zIndex={2} className={classes.initialValues}>\n    //                     <Box className={classes.initialValue}>\n    //                         <Typography className={classes.initialValueText}>{card.initialValue}</Typography>\n    //                     </Box>\n    //                     <Box className={classes.initialCarbon}>\n    //                         <Typography className={classes.initialCarbonText}>{card.initialCarbon}</Typography>\n    //                     </Box>\n    //                 </Box>\n    //\n    //\n    //                 <Box className={classes.synLeft}>\n    //                     <Typography className={classes.synLeftText}>+3</Typography>\n    //                 </Box>\n    //                 <Box className={classes.synMid}>\n    //                     <Typography className={classes.synMidText}>+3</Typography>\n    //                 </Box>\n    //                 <Box className={classes.companyName}>{card.companyName}</Box>\n    //\n    //             </Box>\n    //\n    //         </Box>\n    //\n    //\n    //     );\n    // };\n\n\n    // function onChangeCompany(sourceId, sourceIndex, targetIndex, targetId) {\n    //     if (targetId) {\n    //         const result = move(\n    //             items[sourceId],\n    //             items[targetId],\n    //             sourceIndex,\n    //             targetIndex\n    //         );\n    //         return setItems({\n    //             ...items,\n    //             [sourceId]: result[0],\n    //             [targetId]: result[1]\n    //         });\n    //     }\n    //\n    //     const result = swap(items[sourceId], sourceIndex, targetIndex);\n    //     return setItems({\n    //         ...items,\n    //         [sourceId]: result\n    //     });\n    //     console.log(items);\n    // }\n\n// console.log(player.handCompanyDeck);\n\n\n    return (\n        // <GridContextProvider onChange={onChangeCompany}>\n        <>\n            <Box paddingLeft={\"60px\"} paddingTop={\"60px\"}>\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1980px\"}>\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1860px\"}>*/}\n\n                    {/*    <Box position={\"absolute\"} >*/}\n                    {/*        <TeamHand G={G} ctx={ctx}/>*/}\n                    {/*    </Box>*/}\n\n                    {/*</Box>*/}\n                    <Box display={\"flex\"}>\n                        {/*<TeamCard />*/}\n                        {/*/!*<TeamCard />*!/*/}\n                        {/*<TeamCard />*/}\n                        {/*<NamePlate/>*/}\n\n                    </Box>\n\n                    {/*<NamePlate/>*/}\n                    {/*<NamePlate/>*/}\n\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\n                    {/*    <NamePlate G={G} playerId={0} />*/}\n\n                    {/*    <GridDropZone*/}\n                    {/*        className={\"handTeam\"}*/}\n                    {/*        id=\"firstTeam\"*/}\n                    {/*        boxesPerRow={2}*/}\n                    {/*        rowHeight={95}*/}\n                    {/*    >*/}\n                    {/*        {items.firstTeam.map(item => (*/}\n                    {/*            <GridItem key={item.id}>*/}\n                    {/*                <TeamCard G={G} card = {item}/>*/}\n                    {/*            </GridItem>*/}\n                    {/*        ))}*/}\n                    {/*    </GridDropZone>*/}\n                    {/*</Box>*/}\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\n\n\n                    {/*        <GridDropZone*/}\n                    {/*            className={\"handTeam\"}*/}\n                    {/*            id=\"secondTeam\"*/}\n                    {/*            boxesPerRow={3}*/}\n                    {/*            rowHeight={95}*/}\n                    {/*        >*/}\n                    {/*            {items.secondTeam.map(item => (*/}\n                    {/*                <GridItem key={item.id}>*/}\n                    {/*                    <TeamCard G={G} card = {item}/>*/}\n                    {/*                </GridItem>*/}\n                    {/*            ))}*/}\n                    {/*        </GridDropZone>*/}\n\n\n                    {/*    <NamePlate G={G} playerId={1} />*/}\n                    {/*</Box>*/}\n                </Box>\n                <Box className={\"container1\"} >\n                    {/*<Box width={\"620px\"}  display={\"flex\"} flexWrap={\"wrap\"}  justifyContent={\"space-between\"} >*/}\n\n                    {/*    <PlayerHand G={G} ctx={ctx} ID={0}/>*/}\n\n\n                    {/*</Box>*/}\n\n                    {/*<Box display={\"flex\"}>*/}\n                    {/*    <CarbonEventCard />*/}\n                    {/*        <TeamCard />*/}\n                    {/*</Box>*/}\n\n\n                    {/*<Box width={\"620px\"}   >*/}\n                    {/*    <PlayerHand G={G} ctx={ctx} ID={1}/>*/}\n\n                    {/*</Box>*/}\n                        <Box position={\"absolute\"}>\n                    {/*        <Box>*/}\n                            <PlayerHand ID={0} ctx={ctx} moves={moves} G={G} />\n                        </Box>\n\n\n                    {/*<Box  >*/}\n                    {/*    <CarbonEventCard />*/}\n\n                    {/*</Box>*/}\n\n\n                    {/*<GridDropZone*/}\n\n                    {/*    className={\"dropzone\"}*/}\n                    {/*    id=\"second\"*/}\n                    {/*    boxesPerRow={2}*/}\n                    {/*    rowHeight={95}*/}\n                    {/*>*/}\n                    {/*    {items.second.map(item => (*/}\n                    {/*        <GridItem key={item.id}>*/}\n                    {/*                    <CompanyCard card={item} key={item.id}  G={G} />*/}\n                    {/*        </GridItem>*/}\n                    {/*    ))}*/}\n                    {/*</GridDropZone>*/}\n                </Box>\n\n\n                {/*<GridDropZone*/}\n                {/*    className={\"mainTeamDeck\"}*/}\n                {/*    id = \"first\"*/}\n                {/*    boxesPerRow={9}*/}\n                {/*    rowHeight={95}*/}\n                {/*>*/}\n                {/*    {items.main.map(item => (*/}\n                {/*            <GridItem key={item.id}>*/}\n                {/*                <CompanyCard card={item} key={item.id}  G={G}/>*/}\n                {/*            </GridItem>*/}\n                {/*        ))}*/}\n\n                {/*</GridDropZone>*/}\n\n\n                {/*<Box display={\"flex\"} justifyContent={\"space-between\"} className={\"container1\"} mt={\"360px\"}>*/}\n                {/*<Box className={\"dropzone\"}>*/}\n                {/*<GridDropZone*/}\n\n\n                {/*    id=\"third\"*/}\n                {/*    boxesPerRow={2}*/}\n                {/*    rowHeight={95}*/}\n                {/*>*/}\n                {/*    {items.third.map(item => (*/}\n                {/*        <GridItem key={item.id}>*/}\n\n                {/*            <CompanyCard card={item} key={item.id}  G={G}/>*/}\n\n                {/*        </GridItem>*/}\n                {/*    ))}*/}\n                {/*</GridDropZone>*/}\n                {/*</Box>*/}\n\n                {/*<Box width={\"620px\"}   >*/}\n                {/*    <PlayerHand G={G} ctx={ctx} ID={2}  />*/}\n                {/*</Box>*/}\n\n                {/*<Box width={\"620px\"}   >*/}\n                {/*    <PlayerHand G={G} ctx={ctx} ID={3}/>*/}\n                {/*</Box>*/}\n                {/*<GridDropZone*/}\n\n                {/*    className={\"dropzone\"}*/}\n                {/*    id=\"fourth\"*/}\n                {/*    boxesPerRow={2}*/}\n                {/*    rowHeight={95}*/}\n                {/*>*/}\n                {/*    {items.fourth.map(item => (*/}\n                {/*        <GridItem key={item.id}>*/}\n                {/*            <CompanyCard card={item} key={item.id}  G={G} />*/}\n                {/*        </GridItem>*/}\n                {/*    ))}*/}\n                {/*</GridDropZone>*/}\n                {/*</Box>*/}\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1980px\"}>\n                    {/*<Box display={\"flex\"} width={\"1980px\"}>*/}\n                    {/*    <NamePlate/>*/}\n                    {/*    <TeamCard/>*/}\n                    {/*    <TeamCard/>*/}\n                    {/*    <TeamCard/>*/}\n                    {/*</Box>*/}\n                    <Box display={\"flex\"}>\n                        {/*<TeamCard />*/}\n                        {/*/!*<TeamCard />*!/*/}\n                        {/*<TeamCard />*/}\n                        {/*<NamePlate/>*/}\n\n                    </Box>\n                    <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1900px\"} mt={75} mr={15}>\n\n                    </Box>\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\n                    {/*    <NamePlate G={G} playerId={0} />*/}\n\n                    {/*    <GridDropZone*/}\n                    {/*        className={\"handTeam\"}*/}\n                    {/*        id=\"firstTeam\"*/}\n                    {/*        boxesPerRow={2}*/}\n                    {/*        rowHeight={95}*/}\n                    {/*    >*/}\n                    {/*        {items.firstTeam.map(item => (*/}\n                    {/*            <GridItem key={item.id}>*/}\n                    {/*                <TeamCard G={G} card = {item}/>*/}\n                    {/*            </GridItem>*/}\n                    {/*        ))}*/}\n                    {/*    </GridDropZone>*/}\n                    {/*</Box>*/}\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\n\n\n                    {/*        <GridDropZone*/}\n                    {/*            className={\"handTeam\"}*/}\n                    {/*            id=\"secondTeam\"*/}\n                    {/*            boxesPerRow={3}*/}\n                    {/*            rowHeight={95}*/}\n                    {/*        >*/}\n                    {/*            {items.secondTeam.map(item => (*/}\n                    {/*                <GridItem key={item.id}>*/}\n                    {/*                    <TeamCard G={G} card = {item}/>*/}\n                    {/*                </GridItem>*/}\n                    {/*            ))}*/}\n                    {/*        </GridDropZone>*/}\n\n\n                    {/*    <NamePlate G={G} playerId={1} />*/}\n                    {/*</Box>*/}\n                </Box>\n\n                {/*<Box marginTop={1} display={\"flex\"} justifyContent={\"space-between\"} width={\"1525px\"}>*/}\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\n                {/*        <NamePlate G={G} playerId={2} />*/}\n\n                {/*            <GridDropZone*/}\n                {/*                className={\"handTeam\"}*/}\n                {/*                id=\"thirdTeam\"*/}\n                {/*                boxesPerRow={3}*/}\n                {/*                rowHeight={95}*/}\n                {/*            >*/}\n                {/*                {items.thirdTeam.map(item => (*/}\n                {/*                    <GridItem key={item.id}>*/}\n                {/*                        <TeamCard G={G} card = {item}/>*/}\n                {/*                    </GridItem>*/}\n                {/*                ))}*/}\n                {/*            </GridDropZone>*/}\n\n                {/*    </Box>*/}\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\n\n                {/*            <GridDropZone*/}\n                {/*                className={\"handTeam handTeam1\"}*/}\n                {/*                id=\"fourthTeam\"*/}\n                {/*                boxesPerRow={3}*/}\n                {/*                rowHeight={95}*/}\n                {/*            >*/}\n                {/*            {items.fourthTeam.map(item => (*/}\n                {/*                <GridItem key={item.id}>*/}\n                {/*                    <TeamCard G={G} card = {item}/>*/}\n                {/*                </GridItem>*/}\n                {/*            ))}*/}\n                {/*            </GridDropZone>*/}\n\n                {/*        <NamePlate G={G} playerId={3} />*/}\n                {/*    </Box>*/}\n                {/*</Box>*/}\n\n                {/*<Box  position={\"absolute\"} marginTop={\"-208px\"} borderRadius={20} width={180} height={90} className={classes.bid} marginLeft={\"45%\"}>*/}\n                {/*    <Typography className={classes.auction}>Auction</Typography>*/}\n                {/*</Box>*/}\n            </Box>\n\n            {/*<Example/>*/}\n\n        </>\n\n    );\n}\n\n\n\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {DndProvider, useDrag, useDrop} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {TouchBackend} from \"react-dnd-touch-backend\";\r\nimport '../../styles/App.css';\r\nimport {CELL_NAMES} from \"./TeamCellNames\";\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport CompanyCard from \"../CompanyCard\";\r\nimport TeamCard from \"../TeamCard\";\r\nimport {teamDeck} from \"../../constants/teamDeck\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {carbonDeck} from \"../../constants/carbonDeck\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bankFlex: {\r\n        width: 120,\r\n        height: 120,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 10,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/avatars/Avatar_HR.svg\"})`,\r\n        // ${process.env.PUBLIC_URL + '/img/company/cc12.png'}/\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        // margin:\"0 auto\",\r\n        zIndex: 0,\r\n\r\n        // border: '1px solid #a49f9f',\r\n    },\r\n    companyBankFlex:{\r\n        display: \"flex\",\r\n        width: \"480px\",\r\n        justifyContent: \"space-around\",\r\n        marginLeft:\"-60px\",\r\n        marginTop:\"180px\",\r\n        marginBottom:\"60px\",\r\n\r\n    },\r\n}))\r\n\r\n\r\n\r\n\r\n\r\nconst MovableTeamCard = ({name, index, currentCellName, moveCardHandler, setItems, G,\r\n                             playerID, item}) => {\r\n    const changeItemCell = (currentItem, cellName) => {\r\n        setItems((prevState) => {\r\n            return prevState.map(e => {\r\n                return {\r\n                    ...e,\r\n                    cell: e.name === currentItem.name ? cellName : e.cell\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    // console.log(ID);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'TeamCard',\r\n        // hover(item: any, monitor) {\r\n        //     if (!ref.current) {\r\n        //         return;\r\n        //     }\r\n        //     const dragIndex = item.index;\r\n        //     const hoverIndex = index;\r\n        //     // Don't replace items with themselves\r\n        //     if (dragIndex === hoverIndex) {\r\n        //         return;\r\n        //     }\r\n        //     // Determine rectangle on screen\r\n        //     const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n        //     // Get vertical middle\r\n        //     const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n        //     // Determine mouse position\r\n        //     const clientOffset = monitor.getClientOffset();\r\n        //     // Get pixels to the top\r\n        //     const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n        //     // Only perform the move when the mouse has crossed half of the items height\r\n        //     // When dragging downwards, only move when the cursor is below 50%\r\n        //     // When dragging upwards, only move when the cursor is above 50%\r\n        //     // Dragging downwards\r\n        //     if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        //         return;\r\n        //     }\r\n        //     // Dragging upwards\r\n        //     if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        //         return;\r\n        //     }\r\n        //     // Time to actually perform the action\r\n        //     moveCardHandler(dragIndex, hoverIndex);\r\n        //     // Note: we're mutating the monitor item here!\r\n        //     // Generally it's better to avoid mutations,\r\n        //     // but it's good here for the sake of performance\r\n        //     // to avoid expensive public searches.\r\n        //     item.index = hoverIndex;\r\n        // },\r\n    });\r\n\r\n    const [{isDragging}, drag] = useDrag({\r\n        item: {index, name, currentCellName, type: 'TeamCard'},\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n\r\n            if (dropResult) {\r\n                const {name} = dropResult;\r\n                let playerId = [\"f\", \"g\", \"h\", \"i\",\"e\",\"j\"];\r\n                let cellId;\r\n\r\n                for (let j = 0; j < 6; j++) {\r\n                    for (let l = 0; l < 12; l++) {\r\n                        cellId = playerId[j].concat(l);\r\n\r\n                        switch (name) {\r\n                            case cellId :\r\n                                changeItemCell(item, cellId);\r\n                                return;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div ref={ref} style={{opacity}}>\r\n            <TeamCard G={G} item={item} playerID={playerID}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TeamCell = ({children, className, title, G, ctx, ID}) => {\r\n    const [{isOver, canDrop,didDrop}, drop] = useDrop({\r\n        accept: 'TeamCard',\r\n        drop: () => ({name: title}),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n            didDrop:monitor.didDrop(),\r\n        }),\r\n\r\n    });\r\n\r\n\r\n    return (\r\n        <div ref={drop} className={className}>\r\n            {/* <p>{title}</p> */}\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const TeamHand = ({G, ctx, ID}) => {\r\n\r\n    const [teamCards, setTeamCards] = useState(teamDeck);\r\n    const classes = useStyles(carbonDeck);\r\n    const isMobile = window.innerWidth < 600;\r\n\r\n    // const card = G.players[0].handCompanyDeck[2];\r\n\r\n    // const moveCardHandler = (dragIndex, hoverIndex) => {\r\n    //\r\n    //     const dragItem = teamCards[dragIndex];\r\n    //\r\n    //     if (dragItem) {\r\n    //         setTeamCards((prevState => {\r\n    //             const copiedStateArray = [...prevState];\r\n    //\r\n    //             // remove item by \"hoverIndex\" and put \"dragItem\" instead\r\n    //             const prevItem = copiedStateArray.splice(hoverIndex, 1, dragItem);\r\n    //\r\n    //             // remove item by \"dragIndex\" and put \"prevItem\" instead\r\n    //             copiedStateArray.splice(dragIndex, 1, prevItem[0]);\r\n    //\r\n    //             return copiedStateArray;\r\n    //         }));\r\n    //     }\r\n    // };\r\n\r\n    const returnItemsForTeamCell = (cellName) => {\r\n        return teamCards.filter((item) => item.cell === cellName).map((item, index, G) => (\r\n            <MovableTeamCard key={item.id}\r\n                         name={item.name}\r\n                         currentCellName={item.cell}\r\n                         setItems={setTeamCards}\r\n                         index={index}\r\n                         // moveCardHandler={moveCardHandler}\r\n                         G={G}\r\n                         item={item}\r\n                         playerID={ID}\r\n            />\r\n        ))\r\n    };\r\n\r\n    const {\r\n        f1,\r\n        f2,\r\n        f3,\r\n        f4,\r\n        f5,\r\n        f6,\r\n        f7,\r\n        f0,\r\n        e0,\r\n        g1,\r\n        g2,\r\n        g3,\r\n        g4,\r\n        g5,\r\n        g6,\r\n        g7,\r\n        g0,\r\n        h1,\r\n        h2,\r\n        h3,\r\n        h4,\r\n        h5,\r\n        h6,\r\n        h7,\r\n        h0,\r\n        i1,\r\n        i2,\r\n        i3,\r\n        i4,\r\n        i5,\r\n        i6,\r\n        i7,\r\n        i0,\r\n        j1,\r\n        j2,\r\n        j3,\r\n        j4,\r\n        j5,\r\n        j6,\r\n        j7,\r\n        j0,\r\n        j8,\r\n        j9,\r\n        j10,\r\n        j11,\r\n        m1,\r\n        m2,\r\n        m3,\r\n    } = CELL_NAMES;\r\n    const mapTeamBank = () =>{\r\n\r\n        let cellId;\r\n        let bankId = [\"j\"];\r\n        let cellsList = [];\r\n        for (let i=0; i <12 ; i++){\r\n            cellId = bankId[0].concat(i);\r\n            cellsList.push(\r\n                <TeamCell title={cellId} className={\"cellColumn\"}>\r\n                    {returnItemsForTeamCell(cellId)}\r\n                </TeamCell>\r\n            )\r\n\r\n        }\r\n        return cellsList;\r\n    }\r\n\r\n// TODO: map handcompany into cells\r\n    return (\r\n        <>\r\n            <div className={\"mainTeam\"}>\r\n            <div className={\"flowTeam\"}>\r\n            <div className={\"cellFlow\"}>\r\n                <TeamCell title={f0} className='cellColumn '>\r\n                    {returnItemsForTeamCell(f0)}\r\n                </TeamCell>\r\n                <TeamCell title={f1} className='cellColumn '>\r\n                    {returnItemsForTeamCell(f1)}\r\n                </TeamCell>\r\n                <TeamCell title={f2} className='cellColumn '>\r\n                    {returnItemsForTeamCell(f2)}\r\n                </TeamCell>\r\n                <TeamCell title={f3} className='cellColumn'>\r\n                    {returnItemsForTeamCell(f3)}\r\n                </TeamCell>\r\n                <TeamCell title={f4} className='cellColumn'>\r\n                    {returnItemsForTeamCell(f4)}\r\n                </TeamCell>\r\n                <TeamCell title={f5} className='cellColumn'>\r\n                    {returnItemsForTeamCell(f5)}\r\n                </TeamCell>\r\n                <TeamCell title={f6} className='cellColumn'>\r\n                    {returnItemsForTeamCell(f6)}\r\n                </TeamCell>\r\n                <TeamCell title={f7} className='cellColumn'>\r\n                    {returnItemsForTeamCell(f7)}\r\n                </TeamCell>\r\n\r\n            </div>\r\n                <div className={\"cellFlow\"}>\r\n                    <TeamCell title={g0} className='cellColumn '>\r\n                        {returnItemsForTeamCell(g0)}\r\n                    </TeamCell>\r\n                    <TeamCell title={g1} className='cellColumn '>\r\n                        {returnItemsForTeamCell(g1)}\r\n                    </TeamCell>\r\n                    <TeamCell title={g2} className='cellColumn '>\r\n                        {returnItemsForTeamCell(g2)}\r\n                    </TeamCell>\r\n                    <TeamCell title={g3} className='cellColumn'>\r\n                        {returnItemsForTeamCell(g3)}\r\n                    </TeamCell>\r\n                    <TeamCell title={g4} className='cellColumn'>\r\n                        {returnItemsForTeamCell(g4)}\r\n                    </TeamCell>\r\n                    <TeamCell title={g5} className='cellColumn'>\r\n                        {returnItemsForTeamCell(g5)}\r\n                    </TeamCell>\r\n                    <TeamCell title={g6} className='cellColumn'>\r\n                        {returnItemsForTeamCell(g6)}\r\n                    </TeamCell>\r\n                    <TeamCell title={g7} className='cellColumn'>\r\n                        {returnItemsForTeamCell(g7)}\r\n                    </TeamCell>\r\n\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <TeamCell title={e0} className='cellColumn eventTeamCell'>\r\n                    {returnItemsForTeamCell(e0)}\r\n                </TeamCell>\r\n            </div>\r\n                <div className={classes.companyBankFlex}>\r\n                    <div className={classes.bankFlex}>\r\n\r\n                    </div>\r\n                    <div className={\"teamBank\"}>\r\n                        {mapTeamBank()}\r\n                    </div>\r\n                </div>\r\n            <div className={\"flowTeam\"}>\r\n                <div className={\"cellFlow  lowerTeam\"}>\r\n                    <TeamCell title={h0} className='cellColumn '>\r\n                        {returnItemsForTeamCell(h0)}\r\n                    </TeamCell>\r\n                    <TeamCell title={h1} className='cellColumn '>\r\n                        {returnItemsForTeamCell(h1)}\r\n                    </TeamCell>\r\n                    <TeamCell title={h2} className='cellColumn '>\r\n                        {returnItemsForTeamCell(h2)}\r\n                    </TeamCell>\r\n                    <TeamCell title={h3} className='cellColumn'>\r\n                        {returnItemsForTeamCell(h3)}\r\n                    </TeamCell>\r\n                    <TeamCell title={h4} className='cellColumn'>\r\n                        {returnItemsForTeamCell(h4)}\r\n                    </TeamCell>\r\n                    <TeamCell title={h5} className='cellColumn'>\r\n                        {returnItemsForTeamCell(h5)}\r\n                    </TeamCell>\r\n                    <TeamCell title={h6} className='cellColumn'>\r\n                        {returnItemsForTeamCell(h6)}\r\n                    </TeamCell>\r\n                    <TeamCell title={h7} className='cellColumn'>\r\n                        {returnItemsForTeamCell(h7)}\r\n                    </TeamCell>\r\n\r\n                </div>\r\n                <div className={\"cellFlow lowerTeam\"}>\r\n                    <TeamCell title={i0} className='cellColumn '>\r\n                        {returnItemsForTeamCell(i0)}\r\n                    </TeamCell>\r\n                    <TeamCell title={i1} className='cellColumn '>\r\n                        {returnItemsForTeamCell(i1)}\r\n                    </TeamCell>\r\n                    <TeamCell title={i2} className='cellColumn '>\r\n                        {returnItemsForTeamCell(i2)}\r\n                    </TeamCell>\r\n                    <TeamCell title={i3} className='cellColumn'>\r\n                        {returnItemsForTeamCell(i3)}\r\n                    </TeamCell>\r\n                    <TeamCell title={i4} className='cellColumn'>\r\n                        {returnItemsForTeamCell(i4)}\r\n                    </TeamCell>\r\n                    <TeamCell title={i5} className='cellColumn'>\r\n                        {returnItemsForTeamCell(i5)}\r\n                    </TeamCell>\r\n                    <TeamCell title={i6} className='cellColumn'>\r\n                        {returnItemsForTeamCell(i6)}\r\n                    </TeamCell>\r\n                    <TeamCell title={i7} className='cellColumn'>\r\n                        {returnItemsForTeamCell(i7)}\r\n                    </TeamCell>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}","import React,{useState} from 'react';\nimport '../styles/style.scss';\n\n\n// import 'nprogress/nprogress';\n\n// class App extends React.Component {\n//     render() {\n//         return (\n//             <div className=\"page-container\">\n//\n//                 <BlogCard />\n//                 <footer>\n//                     Image credit: <a href=\"https://78.media.tumblr.com/d98fb931adb117c70f0dbced9e947520/tumblr_pe582mbWip1tlgv32o1_1280.png\">8pxl on Tumblr</a>\n//                 </footer>\n//\n//         )\n//     }\n// }\nlet counter = 0;\nexport class CarbonEvent2 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { flipped: false };\n        this.flip = this.flip.bind(this);\n    }\n\n\n    flip = () => {\n        this.setState({ flipped: !this.state.flipped });\n\n\n    }\n    flip2 = () =>{\n        this.setState({ flipped: !this.state.flipped });\n    };\n    render() {\n        return (\n\n            <div className=\"page-container\">\n            <div onClick={this.flip} onClick={this.flip2} className={\"card-container\" + (this.state.flipped ? \" flipped\" : \"\")}>\n\n                <Front G={this.props.G} ctx={this.props.ctx} />\n                <Back img={\"../../public/img/carbonevent/carbonEventBack.png\"} />\n            </div>\n    </div>\n        )\n    }\n}\n\nclass Front extends React.Component {\n    render() {\n        return (\n            <div className=\"front\">\n                <ImageArea />\n                <MainArea G={this.props.G} ctx={this.props.ctx} />\n            </div>\n        )\n    }\n}\n\nclass Back extends React.Component {\n    render() {\n        return (\n            <div className={\"back\"} >\n                <img src={this.props.img} alt=\"backcarbon\"/>\n            </div>\n        )\n    }\n}\n\nclass ImageArea extends React.Component {\n    render() {\n        return (\n            <div className=\"image-container\">\n                {/*<img className=\"card-image\" src=\"https://78.media.tumblr.com/d98fb931adb117c70f0dbced9e947520/tumblr_pe582mbWip1tlgv32o1_1280.png\"></img>*/}\n                <h1 className=\"title\">An example event card</h1>\n            </div>\n        )\n    }\n\n}\n\nclass MainArea extends React.Component {\n    render() {\n        return (\n            <div className=\"main-area\">\n                <div className=\"blog-post\">\n                    <p>{this.props.G.currentCarbon[0].event1.id[0].toString()}</p>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { useEffect } from \"react\";\n\nimport 'gridstack/dist/gridstack.min.css';\nimport { GridStack } from 'gridstack';\n// THEN to get HTML5 drag&drop\nimport 'gridstack/dist/h5/gridstack-dd-native';\n\nfunction Doit() {\n    // _________________________________________________\n    // Initialize Gridstack inside useEffect so that DOM is rendered when its initialized\n    // _________________________________________________\n    useEffect(() => {\n        let grid = GridStack.init();\n    });\n    // _________________________________________________\n    // _________________________________________________\n\n    return (\n        <div className=\"App\">\n            <div class=\"grid-stack\">\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\n                    <div class=\"grid-stack-item-content\">Item 1</div>\n                </div>\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\n                    <div class=\"grid-stack-item-content\">Item 2</div>\n                </div>\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\n                    <div class=\"grid-stack-item-content\">Item 3</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Doit;","import React, { useCallback, useRef, useState } from 'react';\nimport CompanyCard from \"./components/CompanyCard\";\nimport {Box,Typography,Button, Grid} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {currentId} from \"./Game\";\nimport { DndProvider } from 'react-dnd'\n\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport {TouchBackend} from \"react-dnd-touch-backend\";\nimport {companyDeck} from \"./constants/companyDeck\";\nimport CompanyStack from \"./components/CompanyStack\";\nimport NamePlate from \"./components/NamePlate\";\nimport {number} from \"prop-types\";\nimport {DragItem} from \"./components/DragItem\";\nimport {Card} from \"./components/Card\";\nimport CarbonEventCard from \"./components/CarbonEventCard\";\nimport {CarbonEvent2} from \"./components/CarbonEventCard2\";\nimport TeamCard from \"./components/TeamCard\";\nimport CompanyHand from \"./components/CompanyHand\";\nimport Doit from \"./components/Doit\";\nimport {\n    GridContextProvider,\n    GridDropZone,\n    GridItem,\n    swap,\n    move\n} from \"react-grid-dnd\";\nimport {Board} from \"./components/TestCellDnd/Board\";\nimport {PlayerHand} from \"./components/CompanyHandLayout/PlayerHand\";\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    bid:{\n        backgroundColor: \"green\",\n        border: \"5px solid white\",\n        zIndex:2,\n    },\n    background:{\n        height:\"1200px\",\n        width:\"1980px\",\n        margin:90,\n        backgroundImage:`url(${process.env.PUBLIC_URL + '/img/newmat.svg'})`,\n        backgroundPosition: 'center',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n\n        display: 'block',\n\n    },\n    auction:{\n        textAlign:\"center\",\n        marginTop:\"20%\",\n        fontSize:40,\n    },\n}));\n\nexport const NZGBoard = ({G,ctx,...props }) => {\n\n    const classes = useStyles();\n    const isMobile = window.innerWidth < 600;\n\n\n    // const onDraw = useCallback(() => {\n    //     // moves.InitialDraw();\n    //      // setPlayerId1(ctx.currentPlayer);\n    //      console.log(playerId1);\n    //\n    //      if (ctx.currentPlayer.toString() === \"0\")\n    //      {\n    //         setPlayerId1(ctx.currentPlayer);\n    //\n    //     } if (ctx.currentPlayer.toString() === \"1\")\n    //     {\n    //         setPlayerId2(ctx.currentPlayer);\n    //\n    //     } if ( ctx.currentPlayer.toString() === \"2\")\n    //     {\n    //         setPlayerId3(ctx.currentPlayer);\n    //     }if ( ctx.currentPlayer.toString() === \"3\")\n    //     {\n    //         setPlayerId4(ctx.currentPlayer);\n    //     // moves,setHidden1,hidden1,hidden2,hidden3,hidden4,cardId1,cardId2,cardId3,cardId4,playerId1,playerId2,playerId3,playerId4,ctx,G,actualCard1,actualCard2,actualCard3,actualCard4\n    //     }\n    //\n    // }, [moves,G,ctx,playerId1,playerId2,playerId3,playerId4]);\n\n    // function onChange(sourceId, sourceIndex, targetIndex, targetId) {\n    //     if (targetId) {\n    //         const result = move(\n    //             items[sourceId],\n    //             items[targetId],\n    //             sourceIndex,\n    //             targetIndex\n    //         );\n    //         return setItems({\n    //             ...items,\n    //             [sourceId]: result[0],\n    //             [targetId]: result[1]\n    //         });\n    //     }\n    //\n    //     const result = swap(items[sourceId], sourceIndex, targetIndex);\n    //     return setItems({\n    //         ...items,\n    //         [sourceId]: result\n    //     });\n    // }\n\n    return(\n        <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\n\n        <div className={classes.background}>\n                {/*        <Box     width={\"100%\"} >*/}\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"100%\"} >*/}\n                {/*        <NamePlate G={G} playerId={0} />*/}\n                {/*        <NamePlate G={G} playerId={1} />*/}\n                {/*    </Box>*/}\n                {/*    /!*{*!/*/}\n                {/*    /!*    (playerId1.toString()) >= \"0\"  ? <CompanyStack G={G} playerId={playerId1} ctx={ctx} moves={moves} />  : null*!/*/}\n                {/*    /!*}*!/*/}\n\n                {/*    /!*{*!/*/}\n                {/*    /!*    (playerId2.toString()) >= \"1\"  ? <CompanyStack G={G} playerId={playerId2} ctx={ctx} moves={moves} />  : null*!/*/}\n                {/*    /!*}*!/*/}\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"}>*/}\n                {/*        <CompanyHand G={G} playerId={0} ctx={ctx} moves={moves}/>*/}\n                {/*        <CompanyHand G={G} playerId={1} ctx={ctx} moves={moves}/>*/}\n                {/*    </Box>*/}\n                {/*    <Box display={\"flex\"} justifyContent={\"space-around\"}>*/}\n                {/*        <CarbonEvent2 G={G} ctx={ctx} />*/}\n\n                {/*        <TeamCard />*/}\n\n                {/*    </Box>*/}\n\n                {/*        <Box  position={\"fixed\"} marginTop={40} borderRadius={50} width={240} height={170} className={classes.bid} marginLeft={\"40%\"}>*/}\n                {/*        <Typography className={classes.auction}>Auction</Typography>*/}\n                {/*        </Box>*/}\n\n\n\n\n                {/*</Box>*/}\n\n\n                {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1505px\"} marginTop={16} >*/}\n                {/*    <CompanyHand G={G} playerId={2} ctx={ctx} moves={moves}/>*/}\n                {/*    <CompanyHand G={G} playerId={3} ctx={ctx} moves={moves}/>*/}\n                {/*    </Box>*/}\n                {/*    <Box marginTop={3} display={\"flex\"} justifyContent={\"space-between\"} width={\"100%\"}>*/}\n                {/*        <NamePlate G={G} playerId={2} />*/}\n                {/*        <NamePlate G={G} playerId={3} />*/}\n                {/*    </Box>*/}\n\n            {/*<DragItem/>*/}\n\n\n\n\n            <Card G={G} ctx={ctx} moves={props.moves}/>\n\n            {/* <TestBoardDnd G={G}/> */}\n            {/*<Board G={G}/>*/}\n            {/*<PlayerHand G={G}/>*/}\n\n    </div>\n     </DndProvider>\n\n    )\n};\n","import React from \"react\";\nimport {Client} from \"boardgame.io/react\";\n// import { Local } from \"boardgame.io/multiplayer\"; //TODO: Multiplayer\nimport {NZGBoard} from \"./NZGBoard\";\nimport {Game} from \"./Game.js\";\nimport { Debug } from 'boardgame.io/debug';\n\n\n\nconst App = Client({\n    game: Game,\n    board: NZGBoard,\n    numPlayers: 4,\n    debug:false,\n\n});\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import \"./styles/project.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}