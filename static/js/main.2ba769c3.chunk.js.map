{"version":3,"sources":["Game.js","components/CompanyCard.js","components/TestCellState/companyCellNames.js","constants/companyDeck.js","constants/carbonDeck.js","constants/teamDeck.js","components/NamePlate.js","components/CompanyStack.js","components/DragItem.js","components/CompanyHand.js","components/CarbonEventCard.js","components/CarbonValue.js","components/TeamCard.js","components/TestCellState/PlayerHand.js","components/Card.js","components/CarbonEventCard2.js","components/Doit.js","NZGBoard.js","App.js","reportWebVitals.js","index.js"],"names":["topCard","findIndex","useStyles","makeStyles","theme","mainSection","width","height","borderRadius","border","backImage","item","backgroundImage","process","svgmain","backgroundPosition","backgroundSize","backgroundRepeat","display","margin","valuesMain","synergyMain","actualValues","justifyContent","marginLeft","marginTop","paddingTop","carbonActual","backgroundColor","carbonDropAct","carbonActualText","color","fontSize","fontWeight","valueActual","valueActualText","initialValues","initialCarbon","initialValue","initialCarbonText","initialValueText","synLeft","synMid","synLeftText","synMidText","companyName","directionValue1","directionValue2","alignItems","directionValue3","directionValue4","CompanyCard","G","classes","key","playerID","Box","className","direction","paddingLeft","actualCarbon","actualValue","CELL_NAMES","companyDeck","id","order","idValue","synmain","name","type","companyBank","cell","carbonDeck","frontImage","event1","text","coinRaise","carbonRaise","synergy","event2","teamDeck","minSignBid","reduceCarb","changeEvent","counter","hui","Game","setup","ctx","deck","players","currentCarbon","temperatureIncrease","bid","minBid","goldBank","silverBank","coinBank","carbonBank","concat","console","log","currentPlayer","random","Shuffle","j","numPlayers","score","handCompanyDeck","handCarbonDeck","handTeamDeck","bank","coin","coinsCopy","carbonCoins","teamMembers","currentBid","shift","push","i","k","phases","draw","turn","moveLimit","moves","DiscardCompany","find","splice","length","DiscardTeam","events","endTurn","endIf","next","pickEvent","start","DrawCarbonEventCard","PickCarbonEvent","counterEvent","counterEventGRO","companyMarket","sellCompany","bidForCompany","takeOverCompany","root","alignContent","zIndex","nameSection","nameText","textAlign","coinImg","coinsImg","carbonImg","teamImg","coinValue","NamePlate","playerId","position","React","Component","card","backCarbon","pic","frontCarbon","CarbonEventCard","useState","event","setEvent","onClick","TeamCard","MovableItem","index","currentCellName","moveCardHandler","setItems","changeItemCell","currentItem","cellName","prevState","map","e","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","end","dropResult","getDropResult","a1","a2","a3","a4","a5","a6","a7","a8","a9","a0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c0","d1","d2","d3","d4","d5","d6","d7","d8","d9","d0","collect","isDragging","opacity","drag","style","Cell","children","title","ID","isOver","canDrop","PlayerHand","items","isMobile","window","innerWidth","dragItem","coppiedStateArray","prevItem","returnItemsForCell","filter","DndProvider","backend","TouchBackend","HTML5Backend","Card","Front","this","props","Back","src","img","alt","ImageArea","MainArea","toString","Doit","background","auction","NZGBoard","App","Client","game","board","debug","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba769c3.chunk.js","sourcesContent":["import {useState} from 'react'\r\nimport {companyDeck} from \"./constants/companyDeck\"\r\nimport {carbonDeck} from \"./constants/carbonDeck\"\r\nimport {teamDeck} from \"./constants/teamDeck\"\r\n\r\n// const getLength = (G,ctx) =>{\r\n//     let lengthOfCom = G.players[0].handCompanyDeck.length;\r\n//     return lengthOfCom;\r\n// };\r\n// export default getLength;\r\n\r\n// function DrawCard(G, ctx) {\r\n//     G.deck--;\r\n//     G.hand[ctx.currentPlayer]++;\r\n// }\r\n//\r\n// function PlayCard(G, ctx) {\r\n//     G.deck++;\r\n//     G.hand[ctx.currentPlayer]--;\r\n// }\r\n//\r\n// export const Game = {\r\n//     setup: ctx => ({ deck: 6, hand: Array(ctx.numPlayers).fill(0) }),\r\n//     moves: { DrawCard, PlayCard },\r\n//     turn: { moveLimit: 1 },\r\n// };\r\n\r\n// function DrawCard(G, ctx) {\r\n//     G.companyDeck--;\r\n//     G.hand[ctx.currentPlayer]++;\r\n//     G.bank.coin[ctx.currentPlayer]++;\r\n//\r\n// }\r\n\r\n// function PlayCard(G, ctx) {\r\n//     G.companyDeck++;\r\n//     G.hand[ctx.currentPlayer]--;\r\n// }\r\n\r\nexport function getInitialState(ctx) {\r\n\r\n    const G = {\r\n        deck: [],\r\n        players: [],\r\n        carbonDeck: [],\r\n        currentCarbon: [],\r\n        teamDeck: [],\r\n        companyDeck: [],\r\n        temperatureIncrease: 0,\r\n        bid: 0,\r\n        minBid: 0,\r\n        goldBank: 10,\r\n        silverBank: 30,\r\n        coinBank: 100,\r\n        carbonBank: 30,\r\n    };\r\n\r\n    // Add a deck for every player\r\n    // for (let i = 0; i < ctx.numPlayers; i++) {\r\n    G.companyDeck = G.companyDeck.concat(companyDeck);\r\n    G.carbonDeck = G.carbonDeck.concat(carbonDeck);\r\n    G.teamDeck = G.teamDeck.concat(teamDeck);\r\n    // }\r\n\r\n    console.log(ctx.currentPlayer);\r\n    // Shuffle resulting deck using lodash\r\n    G.companyDeck = ctx.random.Shuffle(G.companyDeck);\r\n    G.carbonDeck = ctx.random.Shuffle(G.carbonDeck);\r\n    G.teamDeck = ctx.random.Shuffle(G.teamDeck);// TODO: Use boardgame.io provided random shuffle function, which will be important when we are running a server\r\n\r\n    // Set up the game state for each player\r\n    for (let j = 0; j < ctx.numPlayers; j++) {\r\n        G.players[j] = {\r\n            score: 0,\r\n            handCompanyDeck: [],\r\n            handCarbonDeck: [],\r\n            handTeamDeck: [],\r\n            bank: {\r\n                coin: 15,\r\n                coinsCopy: 15,\r\n                carbonCoins: 0,\r\n                teamMembers: 0\r\n            },\r\n            currentBid: 0,\r\n        };\r\n    }\r\n    topCard = G.carbonDeck.shift();\r\n    G.currentCarbon.push(topCard);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        for (let k = 0; k < 3; k++) {\r\n            topCard = G.companyDeck.shift();\r\n            G.players[i].handCompanyDeck.push(topCard);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n        for (let k = 0; k < 4; k++) {\r\n            topCard = G.teamDeck.shift();\r\n            G.players[k].handTeamDeck.push(topCard);\r\n        }\r\n    }\r\n\r\n\r\n    // For debugging \"game over\" state– this sets the deck to only have a single card\r\n    // G.deck = new Array(G.deck[0]);\r\n\r\n    console.log(\"Initial Game State\", G, \"Initial ctx\", ctx);\r\n\r\n    // Our game state is ready to go– return it!\r\n    return G;\r\n}\r\n\r\nlet topCard;\r\nlet findIndex;\r\n\r\nexport const currentId = [];\r\n\r\nexport const Game = {\r\n\r\n\r\n    name: \"NetZeroGame\",\r\n\r\n    setup: getInitialState,\r\n    // moves: {\r\n    //     PlayCompany: (G, ctx, props) => {\r\n    //         topCard = G.players[ctx.currentPlayer].handCompanyDeck.shift();\r\n    //         G.companyDeck.push(topCard);\r\n    //     },\r\n    // },\r\n    phases: {\r\n        draw: {\r\n            turn: {moveLimit: 10},\r\n            moves: {\r\n                // InitialDraw: (G, ctx) => {\r\n                //     for (let i = 0; i < 4; i++) {\r\n                //         topCard = G.companyDeck.shift();\r\n                //         currentId[i] = topCard.id;\r\n                //         console.log(currentId);\r\n                //         G.players[ctx.currentPlayer].handCompanyDeck.push(topCard);\r\n                //     }\r\n                //\r\n                //     for (let i = 0; i < 3; i++) {\r\n                //         topCard = G.teamDeck.shift();\r\n                //         G.players[ctx.currentPlayer].handTeamDeck.push(topCard);\r\n                //     }\r\n                //\r\n                // },\r\n                DiscardCompany: (G, ctx, id) => {\r\n                    topCard = G.players[ctx.currentPlayer].handCompanyDeck.find((item) => item.id === id);\r\n                    G.companyDeck.push(topCard);\r\n                    findIndex = G.players[ctx.currentPlayer].handCompanyDeck.findIndex(i => i.id === id);\r\n                    if (findIndex > -1) {\r\n                        G.players[ctx.currentPlayer].handCompanyDeck.splice(findIndex, 1);\r\n                    }\r\n                    for (let i = 0; i < G.players[ctx.currentPlayer].handCompanyDeck.length; i++) {\r\n                        G.players[ctx.currentPlayer].bank.coin -= G.players[ctx.currentPlayer].handCompanyDeck[i].initialValue;\r\n                    }\r\n                },\r\n                DiscardTeam: (G, ctx, id) => {\r\n                    topCard = G.players[ctx.currentPlayer].handTeamDeck.find((item) => item.id === id);\r\n                    G.teamDeck.push(topCard);\r\n                    const findIndex = G.players[ctx.currentPlayer].handTeamDeck.findIndex(i => i.id === id);\r\n                    if (findIndex > -1) {\r\n                        G.players[ctx.currentPlayer].handTeamDeck.splice(findIndex, 1);\r\n                    }\r\n                    ctx.events.endTurn();\r\n                },\r\n\r\n\r\n            },\r\n            endIf: G => (G.players[3].handTeamDeck.length === 2),//TODO change endif\r\n            // start: true,\r\n            next: \"pickEvent\",\r\n        },\r\n        pickEvent: {\r\n            start: true,\r\n            next: \"counterEvent\",\r\n            moves: {\r\n                DrawCarbonEventCard: (G, ctx) => {\r\n                    topCard = G.carbonDeck.shift();\r\n                    G.currentCarbon.push(topCard);\r\n\r\n                },\r\n                PickCarbonEvent: (G, ctx, id) => {\r\n                    if (id === 1) {\r\n\r\n                        G.players[ctx.playerID].bank.coin += G.players[ctx.currentPlayer].handCarbonDeck[0].event1.coinRaise;\r\n\r\n\r\n                    } else {\r\n\r\n                        G.players[ctx.playerID].bank.coin += G.players[ctx.currentPlayer].handCarbonDeck[0].event2.coinRaise;\r\n\r\n\r\n                    }\r\n\r\n                },\r\n            },\r\n            turn: {moveLimit: 2},\r\n        },\r\n        counterEvent: {\r\n            moves: {\r\n                counterEventGRO: (G, ctx, id) => {\r\n                    topCard = G.players[ctx.playerID].handTeamDeck.find((item) => item.type === \"GRO\");\r\n                    G.teamDeck.push(topCard);\r\n                    findIndex = G.players[ctx.currentPlayer].handCompanyDeck.findIndex(i => i.type === \"GRO\");\r\n                    if (findIndex > -1) {\r\n                        G.players[ctx.currentPlayer].handCompanyDeck.splice(findIndex, 1);\r\n                    }\r\n                },\r\n\r\n            },\r\n            turn: {moveLimit: 1},\r\n        },\r\n        companyMarket: {\r\n            moves: {\r\n                sellCompany: (G, ctx) => {\r\n\r\n                },\r\n                bidForCompany: (G, ctx) => {\r\n\r\n                },\r\n                takeOverCompany: (G, ctx) => {\r\n                    topCard = G.players[ctx.currentPlayer].handTeamDeck.find((item) => item.type === \"GEO\");\r\n                    G.teamDeck.push(topCard);\r\n\r\n                },\r\n            },\r\n            turn: {moveLimit: 2},\r\n        },\r\n\r\n\r\n        // turn: {moveLimit: 2},\r\n\r\n    }\r\n};\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport '../styles/App.css';\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        mainSection: {\r\n            // display: \"flex\",\r\n            width: \"120px\",\r\n            height: \"120px\",\r\n            borderRadius: \"10px\",\r\n            // backgroundColor:\"white\",\r\n            border: \"black\",\r\n        },\r\n\r\n        backImage: item => ({\r\n            backgroundImage: `url(${process.env.PUBLIC_URL + item.svgmain})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: '100%',\r\n            backgroundRepeat: 'no-repeat',\r\n            height: '120px',\r\n            width: '120px',\r\n            display: 'block',\r\n            margin: 'auto',\r\n            // backgroundColor: \"white\",\r\n            // flexDirection:\"column\",\r\n\r\n            // marginTop: \"2%\",\r\n            // marginLeft: \"3%%\",\r\n        }),\r\n        valuesMain: {},\r\n        synergyMain: {},\r\n        actualValues: {\r\n            display: \"flex\",\r\n            justifyContent: 'space-between',\r\n            width: \"87%\",\r\n            height: \"26%\",\r\n            marginLeft: \"6%\",\r\n            marginTop: \"4%\",\r\n            paddingTop: \"6%\",\r\n        },\r\n        carbonActual: {\r\n            backgroundColor: \"black\",\r\n            border: \"3px solid grey\",\r\n            height: \"90%\",\r\n            width: \"27%\",\r\n            borderRadius: 50,\r\n            marginTop: \"2%\",\r\n            // marginLeft:\"6%\",\r\n        },\r\n        carbonDropAct: {\r\n            backgroundColor: \"black\",\r\n            border: \"3px solid grey\",\r\n            borderRadius: 50,\r\n            marginTop: \"2%\",\r\n            height: \"3%\",\r\n            width: \"1.5%\",\r\n\r\n        },\r\n        carbonActualText: {\r\n            color: \"grey\",\r\n            fontSize: \"16pt\",\r\n            marginLeft: \"28%\",\r\n            marginTop: \"-5%\",\r\n            fontWeight: 501,\r\n        },\r\n        valueActual: {\r\n            backgroundColor: \"white\",\r\n            border: \"3px solid #539bc5\",\r\n            height: \"90%\",\r\n            width: \"27%\",\r\n            borderRadius: 50,\r\n            marginTop: \"2%\",\r\n            // marginLeft: 104,\r\n        },\r\n        valueActualText: {\r\n            color: \"black\",\r\n            fontSize: \"16pt\",\r\n            marginLeft: \"28%\",\r\n            marginTop: \"-5%\",\r\n            fontWeight: 501,\r\n        },\r\n        initialValues: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"36%\",\r\n            height: \"17%\",\r\n            marginTop: \"12%\",\r\n            marginLeft: \"57%\",\r\n        },\r\n        initialCarbon: {\r\n            backgroundColor: \"black\",\r\n            border: \"3px solid grey\",\r\n            // height: \"100%\",\r\n            width: \"34%\",\r\n            borderRadius: 50,\r\n\r\n        },\r\n        initialValue: {\r\n            backgroundColor: \"white\",\r\n            border: \"3px solid #539bc5\",\r\n            // height: \"100%\",\r\n            width: \"34%\",\r\n            borderRadius: 50,\r\n\r\n        },\r\n        initialCarbonText: {\r\n            color: \"grey\",\r\n            fontSize: \"11pt\",\r\n            marginLeft: \"23%\",\r\n            marginTop: \"-19%\",\r\n            // fontWeight:501,\r\n        },\r\n        initialValueText: {\r\n            color: \"black\",\r\n            fontSize: \"11pt\",\r\n            marginLeft: \"23%\",\r\n            marginTop: \"-19%\",\r\n            // fontWeight:501,\r\n        },\r\n        synLeft: {\r\n            backgroundColor: \"white\",\r\n            border: \"2px solid #539bc5\",\r\n            height: \"10%\",\r\n            width: \"10%\",\r\n            marginTop: \"-18%\",\r\n            marginLeft: \"9%\",\r\n            borderRadius: 50,\r\n        },\r\n        synMid: {\r\n            backgroundColor: \"white\",\r\n            border: \"2px solid #539bc5\",\r\n            height: \"10%\",\r\n            borderRadius: 50,\r\n            width: \"10%\",\r\n            marginTop: \"-21%\",\r\n            marginLeft: \"34%\",\r\n\r\n\r\n        },\r\n        synLeftText: {\r\n            color: \"black\",\r\n            fontSize: \"7pt\",\r\n            marginLeft: \"1%\",\r\n            marginTop: \"-5%\",\r\n        },\r\n        synMidText: {\r\n            // fontWeight:501,\r\n            color: \"black\",\r\n            fontSize: \"7pt\",\r\n            marginLeft: \"1%\",\r\n            marginTop: \"-5%\",\r\n        },\r\n        companyName: {\r\n            marginTop: \"30.5%\",\r\n            marginLeft: \"8.5%\",\r\n            fontSize: \"10pt\",\r\n\r\n        },\r\n        directionValue1: {},\r\n        directionValue2: {\r\n            display: \"flex\",\r\n            fontSize: 18,\r\n            // backgroundColor:\"green\",\r\n\r\n            width: \"32px\",\r\n            height: \"32px\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n\r\n        },\r\n        directionValue3: {},\r\n        directionValue4: {},\r\n    }))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\n\r\nconst CompanyCard = ({G, item, key, playerID}) => {\r\n    // const card = G.players[0].handCompanyDeck[0]\r\n    const classes = useStyles(item);\r\n\r\n\r\n    const cardDirectionClass = () => {\r\n\r\n\r\n\r\n        if (item.direction === 2) {\r\n\r\n\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"105px\"} paddingTop={\"80px\"} paddingLeft={\"7px\"} >\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont greyFont `}>\r\n                        {\r\n                            item.actualCarbon\r\n                        }\r\n                    </Box>\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont  `}>\r\n                        {\r\n                            item.actualValue\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n            );\r\n\r\n        }\r\n        if (item.direction === 1) {\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"105px\"} paddingTop={\"80px\"} paddingLeft={\"7px\"} >\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont  `}>\r\n                        {\r\n                            item.actualValue\r\n                        }\r\n                    </Box>\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont greyFont `}>\r\n                        {\r\n                            item.actualCarbon\r\n                        }\r\n                    </Box>\r\n\r\n                </Box>\r\n            );\r\n\r\n        }\r\n        if (item.direction === 3) {\r\n\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"106px\"} paddingTop={\"6px\"} paddingLeft={\"7px\"} >\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont greyFont `}>\r\n                        {\r\n                            item.actualCarbon\r\n                        }\r\n                    </Box>\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont  `}>\r\n                        {\r\n                            item.actualValue\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n            );\r\n        }\r\n        if (item.direction === 4) {\r\n\r\n            return (\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"106px\"} paddingTop={\"6px\"} paddingLeft={\"7px\"} >\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont  `}>\r\n                        {\r\n                            item.actualValue\r\n                        }\r\n                    </Box>\r\n                    <Box className={`${classes.directionValue2} + \" \" + mainFont greyFont `}>\r\n                        {\r\n                            item.actualCarbon\r\n                        }\r\n                    </Box>\r\n\r\n                </Box>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // console.log(ID)\r\n    // console.log(currentId)\r\n    // const [{ isDragging }, drag] = useDrag({\r\n    //     type: \"companyCard\",\r\n    //     id: `${key}`,\r\n    //     collect: (monitor) => ({\r\n    //         isDragging: !!monitor.isDragging(),\r\n    //     }),\r\n    // })\r\n\r\n    // console.log(props.ctx);w\r\n    //console.log(playerId);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/*<img src={process.env.PUBLIC_URL + '/img/company/cc12.png'} alt=\"\"/>*/}\r\n            <Box className={`${classes.mainSection}`}>\r\n\r\n\r\n                <Box className={`${classes.backImage}`}>\r\n\r\n\r\n                    {cardDirectionClass()}\r\n\r\n                    {/*<Box zIndex={1} className={classes.actualValues}>*/}\r\n\r\n\r\n                    {/*    <Box className={classes.carbonActual}>*/}\r\n                    {/*        <Typography className={classes.carbonActualText}>{G.players[\"2\"].handCompanyDeck[0].carbonCoins}</Typography>*/}\r\n                    {/*    </Box>*/}\r\n\r\n\r\n                    {/*    <Box className={classes.valueActual}>*/}\r\n                    {/*        <Typography className={`${classes.valueActualText} `}>{G.players[1].handCompanyDeck[0].initialCarbon}</Typography>*/}\r\n                    {/*    </Box>*/}\r\n\r\n\r\n                    {/*</Box>*/}\r\n                    {/*<Box zIndex={2} className={classes.initialValues}>*/}\r\n                    {/*    <Box className={classes.initialValue}>*/}\r\n                    {/*        <Typography className={classes.initialValueText}>{G.players[1].handCompanyDeck[0].carbonCoins}</Typography>*/}\r\n                    {/*    </Box>*/}\r\n                    {/*    <Box className={classes.initialCarbon}>*/}\r\n                    {/*        <Typography className={classes.initialCarbonText}>{G.players[1].handCompanyDeck[0].initialCarbon}</Typography>*/}\r\n                    {/*    </Box>*/}\r\n                    {/*</Box>*/}\r\n\r\n\r\n                    {/*<Box className={classes.synLeft}>*/}\r\n                    {/*    <Typography className={classes.synLeftText}>+3</Typography>*/}\r\n                    {/*</Box>*/}\r\n                    {/*<Box className={classes.synMid}>*/}\r\n                    {/*    <Typography className={classes.synMidText}>+3</Typography>*/}\r\n                    {/*</Box>*/}\r\n                    {/*<Box className={classes.companyName}>{item.companyName}</Box>*/}\r\n\r\n                </Box>\r\n\r\n            </Box>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default CompanyCard;","export const CELL_NAMES = {\r\n    a1: 'a1',\r\n    a2: 'a2',\r\n    a3: 'a3',\r\n    a4: 'a4',\r\n    a5: 'a5',\r\n    a6: 'a6',\r\n    a7: 'a7',\r\n    a8: 'a8',\r\n    a9: 'a9',\r\n    a0: 'a0',\r\n    b1: 'b1',\r\n    b2: 'b2',\r\n    b3: 'b3',\r\n    b4: 'b4',\r\n    b5: 'b5',\r\n    b6: 'b6',\r\n    b7: 'b7',\r\n    b8: 'b8',\r\n    b9: 'b9',\r\n    b0: 'b0',\r\n    c1: 'c1',\r\n    c2: 'c2',\r\n    c3: 'c3',\r\n    c4: 'c4',\r\n    c5: \"c5\",\r\n    c6: \"c6 \",\r\n    c7: \"c7\",\r\n    c8: \"c8\",\r\n    c9: \"c9\",\r\n    c0: \"c0\",\r\n    d1: 'd1',\r\n    d2: 'd2',\r\n    d3: 'd3',\r\n    d4: 'd4',\r\n    d5: \"d5\",\r\n    d6: \"d6\",\r\n    d7: \"d7\",\r\n    d8: \"d8\",\r\n    d9: \"d9\",\r\n    d0: \"d0\",\r\n}\r\n","import {CELL_NAMES} from \"../components/TestCellState/companyCellNames\";\r\n\r\nexport const companyDeck = [\r\n    {\r\n        id: 1,\r\n        order: 1,\r\n        idValue: 1,\r\n        direction: 2,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Dwellings, Inc.',\r\n        type: 'consumer',\r\n        initialValue: 2,\r\n        initialCarbon: 2,\r\n        actualValue: 2,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC1.svg\",\r\n        cell:CELL_NAMES.c2,\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        order: 2,\r\n        idValue: 2,\r\n        direction: 2,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Steaks, Inc.',\r\n        type: 'consumer',\r\n        initialValue: 1,\r\n        initialCarbon: 1,\r\n        actualValue: 1,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC2.svg\",\r\n        cell:CELL_NAMES.b1,\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        order: 3,\r\n        idValue: 3,\r\n        direction: 2,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Smartphone, Inc.',\r\n        type: 'consumer',\r\n        initialValue: 3,\r\n        initialCarbon: 1,\r\n        actualValue: 3,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC3.svg\",\r\n        cell:CELL_NAMES.d2,\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        order: 4,\r\n        idValue: 4,\r\n        direction: 2,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Airline, Inc.',\r\n        type: 'consumer',\r\n        initialValue: 4,\r\n        initialCarbon: 2,\r\n        actualValue: 4,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC4.svg\",\r\n        cell:CELL_NAMES.b3,\r\n    },\r\n\r\n    {\r\n        id: 5,\r\n        order: 5,\r\n        idValue: 5,\r\n        direction: 1,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Aircraft, Inc.',\r\n        type: 'production',\r\n        initialValue: 4,\r\n        initialCarbon: 2,\r\n        actualValue: 4,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC5.svg\",\r\n        cell:CELL_NAMES.b2,\r\n    },\r\n\r\n    {\r\n        id: 6,\r\n        order: 6,\r\n        idValue: 6,\r\n        direction: 1,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Packaging, Inc.',\r\n        type: 'production',\r\n        initialValue: 2,\r\n        initialCarbon: 1,\r\n        actualValue: 2,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC6.svg\",\r\n        cell:CELL_NAMES.b0,\r\n    },\r\n\r\n    {\r\n        id: 7,\r\n        order: 7,\r\n        idValue: 7,\r\n        direction: 1,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Chemicals, Inc.',\r\n        type: 'production',\r\n        initialValue: 4,\r\n        initialCarbon: 2,\r\n        actualValue: 4,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC7.svg\",\r\n        cell:'',\r\n    },\r\n\r\n    {\r\n        id: 8,\r\n        order: 8,\r\n        idValue: 8,\r\n        direction: 1,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Software, Inc.',\r\n        type: 'production',\r\n        initialValue: 4,\r\n        initialCarbon: 1,\r\n        actualValue: 4,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC8.svg\",\r\n        cell:CELL_NAMES.d1,\r\n    },\r\n    {\r\n        id: 9,\r\n        order: 9,\r\n        idValue: 9,\r\n        direction: 1,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Cement, Inc.',\r\n        type: 'production',\r\n        initialValue: 3,\r\n        initialCarbon: 2,\r\n        actualValue: 3,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC9.svg\",\r\n        cell:CELL_NAMES.c1,\r\n    },\r\n\r\n    {\r\n        id: 10,\r\n        order: 10,\r\n        idValue: 10,\r\n        direction: 4,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Shipping, Inc.',\r\n        type: 'distribution',\r\n        initialValue: 4,\r\n        initialCarbon: 3,\r\n        actualValue: 4,\r\n        actualCarbon: 3,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC10.svg\",\r\n        cell:'',\r\n    },\r\n\r\n    {\r\n        id: 11,\r\n        order: 11,\r\n        idValue: 11,\r\n        direction: 4,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Road Transport, Inc.',\r\n        type: 'distribution',\r\n        initialValue: 5,\r\n        initialCarbon: 3,\r\n        actualValue: 5,\r\n        actualCarbon: 3,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC11.svg\",\r\n        cell:CELL_NAMES.c6,\r\n    },\r\n\r\n    {\r\n        id: 12,\r\n        order: 12,\r\n        idValue: 12,\r\n        direction: 4,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Data & Wireless, Inc.',\r\n        type: 'distribution',\r\n        initialValue: 3,\r\n        initialCarbon: 2,\r\n        actualValue: 3,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC12.svg\",\r\n        cell:'',\r\n    },\r\n\r\n    {\r\n        id: 13,\r\n        order: 13,\r\n        idValue: 13,\r\n        direction: 4,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Grid & Pipeline, Inc.',\r\n        type: 'distribution',\r\n        initialValue: 3,\r\n        initialCarbon: 1,\r\n        actualValue: 3,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC13.svg\",\r\n        cell:CELL_NAMES.d6,\r\n    },\r\n\r\n    {\r\n        id: 14,\r\n        order: 14,\r\n        idValue: 14,\r\n        direction: 3,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Oil & Gas, Inc.',\r\n        type: 'resource',\r\n        initialValue: 6,\r\n        initialCarbon: 3,\r\n        actualValue: 6,\r\n        actualCarbon: 3,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC14.svg\",\r\n        cell:CELL_NAMES.c7,\r\n    },\r\n\r\n    {\r\n        id: 15,\r\n        order: 15,\r\n        idValue: 15,\r\n        direction: 3,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Sand & Metal, Inc.',\r\n        type: 'resource',\r\n        initialValue: 2,\r\n        initialCarbon: 1,\r\n        actualValue: 2,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC15.svg\",\r\n        cell:'',\r\n    },\r\n\r\n    {\r\n        id: 16,\r\n        order: 16,\r\n        idValue: 16,\r\n        direction: 3,\r\n        synmain: \"../img/company/16/background-16.png\",\r\n        name: 'Farm, Inc.',\r\n        type: 'resource',\r\n        initialValue: 3,\r\n        initialCarbon: 2,\r\n        actualValue: 3,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC16.svg\",\r\n        cell:'',\r\n    },\r\n\r\n    {\r\n        id: 17,\r\n        order: 17,\r\n        idValue: 17,\r\n        direction: 3,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        // svgmain:\"../img/company/CompositeLayer.svg\",\r\n        name: 'Wind Power, Inc.',\r\n        type: 'resource',\r\n        initialValue: 3,\r\n        initialCarbon: 0,\r\n        actualValue: 3,\r\n        actualCarbon: 0,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC17.svg\",\r\n        cell:CELL_NAMES.d7,\r\n    },\r\n\r\n    {\r\n        id: 18,\r\n        order: 18,\r\n        idValue: 18,\r\n        direction: 3,\r\n        synmain: \"../img/company/14/background-1.png\",\r\n        name: 'Recycling, Inc.',\r\n        type: 'resource',\r\n        initialValue: 5,\r\n        initialCarbon: 1,\r\n        actualValue: 5,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain: \"/img/company/CC18.svg\",\r\n        cell:'',\r\n    },\r\n\r\n];\r\n\r\nexport const getRandomCard = (deck) =>\r\n    deck[Math.floor(Math.random() * deck.length)];\r\n","export const carbonDeck = [\r\n\r\n    //TODO optimise and make it readable\r\n    {\r\n        backImage:\"../img/ce1test.png\",\r\n        frontImage:\"../img/carbonevent/EventCard1.png\",\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n\r\n    {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n    {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n    {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    }, {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n    // {\r\n    //     id: 1,\r\n    //     idText: \"DWELLINGS,INC.\",\r\n    //     text: \"Cities upcycle existing buildings to new efficient energy standarts\",\r\n    //     idText2: [\"AIRLINE,INC.\", \"AIRCRAFT,INC.\", \"OIL&GAS,INC.\"],\r\n    //     text2: \"Spreading flight shame reduces demand for air travel.\",\r\n    //\r\n    //     event1: [\r\n    //         {\r\n    //             event:1,\r\n    //             id: 1,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: -1,\r\n    //             synergy: true,\r\n    //         }\r\n    //     ],\r\n    //     event2: [\r\n    //         {\r\n    //             event:2,\r\n    //             id: 4,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //         {\r\n    //             id: 5,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //         {\r\n    //             id: 14,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //     ],\r\n    //\r\n    // },\r\n    // {\r\n    //     id: 2,\r\n    //     idText: \"STEAKS,INC.\",\r\n    //     text: \"Cattle feed with seaweed reduces methane emissions from livestock.\",\r\n    //     idText2: [\"DWELLINGS,INC.\", \"ROAD TRANSPORT,INC.\", \"FARM,INC.\"],\r\n    //     text2: \"Vertical farming in cities increases in popularity.\",\r\n    //\r\n    //     event1: [\r\n    //         {\r\n    //             id: 2,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: -1,\r\n    //             synergy: true,\r\n    //         }\r\n    //     ],\r\n    //     event2: [\r\n    //         {\r\n    //             id: 1,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: 0,\r\n    //             synergy: true,\r\n    //         },\r\n    //         {\r\n    //             id: 11,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //         {\r\n    //             id: 16,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: -1,\r\n    //             synergy: true,\r\n    //         },\r\n    //     ],\r\n    //\r\n    // },\r\n\r\n\r\n];\r\n\r\n// export const cDeck = [\r\n//     {\r\n//         Event1:{\r\n//             id:[1],\r\n//             coinRaise: 0,\r\n//             carbonRaise: -1,\r\n//             synergy: true,\r\n//\r\n//         },\r\n//         Event2:{\r\n//             id:[1,11,16],\r\n//             coinRaise: 0,\r\n//             carbonRaise: -2,\r\n//             synergy: true,\r\n//\r\n//         },\r\n//     },{}\r\n// ];","//TODO playerView to hide team cards in multiplayer\r\n\r\nexport const teamDeck  = [\r\n    {\r\n        id:19,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:20,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n    },\r\n    {\r\n        id:21,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n    },\r\n    {\r\n        id:22,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:23,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n    },\r\n    {\r\n        id:24,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n    },\r\n    {\r\n        id:25,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:26,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n    },\r\n    {\r\n        id:27,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n    },\r\n    {\r\n        id:28,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:29,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n        hui:\"bolshoy\",\r\n\r\n    },\r\n    {\r\n        id:30,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n        hui:\"bolshoy\",\r\n    },\r\n    ]\r\n","import React from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"../Game\";\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport {\r\n    Draggable,\r\n    Droppable,\r\n    DragComponent,\r\n    DragState\r\n} from \"react-dragtastic\"\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    mainSection: {\r\n        // display: \"flex\",\r\n        width: \"120px\",\r\n        height: \"120px\",\r\n        borderRadius: \"8px\",\r\n        // border: \"1px solid #a49f9f\",\r\n        // backgroundColor:\"white\",\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg2.svg\"})`,\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        // margin:\"0 auto\",\r\n        zIndex: 0,\r\n\r\n    },\r\n    nameSection: {\r\n        width: \"100%\",\r\n        // height:\"20%\",\r\n        // paddingTop:\"5%\",\r\n    },\r\n    nameText: {\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        fontSize: \"8pt\",\r\n        fontWeight: \"1000\",\r\n\r\n    },\r\n    coinImg: {\r\n        height: \"30%\",\r\n        width: \"85%\",\r\n        marginLeft: \"5%\",\r\n    },\r\n    coinsImg: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: 50,\r\n        border: \"3px solid #539bc5\",\r\n        height: \"61%\",\r\n        width: \"22%\",\r\n    },\r\n    carbonImg: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        borderRadius: 50,\r\n        height: \"61%\",\r\n        width: \"22%\",\r\n    },\r\n    teamImg: {\r\n        backgroundColor: \"lightskyblue\",\r\n        borderRadius: 50,\r\n        border: \"3px solid purple\",\r\n        height: \"61%\",\r\n        width: \"22%\",\r\n    },\r\n    coinValue: {\r\n        height: \"30%\",\r\n        width: \"85%\",\r\n        marginLeft: \"5%\",\r\n    },\r\n\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst NamePlate = ({G, playerId}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Box position=\"relative\" className={classes.mainSection}>\r\n\r\n            {/*<Box className={classes.nameSection} >*/}\r\n            {/*    <Typography className={classes.nameText}>*/}\r\n            {/*                Business Leader*/}\r\n            {/*    </Typography>*/}\r\n            {/*</Box>*/}\r\n            {/*<Box display={\"flex\"} justifyContent={\"space-between\"} className={classes.coinImg}>*/}\r\n            {/*    <Box className={classes.coinsImg}></Box>*/}\r\n            {/*    <Box className={classes.carbonImg}></Box>*/}\r\n            {/*    <Box className={classes.teamImg}></Box>*/}\r\n            {/*</Box>*/}\r\n            {/*<Box display={\"flex\"} justifyContent={\"space-between\"} className={classes.coinValue} marginBottom={\"-10%\"}>*/}\r\n            {/*    <Box className={classes.coinsImg}></Box>*/}\r\n            {/*    <Box className={classes.carbonImg}></Box>*/}\r\n            {/*    <Box className={classes.teamImg}></Box>*/}\r\n            {/*</Box>*/}\r\n        </Box>\r\n\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default NamePlate;","import React, {useCallback, useState} from 'react';\r\nimport {Box, Grid} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"../Game\";\r\nimport CompanyCard from \"./CompanyCard\";\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    mainSection: {\r\n        height:255,\r\n\r\n        // backgroundImage:`url(${image})`,\r\n        // backgroundRepeat: \"no-repeat\",\r\n\r\n\r\n    },\r\n    root:{\r\n        width:250,\r\n    },\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CompanyStack = ({G,playerId,ctx,moves}) => {\r\n    const classes = useStyles();\r\n    console.log(G);\r\n    // const id = playerId.toString();\r\n    const player = G.players[playerId];\r\n\r\n\r\n\r\n    const cards = player.handCompanyDeck.map(card =>\r\n\r\n            <Grid item className={classes.root} sm={6} md={6} xs={6} lg={6} >\r\n                <CompanyCard card={card} key={card.id}  G={G}  ctx={ctx} moves={moves}/>\r\n            </Grid>\r\n\r\n            );\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n            <Box width={240} height={240}>\r\n                <Grid container spacing={1} justify={\"center\"} >\r\n                     {cards}\r\n                </Grid>\r\n            </Box>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default CompanyStack;","import React from \"react\";\r\nimport 'gridstack/dist/gridstack.min.css';\r\nimport { GridStack } from 'gridstack';\r\n// THEN to get HTML5 drag&drop\r\nimport 'gridstack/dist/h5/gridstack-dd-native';\r\n\r\nexport class DragItem extends React.Component {\r\n    state = {\r\n        count: 0,\r\n        info: \"\",\r\n        items: [\r\n            { x: 2, y: 1, h: 2 },\r\n            { x: 2, y: 4, w: 3 },\r\n            { x: 4, y: 2 },\r\n            { x: 3, y: 1, h: 2 },\r\n            { x: 0, y: 6, w: 2, h: 2 },\r\n        ],\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Provides access to the GridStack instance across the React component.\r\n        this.grid = GridStack.init({\r\n            float: true,\r\n            cellHeight: \"70px\",\r\n            minRow: 1,\r\n        });\r\n\r\n        this.grid.on(\"dragstop\", (event, element) => {\r\n            const node = element.gridstackNode;\r\n            this.setState({\r\n                info: `you just dragged node #${node.id} to ${node.x},${node.y} – good job!`,\r\n            });\r\n\r\n            // Clear the info text after a two second timeout.\r\n            // Clears previous timeout first.\r\n            window.clearTimeout(this.timerId);\r\n            this.timerId = window.setTimeout(() => {\r\n                this.setState({\r\n                    info: \"\",\r\n                });\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    addNewWidget = () => {\r\n        const node = this.state.items[this.state.count] || {\r\n            x: Math.round(12 * Math.random()),\r\n            y: Math.round(5 * Math.random()),\r\n            w: Math.round(1 + 3 * Math.random()),\r\n            h: Math.round(1 + 3 * Math.random()),\r\n        };\r\n        node.id = node.content = String(this.state.count);\r\n        this.setState((prevState) => ({\r\n            count: prevState.count + 1,\r\n        }));\r\n        this.grid.addWidget(node);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <button type=\"button\" onClick={this.addNewWidget}>\r\n                    Add Widget\r\n                </button>\r\n                {this.state.info}\r\n                <section class=\"grid-stack\"></section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useCallback, useState} from 'react';\r\nimport {Box, Grid, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"../Game\";\r\n// import CompanyCard from \"./CompanyCard\";\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    root:{\r\n        width:200,\r\n    },\r\n    mainSection:   {\r\n        // display: \"flex\",\r\n        width: 100,\r\n        height: 100 ,\r\n        borderRadius: 20,\r\n        backgroundColor:\"white\",\r\n        border:\"black\",\r\n    },\r\n\r\n    backImage: card =>( {\r\n        backgroundImage:`url(${card.synmain})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '86%',\r\n        backgroundRepeat: 'no-repeat',\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'block',\r\n        margin: 'auto',\r\n        // flexDirection:\"column\",\r\n\r\n        // marginTop: \"2%\",\r\n        // marginLeft: \"3%%\",\r\n    }),\r\n    valuesMain: {},\r\n    synergyMain: {},\r\n    actualValues:{\r\n        display:\"flex\",\r\n        justifyContent:'space-between',\r\n        width:\"87%\",\r\n        height:\"26%\",\r\n        marginLeft:\"6%\",\r\n        marginTop:\"4%\",\r\n        paddingTop:\"6%\",\r\n    },\r\n    carbonActual: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft:\"6%\",\r\n    },\r\n    carbonDropAct:{\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        height: \"3%\",\r\n        width: \"1.5%\",\r\n\r\n    },\r\n    carbonActualText: {\r\n        color: \"grey\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    valueActual: {\r\n        backgroundColor: \"white\",\r\n        border: \"3px solid #539bc5\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft: 104,\r\n    },\r\n    valueActualText: {\r\n        color: \"black\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    initialValues:{\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\",\r\n        width:\"36%\",\r\n        height:\"17%\",\r\n        marginTop:\"12%\",\r\n        marginLeft:\"57%\",\r\n    },\r\n    initialCarbon: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        // height: \"100%\",\r\n        width: \"34%\",\r\n        borderRadius: 50,\r\n\r\n    },\r\n    initialValue: {\r\n        backgroundColor: \"white\",\r\n        border: \"3px solid #539bc5\",\r\n        // height: \"100%\",\r\n        width: \"34%\",\r\n        borderRadius: 50,\r\n\r\n    },\r\n    initialCarbonText: {\r\n        color: \"grey\",\r\n        fontSize: \"11pt\",\r\n        marginLeft: \"23%\",\r\n        marginTop: \"-19%\",\r\n        // fontWeight:501,\r\n    },\r\n    initialValueText: {\r\n        color: \"black\",\r\n        fontSize: \"11pt\",\r\n        marginLeft: \"23%\",\r\n        marginTop: \"-19%\",\r\n        // fontWeight:501,\r\n    },\r\n    synLeft:{\r\n        backgroundColor: \"white\",\r\n        border: \"2px solid #539bc5\",\r\n        height: \"10%\",\r\n        width: \"10%\",\r\n        marginTop: \"-18%\",\r\n        marginLeft: \"9%\",\r\n        borderRadius: 50,\r\n    },\r\n    synMid:{\r\n        backgroundColor: \"white\",\r\n        border: \"2px solid #539bc5\",\r\n        height: \"10%\",\r\n        borderRadius:50,\r\n        width: \"10%\",\r\n        marginTop: \"-21%\",\r\n        marginLeft: \"34%\",\r\n\r\n\r\n    },\r\n    synLeftText:{\r\n        color: \"black\",\r\n        fontSize: \"7pt\",\r\n        marginLeft: \"1%\",\r\n        marginTop: \"-5%\",\r\n    },\r\n    synMidText:{\r\n        // fontWeight:501,\r\n        color: \"black\",\r\n        fontSize: \"7pt\",\r\n        marginLeft: \"1%\",\r\n        marginTop: \"-5%\",\r\n    },\r\n    companyName:{\r\n        marginTop: \"30.5%\",\r\n        marginLeft:\"8.5%\",\r\n        fontSize:\"10pt\",\r\n\r\n    },\r\n}))\r\n\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CompanyHand = ({G,playerId,ctx,moves}) => {\r\n    const classes = useStyles();\r\n\r\n    console.log(G);\r\n    // const id = playerId.toString();\r\n    const player = G.players[playerId];\r\n\r\n    const [handCards, setHandCards] = useState(player.handCompanyDeck);\r\n\r\n\r\n    const CompanyCard = ({card,key,G,ctx,moves}) => {\r\n\r\n        const classes = useStyles(card);\r\n        // console.log(currentId)\r\n\r\n\r\n        // console.log(props.ctx);\r\n        //console.log(playerId);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <Box\r\n                className={`${classes.mainSection}`}\r\n            >\r\n\r\n\r\n                <Box className={`${classes.backImage}`}>\r\n                    <Box zIndex={1} className={classes.actualValues}>\r\n\r\n\r\n                        <Box className={classes.carbonActual}>\r\n                            <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\r\n                        </Box>\r\n\r\n\r\n                        <Box className={classes.valueActual}>\r\n                            <Typography className={`${classes.valueActualText} `}>{card.actualValue}</Typography>\r\n                        </Box>\r\n\r\n\r\n                    </Box>\r\n                    <Box zIndex={2} className={classes.initialValues}>\r\n                        <Box className={classes.initialValue}>\r\n                            <Typography className={classes.initialValueText}>{card.initialValue}</Typography>\r\n                        </Box>\r\n                        <Box className={classes.initialCarbon}>\r\n                            <Typography className={classes.initialCarbonText}>{card.initialCarbon}</Typography>\r\n                        </Box>\r\n                    </Box>\r\n\r\n\r\n                    <Box className={classes.synLeft}>\r\n                        <Typography className={classes.synLeftText}>+3</Typography>\r\n                    </Box>\r\n                    <Box className={classes.synMid}>\r\n                        <Typography className={classes.synMidText}>+3</Typography>\r\n                    </Box>\r\n                    <Box className={classes.companyName}>{card.companyName}</Box>\r\n\r\n                </Box>\r\n\r\n            </Box>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const cards = handCards.map(card =>\r\n\r\n        <Grid item className={classes.root} sm={6} md={6} xs={6} lg={6} >\r\n            <CompanyCard card={card} key={card.id}  G={G}  ctx={ctx} moves={moves}/>\r\n        </Grid>\r\n\r\n    );\r\n\r\n    return (\r\n\r\n\r\n        <Box width={200} height={200}>\r\n            <Grid container spacing={1} justify={\"center\"} >\r\n                {cards}\r\n            </Grid>\r\n        </Box>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default CompanyHand;","import React, {useState} from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {carbonDeck} from \"../constants/carbonDeck\";\r\nimport {currentId} from \"../Game\";\r\nimport {\r\n    Draggable,\r\n    Droppable,\r\n    DragComponent,\r\n    DragState\r\n} from \"react-dragtastic\";\r\nimport CarbonValue from \"./CarbonValue\";\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    backCarbon: pic => ({\r\n        width: 240,\r\n        height: 240,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 7,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg5.svg\"})`,\r\n        // ${process.env.PUBLIC_URL + '/img/company/cc12.png'}/\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        // margin:\"0 auto\",\r\n        zIndex: 0,\r\n\r\n        // border: '1px solid #a49f9f',\r\n    }),\r\n    frontCarbon: {\r\n        width: 240,\r\n        height: 240,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 7,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg5.svg\"})`,\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        margin: \"0 auto\",\r\n        zIndex: 0,\r\n        // border: '1px solid #a49f9f',\r\n        // border: '0.5px solid #a49f9f',\r\n    },\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CarbonEventCard = () => {\r\n    const [event, setEvent] = useState(1)\r\n\r\n    const classes = useStyles(carbonDeck);\r\n\r\n    return (\r\n        <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"480px\"} height={\"240px\"} marginTop={\"-120px\"}\r\n             marginLeft={\"-20px\"}>\r\n            <Box display={\"inline-block\"} onClick={() => {\r\n                setEvent(event + 1)\r\n            }}\r\n                 className={classes.backCarbon}>\r\n\r\n            </Box>\r\n            <Box display={\"inline-block\"} className={classes.frontCarbon}></Box>\r\n        </Box>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default CarbonEventCard;","import React from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n    Draggable,\r\n    Droppable,\r\n    DragComponent,\r\n    DragState\r\n} from \"react-dragtastic\";\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    carbonActual: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft:\"6%\",\r\n    },\r\n    carbonActualText: {\r\n        color: \"grey\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    carbonDropAct:{\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        height: \"3%\",\r\n        width: \"1.5%\",\r\n\r\n    },\r\n\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CarbonValue = ({G,ctx,card,playerId,}) => {\r\n    const classes = useStyles();\r\n    return (\r\n<Box>\r\n        <Draggable id={card.id} type={\"actual\"} >\r\n            {dragState => (\r\n                <Box {...dragState.events} className={classes.carbonActual}>\r\n                    <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\r\n                </Box>\r\n            )}\r\n        </Draggable>\r\n\r\n    <DragComponent for={card.id} >\r\n        {dragState => (\r\n\r\n            <Box  className={classes.carbonDropAct} style={{\r\n                position:\"fixed\",\r\n                pointerEvents: 'none',\r\n                left: dragState.x -10  ,\r\n                top: dragState.y -30\r\n            }} onDrag={()=> {\r\n                console.log(...dragState.isOverAccepted);\r\n            }}\r\n            >\r\n                <Typography className={classes.carbonActualText}>1</Typography>\r\n            </Box>\r\n        )}\r\n    </DragComponent>\r\n</Box>\r\n    );\r\n};\r\n\r\n\r\nexport default CarbonValue;","import React, {useCallback, useState} from 'react';\r\nimport {Box, Grid, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {GridContextProvider, GridDropZone, GridItem} from \"react-grid-dnd\";\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    mainSection: {\r\n        width: \"60px\",\r\n        // border: \"0.5px solid #a49f9f\",\r\n        height: \"120px\",\r\n        // backgroundColor:\"limegreen\",\r\n        borderRadius: \"8px\",\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg.svg\"})`,\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        // margin:\"0 auto\",s\r\n        // zIndex:0,\r\n        // marginRight:\"1px\",\r\n        // marginTop:\"\",\r\n    },\r\n\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst TeamCard = ({G, card}) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <Box className={classes.mainSection}>\r\n\r\n        </Box>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default TeamCard;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {DndProvider, useDrag, useDrop} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {TouchBackend} from \"react-dnd-touch-backend\";\r\nimport '../../styles/App.css';\r\nimport {CELL_NAMES} from \"./companyCellNames\";\r\nimport {cardIds} from \"./cardIds\";\r\nimport CompanyCard from \"../CompanyCard\";\r\nimport CarbonEventCard from \"../CarbonEventCard\";\r\nimport TeamCard from \"../TeamCard\";\r\nimport {companyDeck} from \"../../constants/companyDeck\";\r\n\r\n\r\nconst MovableItem = ({name, index, currentCellName, moveCardHandler, setItems, G, playerID, item}) => {\r\n    const changeItemCell = (currentItem, cellName) => {\r\n        setItems((prevState) => {\r\n            return prevState.map(e => {\r\n                return {\r\n                    ...e,\r\n                    cell: e.name === currentItem.name ? cellName : e.cell\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    // console.log(ID);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'companyCard',\r\n        hover(item: any, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            // Don't replace items with themselves\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            // Determine rectangle on screen\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            // Get vertical middle\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            // Determine mouse position\r\n            const clientOffset = monitor.getClientOffset();\r\n            // Get pixels to the top\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            // Only perform the move when the mouse has crossed half of the items height\r\n            // When dragging downwards, only move when the cursor is below 50%\r\n            // When dragging upwards, only move when the cursor is above 50%\r\n            // Dragging downwards\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Dragging upwards\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Time to actually perform the action\r\n            moveCardHandler(dragIndex, hoverIndex);\r\n            // Note: we're mutating the monitor item here!\r\n            // Generally it's better to avoid mutations,\r\n            // but it's good here for the sake of performance\r\n            // to avoid expensive index searches.\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [{isDragging}, drag] = useDrag({\r\n        item: {index, name, currentCellName, type: 'companyCard'},\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n\r\n            if (dropResult) {\r\n                const {name} = dropResult;\r\n                const {\r\n                    a1,\r\n                    a2,\r\n                    a3,\r\n                    a4,\r\n                    a5,\r\n                    a6,\r\n                    a7,\r\n                    a8,\r\n                    a9,\r\n                    a0,\r\n                    b1,\r\n                    b2,\r\n                    b3,\r\n                    b4,\r\n                    b5,\r\n                    b6,\r\n                    b7,\r\n                    b8,\r\n                    b9,\r\n                    b0,\r\n                    c1,\r\n                    c2,\r\n                    c3,\r\n                    c4,\r\n                    c5,\r\n                    c6,\r\n                    c7,\r\n                    c8,\r\n                    c9,\r\n                    c0,\r\n                    d1,\r\n                    d2,\r\n                    d3,\r\n                    d4,\r\n                    d5,\r\n                    d6,\r\n                    d7,\r\n                    d8,\r\n                    d9,\r\n                    d0\r\n                } = CELL_NAMES;\r\n                switch (name) {\r\n                    case a1:\r\n                        changeItemCell(item, a1);\r\n                        break;\r\n                    case a2:\r\n                        changeItemCell(item, a2);\r\n                        break;\r\n                    case a3:\r\n                        changeItemCell(item, a3);\r\n                        break;\r\n                    case a4:\r\n                        changeItemCell(item, a4);\r\n                        break;\r\n                    case a5:\r\n                        changeItemCell(item, a5);\r\n                        break;\r\n                    case a6:\r\n                        changeItemCell(item, a6);\r\n                        break;\r\n                    case a7:\r\n                        changeItemCell(item, a7);\r\n                        break;\r\n                    case a8:\r\n                        changeItemCell(item, a8);\r\n                        break;\r\n                    case a9:\r\n                        changeItemCell(item, a9);\r\n                        break;\r\n                    case a0:\r\n                        changeItemCell(item, a0);\r\n                        break;\r\n                    case b1:\r\n                        changeItemCell(item, b1);\r\n                        break;\r\n                    case b2:\r\n                        changeItemCell(item, b2);\r\n                        break;\r\n                    case b3:\r\n                        changeItemCell(item, b3);\r\n                        break;\r\n                    case b4:\r\n                        changeItemCell(item, b4);\r\n                        break;\r\n                    case b5:\r\n                        changeItemCell(item, b5);\r\n                        break;\r\n                    case b6:\r\n                        changeItemCell(item, b6);\r\n                        break;\r\n                    case b7:\r\n                        changeItemCell(item, b7);\r\n                        break;\r\n                    case b8:\r\n                        changeItemCell(item, b8);\r\n                        break;\r\n                    case b9:\r\n                        changeItemCell(item, b9);\r\n                        break;\r\n                    case b0:\r\n                        changeItemCell(item, b0);\r\n                        break;\r\n                    case c1:\r\n                        changeItemCell(item, c1);\r\n                        break;\r\n                    case c2:\r\n                        changeItemCell(item, c2);\r\n                        break;\r\n                    case c3:\r\n                        changeItemCell(item, c3);\r\n                        break;\r\n                    case c4:\r\n                        changeItemCell(item, c4);\r\n                        break;\r\n                    case c5:\r\n                        changeItemCell(item, c5);\r\n                        break;\r\n                    case c6:\r\n                        changeItemCell(item, c6);\r\n                        break;\r\n                    case c7:\r\n                        changeItemCell(item, c7);\r\n                        break;\r\n                    case c8:\r\n                        changeItemCell(item, c8);\r\n                        break;\r\n                    case c9:\r\n                        changeItemCell(item, c9);\r\n                        break;\r\n                    case c0:\r\n                        changeItemCell(item, c0);\r\n                        break;\r\n                    case d1:\r\n                        changeItemCell(item, d1);\r\n                        break;\r\n                    case d2:\r\n                        changeItemCell(item, d2);\r\n                        break;\r\n                    case d3:\r\n                        changeItemCell(item, d3);\r\n                        break;\r\n                    case d4:\r\n                        changeItemCell(item, d4);\r\n                        break;\r\n                    case d5:\r\n                        changeItemCell(item, d5);\r\n                        break;\r\n                    case d6:\r\n                        changeItemCell(item, d6);\r\n                        break;\r\n                    case d7:\r\n                        changeItemCell(item, d7);\r\n                        break;\r\n                    case d8:\r\n                        changeItemCell(item, d8);\r\n                        break;\r\n                    case d9:\r\n                        changeItemCell(item, d9);\r\n                        break;\r\n                    case d0:\r\n                        changeItemCell(item, d0);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div ref={ref} style={{opacity}}>\r\n            <CompanyCard G={G} item={item} playerID={playerID}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Cell = ({children, className, title, G, ctx, ID}) => {\r\n    const [{isOver, canDrop}, drop] = useDrop({\r\n        accept: 'companyCard',\r\n        drop: () => ({name: title}),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div ref={drop} className={className}>\r\n            {/* <p>{title}</p> */}\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const PlayerHand = ({G, ctx, ID}) => {\r\n\r\n    const [items, setItems] = useState(companyDeck);\r\n\r\n    const isMobile = window.innerWidth < 600;\r\n\r\n    const card = G.players[0].handCompanyDeck[2];\r\n\r\n    const moveCardHandler = (dragIndex, hoverIndex) => {\r\n\r\n        const dragItem = items[dragIndex];\r\n\r\n        if (dragItem) {\r\n            setItems((prevState => {\r\n                const coppiedStateArray = [...prevState];\r\n\r\n                // remove item by \"hoverIndex\" and put \"dragItem\" instead\r\n                const prevItem = coppiedStateArray.splice(hoverIndex, 1, dragItem);\r\n\r\n                // remove item by \"dragIndex\" and put \"prevItem\" instead\r\n                coppiedStateArray.splice(dragIndex, 1, prevItem[0]);\r\n\r\n                return coppiedStateArray;\r\n            }));\r\n        }\r\n    };\r\n\r\n    const returnItemsForCell = (cellName) => {\r\n        return items.filter((item) => item.cell === cellName).map((item, index,G) => (\r\n                <MovableItem key={item.id}\r\n                             name={item.name}\r\n                             currentCellName={item.cell}\r\n                             setItems={setItems}\r\n                             index={index}\r\n                             moveCardHandler={moveCardHandler}\r\n                             G={G}\r\n                             item={item}\r\n                             playerID={ID}\r\n                />\r\n            ))\r\n    };\r\n\r\n    const {\r\n        a1,\r\n        a2,\r\n        a3,\r\n        a4,\r\n        a5,\r\n        a6,\r\n        a7,\r\n        a8,\r\n        a9,\r\n        a0,\r\n        b1,\r\n        b2,\r\n        b3,\r\n        b4,\r\n        b5,\r\n        b6,\r\n        b7,\r\n        b8,\r\n        b9,\r\n        b0,\r\n        c1,\r\n        c2,\r\n        c3,\r\n        c4,\r\n        c5,\r\n        c6,\r\n        c7,\r\n        c8,\r\n        c9,\r\n        c0,\r\n        d1,\r\n        d2,\r\n        d3,\r\n        d4,\r\n        d5,\r\n        d6,\r\n        d7,\r\n        d8,\r\n        d9,\r\n        d0\r\n    } = CELL_NAMES;\r\n// TODO: map handcompany into cells\r\n    return (\r\n        <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n            <div className={\"companyBlock\"}>\r\n                <div className={\"companyFlex\"}>\r\n                    <div className=\"container\">\r\n\r\n\r\n\r\n\r\n                        <Cell title={a0} className='column '>\r\n                            {returnItemsForCell(a0)}\r\n                        </Cell>\r\n                        <Cell title={a1} className='column '>\r\n                            {returnItemsForCell(a1)}\r\n                        </Cell>\r\n                        <Cell title={a2} className='column '>\r\n                            {returnItemsForCell(a2)}\r\n                        </Cell>\r\n                        <Cell title={a3} className='column'>\r\n                            {returnItemsForCell(a3)}\r\n                        </Cell>\r\n                        <Cell title={a4} className='column'>\r\n                            {returnItemsForCell(a4)}\r\n                        </Cell>\r\n                        <Cell title={a5} className='column'>\r\n                            {returnItemsForCell(a5)}\r\n                        </Cell>\r\n                        <Cell title={a6} className='column'>\r\n                            {returnItemsForCell(a6)}\r\n                        </Cell>\r\n                        <Cell title={a7} className='column'>\r\n                            {returnItemsForCell(a7)}\r\n                        </Cell>\r\n                        <Cell title={a8} className='column'>\r\n                            {returnItemsForCell(a8)}\r\n                        </Cell>\r\n                        <Cell title={a9} className='column'>\r\n                            {returnItemsForCell(a9)}\r\n                        </Cell>\r\n                    </div>\r\n                    <div className={\"eventCard\"}>\r\n                        <CarbonEventCard/>\r\n                        <TeamCard/>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <Cell title={b0} className='column'>\r\n                            {returnItemsForCell(b0)}\r\n                        </Cell>\r\n                        <Cell title={b1} className='column'>\r\n                            {returnItemsForCell(b1)}\r\n                        </Cell>\r\n                        <Cell title={b2} className='column'>\r\n                            {returnItemsForCell(b2)}\r\n                        </Cell>\r\n                        <Cell title={b3} className='column'>\r\n                            {returnItemsForCell(b3)}\r\n                        </Cell>\r\n                        <Cell title={b4} className='column'>\r\n                            {returnItemsForCell(b4)}\r\n                        </Cell>\r\n                        <Cell title={b5} className='column'>\r\n                            {returnItemsForCell(b5)}\r\n                        </Cell>\r\n                        <Cell title={b6} className='column'>\r\n                            {returnItemsForCell(b6)}\r\n                        </Cell>\r\n                        <Cell title={b7} className='column'>\r\n                            {returnItemsForCell(b7)}\r\n                        </Cell>\r\n                        <Cell title={b8} className='column'>\r\n                            {returnItemsForCell(b8)}\r\n                        </Cell>\r\n                        <Cell title={b9} className='column'>\r\n                            {returnItemsForCell(b9)}\r\n                        </Cell>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={\"companyBlock lower\"}>\r\n                <div className={\"companyFlex\"}>\r\n                    <div className=\"container\">\r\n                        <Cell title={c0} className='column '>\r\n                            {returnItemsForCell(c0)}\r\n                        </Cell>\r\n                        <Cell title={c1} className='column '>\r\n                            {returnItemsForCell(c1)}\r\n                        </Cell>\r\n                        <Cell title={c2} className='column '>\r\n                            {returnItemsForCell(c2)}\r\n                        </Cell>\r\n                        <Cell title={c3} className='column'>\r\n                            {returnItemsForCell(c3)}\r\n                        </Cell>\r\n                        <Cell title={c4} className='column'>\r\n                            {returnItemsForCell(c4)}\r\n                        </Cell>\r\n                        <Cell title={c5} className='column'>\r\n                            {returnItemsForCell(c5)}\r\n                        </Cell>\r\n                        <Cell title={c6} className='column'>\r\n                            {returnItemsForCell(c6)}\r\n                        </Cell>\r\n                        <Cell title={c7} className='column'>\r\n                            {returnItemsForCell(c7)}\r\n                        </Cell>\r\n                        <Cell title={c8} className='column'>\r\n                            {returnItemsForCell(c8)}\r\n                        </Cell>\r\n                        <Cell title={c9} className='column'>\r\n                            {returnItemsForCell(c9)}\r\n                        </Cell>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <Cell title={d0} className='column '>\r\n                            {returnItemsForCell(d0)}\r\n                        </Cell>\r\n                        <Cell title={d1} className='column '>\r\n                            {returnItemsForCell(d1)}\r\n                        </Cell>\r\n                        <Cell title={d2} className='column '>\r\n                            {returnItemsForCell(d2)}\r\n                        </Cell>\r\n                        <Cell title={d3} className='column'>\r\n                            {returnItemsForCell(d3)}\r\n                        </Cell>\r\n                        <Cell title={d4} className='column'>\r\n                            {returnItemsForCell(d4)}\r\n                        </Cell>\r\n                        <Cell title={d5} className='column'>\r\n                            {returnItemsForCell(d5)}\r\n                        </Cell>\r\n                        <Cell title={d6} className='column'>\r\n                            {returnItemsForCell(d6)}\r\n                        </Cell>\r\n                        <Cell title={d7} className='column'>\r\n                            {returnItemsForCell(d7)}\r\n                        </Cell>\r\n                        <Cell title={d8} className='column'>\r\n                            {returnItemsForCell(d8)}\r\n                        </Cell>\r\n                        <Cell title={d9} className='column'>\r\n                            {returnItemsForCell(d9)}\r\n                        </Cell>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </DndProvider>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {\r\n    GridContextProvider,\r\n    GridDropZone,\r\n    GridItem,\r\n    swap,\r\n    move\r\n} from \"react-grid-dnd\";\r\nimport {Box, Grid, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport \"../styles/project.css\";\r\nimport NamePlate from \"./NamePlate\";\r\nimport CompanyHand from \"./CompanyHand\";\r\nimport CarbonEventCard from \"./CarbonEventCard\";\r\nimport TeamCard from \"./TeamCard\";\r\nimport {IsCard} from \"./TestCellDnd/IsCard\";\r\nimport {PlayerHand} from \"./TestCellState/PlayerHand\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root:{\r\n//         width:200,\r\n//     },\r\n//     mainSection:   {\r\n//         // display: \"flex\",\r\n//         width: \"90px\",\r\n//         height: 90 ,\r\n//         borderRadius: 15,\r\n//         backgroundColor:\"white\",\r\n//         // border:\"black\",\r\n//         marginBottom:\"20px\",\r\n//         cursor:\"pointer\",\r\n//     },\r\n//\r\n//     backImage: card =>( {\r\n//         backgroundImage:`url(${card.synmain})`,\r\n//         backgroundPosition: 'center',\r\n//         backgroundSize: '86%',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         height: '100%',\r\n//         width: '100%',\r\n//         display: 'block',\r\n//         margin: 'auto',\r\n//         // flexDirection:\"column\",\r\n//\r\n//         // marginTop: \"2%\",\r\n//         // marginLeft: \"3%%\",\r\n//     }),\r\n//     valuesMain: {},\r\n//     synergyMain: {},\r\n//     actualValues:{\r\n//         display:\"flex\",\r\n//         justifyContent:'space-between',\r\n//         width:\"87%\",\r\n//         height:\"26%\",\r\n//         marginLeft:\"6%\",\r\n//         marginTop:\"4%\",\r\n//         paddingTop:\"6%\",\r\n//     },\r\n//     carbonActual: {\r\n//         backgroundColor: \"black\",\r\n//         border: \"3px solid grey\",\r\n//         height: \"90%\",\r\n//         width: \"27%\",\r\n//         borderRadius: 50,\r\n//         marginTop:\"2%\",\r\n//         // marginLeft:\"6%\",\r\n//     },\r\n//\r\n//     carbonActualText: {\r\n//         color: \"grey\",\r\n//         fontSize: \"13pt\",\r\n//         marginLeft: \"28%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     valueActual: {\r\n//         backgroundColor: \"white\",\r\n//         border: \"3px solid #539bc5\",\r\n//         height: \"90%\",\r\n//         width: \"27%\",\r\n//         borderRadius: 50,\r\n//         marginTop:\"2%\",\r\n//         // marginLeft: 104,\r\n//     },\r\n//     valueActualText: {\r\n//         color: \"black\",\r\n//         fontSize: \"13pt\",\r\n//         marginLeft: \"28%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     initialValues:{\r\n//         display:\"flex\",\r\n//         justifyContent:\"space-between\",\r\n//         width:\"36%\",\r\n//         height:\"17%\",\r\n//         marginTop:\"12%\",\r\n//         marginLeft:\"57%\",\r\n//     },\r\n//     initialCarbon: {\r\n//         backgroundColor: \"black\",\r\n//         border: \"3px solid grey\",\r\n//         // height: \"100%\",\r\n//         width: \"34%\",\r\n//         borderRadius: 50,\r\n//\r\n//     },\r\n//     initialValue: {\r\n//         backgroundColor: \"white\",\r\n//         border: \"3px solid #539bc5\",\r\n//         // height: \"100%\",\r\n//         width: \"34%\",\r\n//         borderRadius: 50,\r\n//\r\n//     },\r\n//     initialCarbonText: {\r\n//         color: \"grey\",\r\n//         fontSize: \"8pt\",\r\n//         marginLeft: \"23%\",\r\n//         marginTop: \"-19%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     initialValueText: {\r\n//         color: \"black\",\r\n//         fontSize: \"8pt\",\r\n//         marginLeft: \"23%\",\r\n//         marginTop: \"-19%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     synLeft:{\r\n//         backgroundColor: \"white\",\r\n//         border: \"2px solid #539bc5\",\r\n//         height: \"10%\",\r\n//         width: \"10%\",\r\n//         marginTop: \"-18%\",\r\n//         marginLeft: \"9%\",\r\n//         borderRadius: 50,\r\n//     },\r\n//     synMid:{\r\n//         backgroundColor: \"white\",\r\n//         border: \"2px solid #539bc5\",\r\n//         height: \"10%\",\r\n//         borderRadius:50,\r\n//         width: \"10%\",\r\n//         marginTop: \"-21%\",\r\n//         marginLeft: \"34%\",\r\n//\r\n//\r\n//     },\r\n//     synLeftText:{\r\n//         color: \"black\",\r\n//         fontSize: \"6pt\",\r\n//         marginLeft: \"1%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//\r\n//     },\r\n//     synMidText:{\r\n//         // fontWeight:501,\r\n//         color: \"black\",\r\n//         fontSize: \"6pt\",\r\n//         marginLeft: \"1%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//\r\n//     },\r\n//     companyName:{\r\n//         marginTop: \"30.5%\",\r\n//         marginLeft:\"8.5%\",\r\n//         fontSize:\"8pt\",\r\n//\r\n//     },\r\n//     auction:{\r\n//         textAlign:\"center\",\r\n//         marginTop:\"17%\",\r\n//         fontSize:20,\r\n//     },\r\n//     bid:{\r\n//         backgroundColor: \"darkgreen\",\r\n//         border: \"5px solid white\",\r\n//         zIndex:0,\r\n//     },\r\n// }));\r\n\r\n\r\nexport const Card = ({G, ctx}) => {\r\n    // const playerID = [\"1\",\"2\",\"3\",\"4\"]\r\n    console.log(G.players[0].handCompanyDeck);\r\n    // const classes = useStyles();\r\n    //    const [items, setItems] = React.useState({\r\n    //     first: G.players[0].handCompanyDeck,\r\n    //     second: G.players[1].handCompanyDeck,\r\n    //     third: G.players[2].handCompanyDeck,\r\n    //     fourth: G.players[3].handCompanyDeck,\r\n    //        main:G.companyDeck,\r\n    //        firstTeam: G.players[0].handTeamDeck,\r\n    //        secondTeam: G.players[1].handTeamDeck,\r\n    //        thirdTeam: G.players[2].handTeamDeck,\r\n    //        fourthTeam: G.players[3].handTeamDeck,\r\n    //        mainTeam:G.teamDeck,\r\n    // });\r\n\r\n\r\n    //  const CompanyCard = ({card,key,G}) => {\r\n    //     const classes = useStyles(card);\r\n    //\r\n    //     return (\r\n    //\r\n    //         <Box\r\n    //             className={`${classes.mainSection}`}\r\n    //         >\r\n    //\r\n    //\r\n    //             <Box className={`${classes.backImage}`}>\r\n    //                 <Box zIndex={1} className={classes.actualValues}>\r\n    //\r\n    //\r\n    //                     <Box className={classes.carbonActual}>\r\n    //                         <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\r\n    //                     </Box>\r\n    //\r\n    //\r\n    //                     <Box className={classes.valueActual}>\r\n    //                         <Typography className={`${classes.valueActualText} `}>{card.actualValue}</Typography>\r\n    //                     </Box>\r\n    //\r\n    //\r\n    //                 </Box>\r\n    //                 <Box zIndex={2} className={classes.initialValues}>\r\n    //                     <Box className={classes.initialValue}>\r\n    //                         <Typography className={classes.initialValueText}>{card.initialValue}</Typography>\r\n    //                     </Box>\r\n    //                     <Box className={classes.initialCarbon}>\r\n    //                         <Typography className={classes.initialCarbonText}>{card.initialCarbon}</Typography>\r\n    //                     </Box>\r\n    //                 </Box>\r\n    //\r\n    //\r\n    //                 <Box className={classes.synLeft}>\r\n    //                     <Typography className={classes.synLeftText}>+3</Typography>\r\n    //                 </Box>\r\n    //                 <Box className={classes.synMid}>\r\n    //                     <Typography className={classes.synMidText}>+3</Typography>\r\n    //                 </Box>\r\n    //                 <Box className={classes.companyName}>{card.companyName}</Box>\r\n    //\r\n    //             </Box>\r\n    //\r\n    //         </Box>\r\n    //\r\n    //\r\n    //     );\r\n    // };\r\n\r\n\r\n    // function onChangeCompany(sourceId, sourceIndex, targetIndex, targetId) {\r\n    //     if (targetId) {\r\n    //         const result = move(\r\n    //             items[sourceId],\r\n    //             items[targetId],\r\n    //             sourceIndex,\r\n    //             targetIndex\r\n    //         );\r\n    //         return setItems({\r\n    //             ...items,\r\n    //             [sourceId]: result[0],\r\n    //             [targetId]: result[1]\r\n    //         });\r\n    //     }\r\n    //\r\n    //     const result = swap(items[sourceId], sourceIndex, targetIndex);\r\n    //     return setItems({\r\n    //         ...items,\r\n    //         [sourceId]: result\r\n    //     });\r\n    //     console.log(items);\r\n    // }\r\n\r\n// console.log(player.handCompanyDeck);\r\n\r\n\r\n    return (\r\n        // <GridContextProvider onChange={onChangeCompany}>\r\n        <>\r\n            <Box paddingLeft={\"60px\"} paddingTop={\"60px\"}>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1980px\"}>\r\n                    <Box display={\"flex\"} width={\"600px\"}>\r\n                        <NamePlate/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n\r\n                    </Box>\r\n                    <Box display={\"flex\"}>\r\n                        {/*<TeamCard />*/}\r\n                        {/*/!*<TeamCard />*!/*/}\r\n                        {/*<TeamCard />*/}\r\n                        {/*<NamePlate/>*/}\r\n\r\n                    </Box>\r\n\r\n                    {/*<NamePlate/>*/}\r\n                    {/*<NamePlate/>*/}\r\n\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n                    {/*    <NamePlate G={G} playerId={0} />*/}\r\n\r\n                    {/*    <GridDropZone*/}\r\n                    {/*        className={\"handTeam\"}*/}\r\n                    {/*        id=\"firstTeam\"*/}\r\n                    {/*        boxesPerRow={2}*/}\r\n                    {/*        rowHeight={95}*/}\r\n                    {/*    >*/}\r\n                    {/*        {items.firstTeam.map(item => (*/}\r\n                    {/*            <GridItem key={item.id}>*/}\r\n                    {/*                <TeamCard G={G} card = {item}/>*/}\r\n                    {/*            </GridItem>*/}\r\n                    {/*        ))}*/}\r\n                    {/*    </GridDropZone>*/}\r\n                    {/*</Box>*/}\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n\r\n\r\n                    {/*        <GridDropZone*/}\r\n                    {/*            className={\"handTeam\"}*/}\r\n                    {/*            id=\"secondTeam\"*/}\r\n                    {/*            boxesPerRow={3}*/}\r\n                    {/*            rowHeight={95}*/}\r\n                    {/*        >*/}\r\n                    {/*            {items.secondTeam.map(item => (*/}\r\n                    {/*                <GridItem key={item.id}>*/}\r\n                    {/*                    <TeamCard G={G} card = {item}/>*/}\r\n                    {/*                </GridItem>*/}\r\n                    {/*            ))}*/}\r\n                    {/*        </GridDropZone>*/}\r\n\r\n\r\n                    {/*    <NamePlate G={G} playerId={1} />*/}\r\n                    {/*</Box>*/}\r\n                </Box>\r\n                <Box className={\"container1\"}>\r\n                    {/*<Box width={\"620px\"}  display={\"flex\"} flexWrap={\"wrap\"}  justifyContent={\"space-between\"} >*/}\r\n\r\n                    {/*    <PlayerHand G={G} ctx={ctx} ID={0}/>*/}\r\n\r\n\r\n                    {/*</Box>*/}\r\n\r\n                    {/*<Box display={\"flex\"}>*/}\r\n                    {/*    <CarbonEventCard />*/}\r\n                    {/*        <TeamCard />*/}\r\n                    {/*</Box>*/}\r\n\r\n\r\n                    {/*<Box width={\"620px\"}   >*/}\r\n                    {/*    <PlayerHand G={G} ctx={ctx} ID={1}/>*/}\r\n\r\n                    {/*</Box>*/}\r\n\r\n                    <PlayerHand ID={0} ctx={ctx} G={G}/>\r\n\r\n                    {/*<Box  >*/}\r\n                    {/*    <CarbonEventCard />*/}\r\n\r\n                    {/*</Box>*/}\r\n\r\n\r\n                    {/*<GridDropZone*/}\r\n\r\n                    {/*    className={\"dropzone\"}*/}\r\n                    {/*    id=\"second\"*/}\r\n                    {/*    boxesPerRow={2}*/}\r\n                    {/*    rowHeight={95}*/}\r\n                    {/*>*/}\r\n                    {/*    {items.second.map(item => (*/}\r\n                    {/*        <GridItem key={item.id}>*/}\r\n                    {/*                    <CompanyCard card={item} key={item.id}  G={G} />*/}\r\n                    {/*        </GridItem>*/}\r\n                    {/*    ))}*/}\r\n                    {/*</GridDropZone>*/}\r\n                </Box>\r\n\r\n\r\n                {/*<GridDropZone*/}\r\n                {/*    className={\"mainTeamDeck\"}*/}\r\n                {/*    id = \"first\"*/}\r\n                {/*    boxesPerRow={9}*/}\r\n                {/*    rowHeight={95}*/}\r\n                {/*>*/}\r\n                {/*    {items.main.map(item => (*/}\r\n                {/*            <GridItem key={item.id}>*/}\r\n                {/*                <CompanyCard card={item} key={item.id}  G={G}/>*/}\r\n                {/*            </GridItem>*/}\r\n                {/*        ))}*/}\r\n\r\n                {/*</GridDropZone>*/}\r\n\r\n\r\n                {/*<Box display={\"flex\"} justifyContent={\"space-between\"} className={\"container1\"} mt={\"360px\"}>*/}\r\n                {/*<Box className={\"dropzone\"}>*/}\r\n                {/*<GridDropZone*/}\r\n\r\n\r\n                {/*    id=\"third\"*/}\r\n                {/*    boxesPerRow={2}*/}\r\n                {/*    rowHeight={95}*/}\r\n                {/*>*/}\r\n                {/*    {items.third.map(item => (*/}\r\n                {/*        <GridItem key={item.id}>*/}\r\n\r\n                {/*            <CompanyCard card={item} key={item.id}  G={G}/>*/}\r\n\r\n                {/*        </GridItem>*/}\r\n                {/*    ))}*/}\r\n                {/*</GridDropZone>*/}\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box width={\"620px\"}   >*/}\r\n                {/*    <PlayerHand G={G} ctx={ctx} ID={2}  />*/}\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box width={\"620px\"}   >*/}\r\n                {/*    <PlayerHand G={G} ctx={ctx} ID={3}/>*/}\r\n                {/*</Box>*/}\r\n                {/*<GridDropZone*/}\r\n\r\n                {/*    className={\"dropzone\"}*/}\r\n                {/*    id=\"fourth\"*/}\r\n                {/*    boxesPerRow={2}*/}\r\n                {/*    rowHeight={95}*/}\r\n                {/*>*/}\r\n                {/*    {items.fourth.map(item => (*/}\r\n                {/*        <GridItem key={item.id}>*/}\r\n                {/*            <CompanyCard card={item} key={item.id}  G={G} />*/}\r\n                {/*        </GridItem>*/}\r\n                {/*    ))}*/}\r\n                {/*</GridDropZone>*/}\r\n                {/*</Box>*/}\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1980px\"}>\r\n                    {/*<Box display={\"flex\"} width={\"1980px\"}>*/}\r\n                    {/*    <NamePlate/>*/}\r\n                    {/*    <TeamCard/>*/}\r\n                    {/*    <TeamCard/>*/}\r\n                    {/*    <TeamCard/>*/}\r\n                    {/*</Box>*/}\r\n                    <Box display={\"flex\"}>\r\n                        {/*<TeamCard />*/}\r\n                        {/*/!*<TeamCard />*!/*/}\r\n                        {/*<TeamCard />*/}\r\n                        {/*<NamePlate/>*/}\r\n\r\n                    </Box>\r\n\r\n                    {/*<NamePlate/>*/}\r\n                    {/*<NamePlate/>*/}\r\n\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n                    {/*    <NamePlate G={G} playerId={0} />*/}\r\n\r\n                    {/*    <GridDropZone*/}\r\n                    {/*        className={\"handTeam\"}*/}\r\n                    {/*        id=\"firstTeam\"*/}\r\n                    {/*        boxesPerRow={2}*/}\r\n                    {/*        rowHeight={95}*/}\r\n                    {/*    >*/}\r\n                    {/*        {items.firstTeam.map(item => (*/}\r\n                    {/*            <GridItem key={item.id}>*/}\r\n                    {/*                <TeamCard G={G} card = {item}/>*/}\r\n                    {/*            </GridItem>*/}\r\n                    {/*        ))}*/}\r\n                    {/*    </GridDropZone>*/}\r\n                    {/*</Box>*/}\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n\r\n\r\n                    {/*        <GridDropZone*/}\r\n                    {/*            className={\"handTeam\"}*/}\r\n                    {/*            id=\"secondTeam\"*/}\r\n                    {/*            boxesPerRow={3}*/}\r\n                    {/*            rowHeight={95}*/}\r\n                    {/*        >*/}\r\n                    {/*            {items.secondTeam.map(item => (*/}\r\n                    {/*                <GridItem key={item.id}>*/}\r\n                    {/*                    <TeamCard G={G} card = {item}/>*/}\r\n                    {/*                </GridItem>*/}\r\n                    {/*            ))}*/}\r\n                    {/*        </GridDropZone>*/}\r\n\r\n\r\n                    {/*    <NamePlate G={G} playerId={1} />*/}\r\n                    {/*</Box>*/}\r\n                </Box>\r\n                {/*<Box marginTop={1} display={\"flex\"} justifyContent={\"space-between\"} width={\"1525px\"}>*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n                {/*        <NamePlate G={G} playerId={2} />*/}\r\n\r\n                {/*            <GridDropZone*/}\r\n                {/*                className={\"handTeam\"}*/}\r\n                {/*                id=\"thirdTeam\"*/}\r\n                {/*                boxesPerRow={3}*/}\r\n                {/*                rowHeight={95}*/}\r\n                {/*            >*/}\r\n                {/*                {items.thirdTeam.map(item => (*/}\r\n                {/*                    <GridItem key={item.id}>*/}\r\n                {/*                        <TeamCard G={G} card = {item}/>*/}\r\n                {/*                    </GridItem>*/}\r\n                {/*                ))}*/}\r\n                {/*            </GridDropZone>*/}\r\n\r\n                {/*    </Box>*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n\r\n                {/*            <GridDropZone*/}\r\n                {/*                className={\"handTeam handTeam1\"}*/}\r\n                {/*                id=\"fourthTeam\"*/}\r\n                {/*                boxesPerRow={3}*/}\r\n                {/*                rowHeight={95}*/}\r\n                {/*            >*/}\r\n                {/*            {items.fourthTeam.map(item => (*/}\r\n                {/*                <GridItem key={item.id}>*/}\r\n                {/*                    <TeamCard G={G} card = {item}/>*/}\r\n                {/*                </GridItem>*/}\r\n                {/*            ))}*/}\r\n                {/*            </GridDropZone>*/}\r\n\r\n                {/*        <NamePlate G={G} playerId={3} />*/}\r\n                {/*    </Box>*/}\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box  position={\"absolute\"} marginTop={\"-208px\"} borderRadius={20} width={180} height={90} className={classes.bid} marginLeft={\"45%\"}>*/}\r\n                {/*    <Typography className={classes.auction}>Auction</Typography>*/}\r\n                {/*</Box>*/}\r\n            </Box>\r\n        </>\r\n        // </GridContextProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport '../styles/style.scss';\r\n\r\n\r\n// import 'nprogress/nprogress';\r\n\r\n// class App extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <div className=\"page-container\">\r\n//\r\n//                 <BlogCard />\r\n//                 <footer>\r\n//                     Image credit: <a href=\"https://78.media.tumblr.com/d98fb931adb117c70f0dbced9e947520/tumblr_pe582mbWip1tlgv32o1_1280.png\">8pxl on Tumblr</a>\r\n//                 </footer>\r\n//\r\n//         )\r\n//     }\r\n// }\r\nlet counter = 0;\r\nexport class CarbonEvent2 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { flipped: false };\r\n        this.flip = this.flip.bind(this);\r\n    }\r\n\r\n\r\n    flip = () => {\r\n        this.setState({ flipped: !this.state.flipped });\r\n\r\n\r\n    }\r\n    flip2 = () =>{\r\n        this.setState({ flipped: !this.state.flipped });\r\n    };\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"page-container\">\r\n            <div onClick={this.flip} onClick={this.flip2} className={\"card-container\" + (this.state.flipped ? \" flipped\" : \"\")}>\r\n\r\n                <Front G={this.props.G} ctx={this.props.ctx} />\r\n                <Back img={\"../../public/img/carbonevent/carbonEventBack.png\"} />\r\n            </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Front extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"front\">\r\n                <ImageArea />\r\n                <MainArea G={this.props.G} ctx={this.props.ctx} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Back extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"back\"} >\r\n                <img src={this.props.img} alt=\"backcarbon\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ImageArea extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"image-container\">\r\n                {/*<img className=\"card-image\" src=\"https://78.media.tumblr.com/d98fb931adb117c70f0dbced9e947520/tumblr_pe582mbWip1tlgv32o1_1280.png\"></img>*/}\r\n                <h1 className=\"title\">An example event card</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass MainArea extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main-area\">\r\n                <div className=\"blog-post\">\r\n                    <p>{this.props.G.currentCarbon[0].event1.id[0].toString()}</p>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport 'gridstack/dist/gridstack.min.css';\r\nimport { GridStack } from 'gridstack';\r\n// THEN to get HTML5 drag&drop\r\nimport 'gridstack/dist/h5/gridstack-dd-native';\r\n\r\nfunction Doit() {\r\n    // _________________________________________________\r\n    // Initialize Gridstack inside useEffect so that DOM is rendered when its initialized\r\n    // _________________________________________________\r\n    useEffect(() => {\r\n        let grid = GridStack.init();\r\n    });\r\n    // _________________________________________________\r\n    // _________________________________________________\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div class=\"grid-stack\">\r\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\r\n                    <div class=\"grid-stack-item-content\">Item 1</div>\r\n                </div>\r\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\r\n                    <div class=\"grid-stack-item-content\">Item 2</div>\r\n                </div>\r\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\r\n                    <div class=\"grid-stack-item-content\">Item 3</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doit;","import React, { useCallback, useRef, useState } from 'react';\r\nimport CompanyCard from \"./components/CompanyCard\";\r\nimport {Box,Typography,Button, Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"./Game\";\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport {companyDeck} from \"./constants/companyDeck\";\r\nimport CompanyStack from \"./components/CompanyStack\";\r\nimport NamePlate from \"./components/NamePlate\";\r\nimport {number} from \"prop-types\";\r\nimport {DragItem} from \"./components/DragItem\";\r\nimport {Card} from \"./components/Card\";\r\nimport CarbonEventCard from \"./components/CarbonEventCard\";\r\nimport {CarbonEvent2} from \"./components/CarbonEventCard2\";\r\nimport TeamCard from \"./components/TeamCard\";\r\nimport CompanyHand from \"./components/CompanyHand\";\r\nimport Doit from \"./components/Doit\";\r\nimport {\r\n    GridContextProvider,\r\n    GridDropZone,\r\n    GridItem,\r\n    swap,\r\n    move\r\n} from \"react-grid-dnd\";\r\nimport {Board} from \"./components/TestCellDnd/Board\";\r\nimport {PlayerHand} from \"./components/TestCellState/PlayerHand\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    bid:{\r\n        backgroundColor: \"green\",\r\n        border: \"5px solid white\",\r\n        zIndex:2,\r\n    },\r\n    background:{\r\n        // backgroundColor:\"#cbcaca\",\r\n        height:\"1200px\",\r\n        width:\"1980px\",\r\n        margin:90,\r\n        // padding:\"90px\",\r\n        backgroundImage:`url(${process.env.PUBLIC_URL + '/img/svgtestbg.svg'})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n\r\n        display: 'block',\r\n\r\n    },\r\n    auction:{\r\n        textAlign:\"center\",\r\n        marginTop:\"20%\",\r\n        fontSize:40,\r\n    },\r\n}));\r\n\r\nconst NZGBoard = ({ctx, G, moves, ...rest }) => {\r\n\r\n    // const [hidden1,setHidden1] = useState(true);\r\n    // const [hidden2,setHidden2] = useState(true);\r\n\r\n    // const [hidden3,setHidden3] = useState(true);\r\n    // const [hidden4,setHidden4] = useState(true);\r\n    // const [playerId1,setPlayerId1] = useState(-5);\r\n    // const [playerId2,setPlayerId2] = useState(-5);\r\n    // const [playerId3,setPlayerId3] = useState(-5);\r\n    // const [playerId4,setPlayerId4] = useState(-5);\r\n    // const [cardId1 , setCardId1] = useState(currentId);\r\n    // const [cardId2 , setCardId2] = useState(currentId);\r\n    // const [cardId3 , setCardId3] = useState(currentId);\r\n    // const [cardId4 , setCardId4] = useState(currentId);\r\n\r\n    // const [actualCard1,setActualCard1] = useState(0);\r\n    // const [actualCard2,setActualCard2] = useState(0);\r\n    // const [actualCard3,setActualCard3] = useState(0);\r\n    // const [actualCard4,setActualCard4] = useState(0);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // console.log(ctx.currentPlayer);\r\n    // console.log(G);\r\n\r\n   //  function playerData (cardId,PlayerId) {\r\n   //      this.cardId = cardId;\r\n   //      this.PlayerId = PlayerId;\r\n   //  };\r\n   //\r\n   // const getPlayerData = () => {\r\n   //     if (ctx.currentPlayer === 0){\r\n   //         const playerOne = new playerData(cardId,playerId)\r\n   //     } if (ctx.currentPlayer === 1){\r\n   //         const PlayerTwo = new playerData(cardId,playerId)\r\n   //     } if ( ctx.currentPlayer === 2){\r\n   //         const PlayerThree = new playerData(cardId,playerId)\r\n   //     }if ( ctx.currentPlayer === 3){\r\n   //         const PlayerFour = new playerData(cardId,playerId)\r\n   //     }\r\n   //\r\n   // };\r\n\r\n\r\n    // const cardidtrue = currentId;\r\n    // console.log(cardId);\r\n    // moves.InitialDraw();\r\n    // moves.initialDraw();\r\n    // let actualId = currentId - 1;\r\n\r\n\r\n    // const onDraw = useCallback(() => {\r\n    //     // moves.InitialDraw();\r\n    //      // setPlayerId1(ctx.currentPlayer);\r\n    //      console.log(playerId1);\r\n    //\r\n    //      if (ctx.currentPlayer.toString() === \"0\")\r\n    //      {\r\n    //         setPlayerId1(ctx.currentPlayer);\r\n    //\r\n    //     } if (ctx.currentPlayer.toString() === \"1\")\r\n    //     {\r\n    //         setPlayerId2(ctx.currentPlayer);\r\n    //\r\n    //     } if ( ctx.currentPlayer.toString() === \"2\")\r\n    //     {\r\n    //         setPlayerId3(ctx.currentPlayer);\r\n    //     }if ( ctx.currentPlayer.toString() === \"3\")\r\n    //     {\r\n    //         setPlayerId4(ctx.currentPlayer);\r\n    //     // moves,setHidden1,hidden1,hidden2,hidden3,hidden4,cardId1,cardId2,cardId3,cardId4,playerId1,playerId2,playerId3,playerId4,ctx,G,actualCard1,actualCard2,actualCard3,actualCard4\r\n    //     }\r\n    //\r\n    // }, [moves,G,ctx,playerId1,playerId2,playerId3,playerId4]);\r\n\r\n    // function onChange(sourceId, sourceIndex, targetIndex, targetId) {\r\n    //     if (targetId) {\r\n    //         const result = move(\r\n    //             items[sourceId],\r\n    //             items[targetId],\r\n    //             sourceIndex,\r\n    //             targetIndex\r\n    //         );\r\n    //         return setItems({\r\n    //             ...items,\r\n    //             [sourceId]: result[0],\r\n    //             [targetId]: result[1]\r\n    //         });\r\n    //     }\r\n    //\r\n    //     const result = swap(items[sourceId], sourceIndex, targetIndex);\r\n    //     return setItems({\r\n    //         ...items,\r\n    //         [sourceId]: result\r\n    //     });\r\n    // }\r\n\r\n\r\n    return(\r\n        // <DndProvider backend={HTML5Backend}>\r\n\r\n        <div className={classes.background}>\r\n                {/*        <Box     width={\"100%\"} >*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"100%\"} >*/}\r\n                {/*        <NamePlate G={G} playerId={0} />*/}\r\n                {/*        <NamePlate G={G} playerId={1} />*/}\r\n                {/*    </Box>*/}\r\n                {/*    /!*{*!/*/}\r\n                {/*    /!*    (playerId1.toString()) >= \"0\"  ? <CompanyStack G={G} playerId={playerId1} ctx={ctx} moves={moves} />  : null*!/*/}\r\n                {/*    /!*}*!/*/}\r\n\r\n                {/*    /!*{*!/*/}\r\n                {/*    /!*    (playerId2.toString()) >= \"1\"  ? <CompanyStack G={G} playerId={playerId2} ctx={ctx} moves={moves} />  : null*!/*/}\r\n                {/*    /!*}*!/*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"}>*/}\r\n                {/*        <CompanyHand G={G} playerId={0} ctx={ctx} moves={moves}/>*/}\r\n                {/*        <CompanyHand G={G} playerId={1} ctx={ctx} moves={moves}/>*/}\r\n                {/*    </Box>*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-around\"}>*/}\r\n                {/*        <CarbonEvent2 G={G} ctx={ctx} />*/}\r\n\r\n                {/*        <TeamCard />*/}\r\n\r\n                {/*    </Box>*/}\r\n\r\n                {/*        <Box  position={\"fixed\"} marginTop={40} borderRadius={50} width={240} height={170} className={classes.bid} marginLeft={\"40%\"}>*/}\r\n                {/*        <Typography className={classes.auction}>Auction</Typography>*/}\r\n                {/*        </Box>*/}\r\n\r\n\r\n\r\n\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1505px\"} marginTop={16} >*/}\r\n\r\n\r\n                {/*    <CompanyHand G={G} playerId={2} ctx={ctx} moves={moves}/>*/}\r\n                {/*    <CompanyHand G={G} playerId={3} ctx={ctx} moves={moves}/>*/}\r\n                {/*    </Box>*/}\r\n                {/*    <Box marginTop={3} display={\"flex\"} justifyContent={\"space-between\"} width={\"100%\"}>*/}\r\n                {/*        <NamePlate G={G} playerId={2} />*/}\r\n                {/*        <NamePlate G={G} playerId={3} />*/}\r\n                {/*    </Box>*/}\r\n\r\n            {/*<DragItem/>*/}\r\n\r\n\r\n\r\n\r\n            <Card G={G} ctx={ctx}  />\r\n\r\n            {/* <TestBoardDnd G={G}/> */}\r\n            {/*<Board G={G}/>*/}\r\n            {/*<PlayerHand G={G}/>*/}\r\n\r\n    </div>\r\n    // {/*</DndProvider>*/}\r\n\r\n    )\r\n};\r\nexport default NZGBoard;","import React from \"react\";\r\nimport {Client} from \"boardgame.io/react\";\r\n// import { Local } from \"boardgame.io/multiplayer\"; //TODO: Multiplayer\r\nimport NZGBoard from \"./NZGBoard\";\r\nimport {Game} from \"./Game.js\";\r\nimport { Debug } from 'boardgame.io/debug';\r\n\r\n\r\n\r\nconst App = Client({\r\n    game: Game,\r\n    board: NZGBoard,\r\n    numPlayers: 4,\r\n    debug:false,\r\n});\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import \"./styles/project.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}