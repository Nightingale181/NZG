{"version":3,"sources":["Game.js","constants/companyDeck.js","constants/carbonDeck.js","constants/teamDeck.js","components/CompanyCard.js","components/CarbonValue.js","components/NamePlate.js","components/CompanyStack.js","components/DragItem.js","components/TeamCard.js","components/CompanyHand.js","components/CarbonEventCard.js","components/TestCellState/constants.js","components/TestCellState/tasks.js","components/TestCellState/PlayerHand.js","components/Card.js","components/CarbonEventCard2.js","components/Doit.js","NZGBoard.js","App.js","reportWebVitals.js","index.js"],"names":["topCard","findIndex","companyDeck","id","order","idValue","synmain","companyName","type","initialValue","initialCarbon","actualValue","actualCarbon","companyBank","svgmain","process","carbonDeck","backImage","frontImage","event1","text","coinRaise","carbonRaise","synergy","event2","teamDeck","minSignBid","reduceCarb","changeEvent","counter","hui","Game","name","setup","ctx","G","deck","players","currentCarbon","temperatureIncrease","bid","minBid","goldBank","silverBank","coinBank","carbonBank","concat","console","log","currentPlayer","random","Shuffle","j","numPlayers","score","handCompanyDeck","handCarbonDeck","handTeamDeck","bank","coin","coinsCopy","carbonCoins","teamMembers","currentBid","shift","push","i","k","phases","draw","turn","moveLimit","moves","DiscardCompany","find","item","splice","length","DiscardTeam","events","endTurn","endIf","next","pickEvent","start","DrawCarbonEventCard","PickCarbonEvent","playerID","counterEvent","counterEventGRO","companyMarket","sellCompany","bidForCompany","takeOverCompany","useStyles","makeStyles","theme","carbonActual","backgroundColor","border","height","width","borderRadius","marginTop","carbonActualText","color","fontSize","marginLeft","fontWeight","carbonDropAct","mainSection","card","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","display","margin","valuesMain","synergyMain","actualValues","justifyContent","paddingTop","valueActual","valueActualText","initialValues","initialCarbonText","initialValueText","synLeft","synMid","synLeftText","synMidText","CompanyCard","classes","key","Box","className","root","alignContent","zIndex","nameSection","nameText","textAlign","coinImg","coinsImg","carbonImg","teamImg","coinValue","NamePlate","playerId","position","React","Component","backCarbon","pic","frontCarbon","TeamCard","CELL_NAMES","tasks","cell","MovableItem","index","currentCellName","moveCardHandler","setItems","changeItemCell","currentItem","cellName","prevState","map","e","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","end","dropResult","getDropResult","a1","a2","a3","a4","a5","a6","a7","a8","a9","a0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c0","d1","d2","d3","d4","d5","d6","d7","d8","d9","d0","collect","isDragging","opacity","drag","style","Cell","children","title","ID","isOver","canDrop","PlayerHand","useState","items","isMobile","window","innerWidth","dragItem","coppiedStateArray","prevItem","returnItemsForCell","filter","DndProvider","backend","TouchBackend","HTML5Backend","Card","paddingLeft","Front","this","props","Back","src","img","alt","ImageArea","MainArea","toString","Doit","background","auction","NZGBoard","App","Client","game","board","debug","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db1e1789.chunk.js","sourcesContent":["import {useState} from 'react'\r\nimport {companyDeck} from \"./constants/companyDeck\"\r\nimport {carbonDeck} from \"./constants/carbonDeck\"\r\nimport {teamDeck} from \"./constants/teamDeck\"\r\n\r\n// const getLength = (G,ctx) =>{\r\n//     let lengthOfCom = G.players[0].handCompanyDeck.length;\r\n//     return lengthOfCom;\r\n// };\r\n// export default getLength;\r\n\r\n// function DrawCard(G, ctx) {\r\n//     G.deck--;\r\n//     G.hand[ctx.currentPlayer]++;\r\n// }\r\n//\r\n// function PlayCard(G, ctx) {\r\n//     G.deck++;\r\n//     G.hand[ctx.currentPlayer]--;\r\n// }\r\n//\r\n// export const Game = {\r\n//     setup: ctx => ({ deck: 6, hand: Array(ctx.numPlayers).fill(0) }),\r\n//     moves: { DrawCard, PlayCard },\r\n//     turn: { moveLimit: 1 },\r\n// };\r\n\r\n// function DrawCard(G, ctx) {\r\n//     G.companyDeck--;\r\n//     G.hand[ctx.currentPlayer]++;\r\n//     G.bank.coin[ctx.currentPlayer]++;\r\n//\r\n// }\r\n\r\n// function PlayCard(G, ctx) {\r\n//     G.companyDeck++;\r\n//     G.hand[ctx.currentPlayer]--;\r\n// }\r\n\r\nexport function getInitialState(ctx) {\r\n\r\n    const G = {\r\n        deck: [],\r\n        players: [],\r\n        carbonDeck: [],\r\n        currentCarbon:[],\r\n        teamDeck: [],\r\n        companyDeck: [],\r\n        temperatureIncrease: 0,\r\n        bid: 0,\r\n        minBid: 0,\r\n        goldBank: 10,\r\n        silverBank: 30,\r\n        coinBank: 100,\r\n        carbonBank: 30,\r\n    };\r\n\r\n    // Add a deck for every player\r\n    // for (let i = 0; i < ctx.numPlayers; i++) {\r\n        G.companyDeck = G.companyDeck.concat(companyDeck);\r\n        G.carbonDeck = G.carbonDeck.concat(carbonDeck);\r\n        G.teamDeck = G.teamDeck.concat(teamDeck);\r\n    // }\r\n\r\n    console.log(ctx.currentPlayer);\r\n    // Shuffle resulting deck using lodash\r\n    G.companyDeck = ctx.random.Shuffle(G.companyDeck);\r\n    G.carbonDeck = ctx.random.Shuffle(G.carbonDeck);\r\n    G.teamDeck = ctx.random.Shuffle(G.teamDeck);// TODO: Use boardgame.io provided random shuffle function, which will be important when we are running a server\r\n\r\n    // Set up the game state for each player\r\n    for (let j = 0; j < ctx.numPlayers; j++) {\r\n        G.players[j] = {\r\n            score: 0,\r\n            handCompanyDeck: [],\r\n            handCarbonDeck: [],\r\n            handTeamDeck: [],\r\n            bank: {\r\n                coin: 15,\r\n                coinsCopy:15,\r\n                carbonCoins: 0,\r\n                teamMembers: 0\r\n            },\r\n            currentBid: 0,\r\n        };\r\n    }\r\n    topCard = G.carbonDeck.shift();\r\n    G.currentCarbon.push(topCard);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        for(let k = 0; k < 3; k++){\r\n            topCard = G.companyDeck.shift();\r\n            G.players[i].handCompanyDeck.push(topCard);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n        for(let k = 0;k < 4;k++){\r\n        topCard = G.teamDeck.shift();\r\n        G.players[k].handTeamDeck.push(topCard);\r\n    }\r\n    }\r\n\r\n\r\n\r\n    // For debugging \"game over\" state– this sets the deck to only have a single card\r\n    // G.deck = new Array(G.deck[0]);\r\n\r\n    console.log(\"Initial Game State\", G, \"Initial ctx\", ctx);\r\n\r\n    // Our game state is ready to go– return it!\r\n    return G;\r\n}\r\n\r\nlet topCard;\r\nlet findIndex;\r\n\r\nexport const currentId = [];\r\n\r\nexport const Game = {\r\n\r\n\r\n\r\n\r\n    name: \"NetZeroGame\",\r\n\r\n    setup: getInitialState,\r\n    // moves: {\r\n    //     PlayCompany: (G, ctx, props) => {\r\n    //         topCard = G.players[ctx.currentPlayer].handCompanyDeck.shift();\r\n    //         G.companyDeck.push(topCard);\r\n    //     },\r\n    // },\r\n    phases: {\r\n        draw: {\r\n            turn: {moveLimit: 10},\r\n            moves: {\r\n                // InitialDraw: (G, ctx) => {\r\n                //     for (let i = 0; i < 4; i++) {\r\n                //         topCard = G.companyDeck.shift();\r\n                //         currentId[i] = topCard.id;\r\n                //         console.log(currentId);\r\n                //         G.players[ctx.currentPlayer].handCompanyDeck.push(topCard);\r\n                //     }\r\n                //\r\n                //     for (let i = 0; i < 3; i++) {\r\n                //         topCard = G.teamDeck.shift();\r\n                //         G.players[ctx.currentPlayer].handTeamDeck.push(topCard);\r\n                //     }\r\n                //\r\n                // },\r\n                DiscardCompany: (G, ctx, id) => {\r\n                    topCard = G.players[ctx.currentPlayer].handCompanyDeck.find((item) => item.id === id);\r\n                    G.companyDeck.push(topCard);\r\n                    findIndex = G.players[ctx.currentPlayer].handCompanyDeck.findIndex(i => i.id === id);\r\n                    if (findIndex > -1) {\r\n                        G.players[ctx.currentPlayer].handCompanyDeck.splice(findIndex, 1);\r\n                    }\r\n                    for (let i = 0; i < G.players[ctx.currentPlayer].handCompanyDeck.length; i++) {\r\n                        G.players[ctx.currentPlayer].bank.coin -= G.players[ctx.currentPlayer].handCompanyDeck[i].initialValue;\r\n                    }\r\n                },\r\n                DiscardTeam: (G, ctx, id) => {\r\n                    topCard = G.players[ctx.currentPlayer].handTeamDeck.find((item) => item.id === id);\r\n                    G.teamDeck.push(topCard);\r\n                   const findIndex = G.players[ctx.currentPlayer].handTeamDeck.findIndex(i => i.id === id);\r\n                    if (findIndex > -1) {\r\n                        G.players[ctx.currentPlayer].handTeamDeck.splice(findIndex, 1);\r\n                    }\r\n                    ctx.events.endTurn();\r\n                },\r\n\r\n\r\n            },\r\n            endIf: G => (G.players[3].handTeamDeck.length === 2),//TODO change endif\r\n            // start: true,\r\n            next: \"pickEvent\",\r\n        },\r\n        pickEvent: {\r\n            start: true,\r\n            next:\"counterEvent\",\r\n            moves: {\r\n                DrawCarbonEventCard: (G, ctx) => {\r\n                    topCard = G.carbonDeck.shift();\r\n                    G.currentCarbon.push(topCard);\r\n\r\n                },\r\n                PickCarbonEvent: (G, ctx, id) => {\r\n                    if (id === 1) {\r\n\r\n                        G.players[ctx.playerID].bank.coin += G.players[ctx.currentPlayer].handCarbonDeck[0].event1.coinRaise;\r\n\r\n\r\n                    } else {\r\n\r\n                        G.players[ctx.playerID].bank.coin += G.players[ctx.currentPlayer].handCarbonDeck[0].event2.coinRaise;\r\n\r\n\r\n                    }\r\n\r\n                },\r\n            },\r\n            turn: {moveLimit: 2},\r\n        },\r\n        counterEvent: {\r\n            moves: {\r\n                counterEventGRO: (G, ctx, id) => {\r\n                    topCard = G.players[ctx.playerID].handTeamDeck.find((item) => item.type === \"GRO\");\r\n                    G.teamDeck.push(topCard);\r\n                    findIndex = G.players[ctx.currentPlayer].handCompanyDeck.findIndex(i => i.type === \"GRO\");\r\n                    if (findIndex > -1) {\r\n                        G.players[ctx.currentPlayer].handCompanyDeck.splice(findIndex, 1);\r\n                    }\r\n                },\r\n\r\n            },\r\n            turn: {moveLimit: 1},\r\n        },\r\n        companyMarket:{\r\n            moves:{\r\n                sellCompany:(G,ctx)=>{\r\n\r\n                },\r\n                bidForCompany:(G,ctx)=>{\r\n\r\n                },\r\n                takeOverCompany:(G,ctx)=>{\r\n                    topCard = G.players[ctx.currentPlayer].handTeamDeck.find((item) => item.type === \"GEO\");\r\n                    G.teamDeck.push(topCard);\r\n\r\n                },\r\n            },\r\n            turn:{moveLimit:2},\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n        // turn: {moveLimit: 2},\r\n\r\n    }\r\n};\r\n\r\n\r\n","export const companyDeck = [\r\n    {\r\n        id: 1,\r\n        order:1,\r\n        idValue:1,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Dwellings, Inc. ',\r\n        type: 'consumer',\r\n        initialValue: 2,\r\n        initialCarbon: 2,\r\n        actualValue: 2,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',\r\n    },\r\n    {\r\n        id: 2,\r\n        order:2,\r\n        idValue:2,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Steaks, Inc. ',\r\n        type: 'consumer',\r\n        initialValue: 1,\r\n        initialCarbon: 1,\r\n        actualValue: 1,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',\r\n    },\r\n    {\r\n        id: 3,\r\n        order:3,\r\n        idValue:3,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Smartphone, Inc. ',\r\n        type: 'consumer',\r\n        initialValue: 3,\r\n        initialCarbon: 1,\r\n        actualValue: 3,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 4,\r\n        order:4,\r\n        idValue:4,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Airline, Inc. ',\r\n        type: 'consumer',\r\n        initialValue: 4,\r\n        initialCarbon: 2,\r\n        actualValue: 4,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 5,\r\n        order:5,\r\n        idValue:5,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Aircraft, Inc. ',\r\n        type: 'production',\r\n        initialValue: 4,\r\n        initialCarbon: 2,\r\n        actualValue: 4,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 6,\r\n        order:6,\r\n        idValue:6,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Packaging, Inc. ',\r\n        type: 'production',\r\n        initialValue: 2,\r\n        initialCarbon: 1,\r\n        actualValue: 2,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 7,\r\n        order:7,\r\n        idValue:7,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Chemicals, Inc. ',\r\n        type: 'production',\r\n        initialValue: 4,\r\n        initialCarbon: 2,\r\n        actualValue: 4,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 8,\r\n        order:8,\r\n        idValue:8,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Software, Inc. ',\r\n        type: 'production',\r\n        initialValue: 4,\r\n        initialCarbon: 1,\r\n        actualValue: 4,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 9,\r\n        order:9,\r\n        idValue:9,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Cement, Inc. ',\r\n        type: 'production',\r\n        initialValue: 3,\r\n        initialCarbon: 2,\r\n        actualValue: 3,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 10,\r\n        order:10,\r\n        idValue:10,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Shipping, Inc. ',\r\n        type: 'distribution',\r\n        initialValue: 4,\r\n        initialCarbon: 3,\r\n        actualValue: 4,\r\n        actualCarbon: 3,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 11,\r\n        order:11,\r\n        idValue:11,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Road Transport, Inc. ',\r\n        type: 'distribution',\r\n        initialValue: 5,\r\n        initialCarbon: 3,\r\n        actualValue: 5,\r\n        actualCarbon: 3,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 12,\r\n        order:12,\r\n        idValue:12,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Data & Wireless, Inc. ',\r\n        type: 'distribution',\r\n        initialValue: 3,\r\n        initialCarbon: 2,\r\n        actualValue: 3,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 13,\r\n        order:13,\r\n        idValue:13,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Grid & Pipeline, Inc. ',\r\n        type: 'distribution',\r\n        initialValue: 3,\r\n        initialCarbon: 1,\r\n        actualValue: 3,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 14,\r\n        order:14,\r\n        idValue:14,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Oil & Gas, Inc. ',\r\n        type: 'resource',\r\n        initialValue: 6,\r\n        initialCarbon: 3,\r\n        actualValue: 6,\r\n        actualCarbon: 3,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 15,\r\n        order:15,\r\n        idValue:15,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Sand & Metal, Inc. ',\r\n        type: 'resource',\r\n        initialValue: 2,\r\n        initialCarbon: 1,\r\n        actualValue: 2,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 16,\r\n        order:16,\r\n        idValue:16,\r\n        synmain: \"../img/company/16/background-16.png\" ,\r\n        companyName: 'Farm, Inc. ',\r\n        type: 'resource',\r\n        initialValue: 3,\r\n        initialCarbon: 2,\r\n        actualValue: 3,\r\n        actualCarbon: 2,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 17,\r\n        order:18,\r\n        idValue:17,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        // svgmain:\"../img/company/CompositeLayer.svg\",\r\n        companyName: 'Wind Power, Inc. ',\r\n        type: 'resource',\r\n        initialValue: 3,\r\n        initialCarbon: 0,\r\n        actualValue: 3,\r\n        actualCarbon: 0,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n    {\r\n        id: 18,\r\n        order:18,\r\n        idValue:18,\r\n        synmain: \"../img/company/14/background-1.png\" ,\r\n        companyName: 'Recycling, Inc. ',\r\n        type: 'resource',\r\n        initialValue: 5,\r\n        initialCarbon: 1,\r\n        actualValue: 5,\r\n        actualCarbon: 1,\r\n        companyBank: 0,\r\n        svgmain:process.env.PUBLIC_URL + '/img/Steaks.svg',    },\r\n\r\n];\r\n\r\nexport const getRandomCard = (deck) =>\r\n    deck[Math.floor(Math.random() * deck.length)];\r\n","export const carbonDeck = [\r\n\r\n    //TODO optimise and make it readable\r\n    {\r\n        backImage:\"../img/ce1test.png\",\r\n        frontImage:\"../img/carbonevent/EventCard1.png\",\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n\r\n    {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n    {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n    {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    }, {\r\n        event1: {\r\n            id: [1],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: 0,\r\n            carbonRaise: -1,\r\n            synergy: true,\r\n\r\n        },\r\n        event2: {\r\n            id: [1, 11, 16],\r\n            text:\"Cities upcycle existing buildings to new efficient energy standarts\",\r\n            coinRaise: -2,\r\n            carbonRaise: -2,\r\n            synergy: true,\r\n\r\n        },\r\n    },\r\n    // {\r\n    //     id: 1,\r\n    //     idText: \"DWELLINGS,INC.\",\r\n    //     text: \"Cities upcycle existing buildings to new efficient energy standarts\",\r\n    //     idText2: [\"AIRLINE,INC.\", \"AIRCRAFT,INC.\", \"OIL&GAS,INC.\"],\r\n    //     text2: \"Spreading flight shame reduces demand for air travel.\",\r\n    //\r\n    //     event1: [\r\n    //         {\r\n    //             event:1,\r\n    //             id: 1,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: -1,\r\n    //             synergy: true,\r\n    //         }\r\n    //     ],\r\n    //     event2: [\r\n    //         {\r\n    //             event:2,\r\n    //             id: 4,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //         {\r\n    //             id: 5,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //         {\r\n    //             id: 14,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //     ],\r\n    //\r\n    // },\r\n    // {\r\n    //     id: 2,\r\n    //     idText: \"STEAKS,INC.\",\r\n    //     text: \"Cattle feed with seaweed reduces methane emissions from livestock.\",\r\n    //     idText2: [\"DWELLINGS,INC.\", \"ROAD TRANSPORT,INC.\", \"FARM,INC.\"],\r\n    //     text2: \"Vertical farming in cities increases in popularity.\",\r\n    //\r\n    //     event1: [\r\n    //         {\r\n    //             id: 2,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: -1,\r\n    //             synergy: true,\r\n    //         }\r\n    //     ],\r\n    //     event2: [\r\n    //         {\r\n    //             id: 1,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: 0,\r\n    //             synergy: true,\r\n    //         },\r\n    //         {\r\n    //             id: 11,\r\n    //             coinRaise: -1,\r\n    //             carbonRaise: -1,\r\n    //             synergy: false,\r\n    //         },\r\n    //         {\r\n    //             id: 16,\r\n    //             coinRaise: 0,\r\n    //             carbonRaise: -1,\r\n    //             synergy: true,\r\n    //         },\r\n    //     ],\r\n    //\r\n    // },\r\n\r\n\r\n];\r\n\r\n// export const cDeck = [\r\n//     {\r\n//         Event1:{\r\n//             id:[1],\r\n//             coinRaise: 0,\r\n//             carbonRaise: -1,\r\n//             synergy: true,\r\n//\r\n//         },\r\n//         Event2:{\r\n//             id:[1,11,16],\r\n//             coinRaise: 0,\r\n//             carbonRaise: -2,\r\n//             synergy: true,\r\n//\r\n//         },\r\n//     },{}\r\n// ];","//TODO playerView to hide team cards in multiplayer\r\n\r\nexport const teamDeck  = [\r\n    {\r\n        id:19,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:20,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n    },\r\n    {\r\n        id:21,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n    },\r\n    {\r\n        id:22,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:23,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n    },\r\n    {\r\n        id:24,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n    },\r\n    {\r\n        id:25,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:26,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n    },\r\n    {\r\n        id:27,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n    },\r\n    {\r\n        id:28,\r\n        type: \"GEO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: true,\r\n        counter: [\"GEO\",\"GSO\",\"GRO\"],\r\n    },\r\n    {\r\n        id:29,\r\n        type: \"GSO\",\r\n        minSignBid: 1,\r\n        reduceCarb: true,\r\n        changeEvent: false,\r\n        counter: [\"GSO\"],\r\n        hui:\"bolshoy\",\r\n\r\n    },\r\n    {\r\n        id:30,\r\n        type: \"GRO\",\r\n        minSignBid: 1,\r\n        reduceCarb: false,\r\n        changeEvent: true,\r\n        counter: [\"GRO\"],\r\n        hui:\"bolshoy\",\r\n    },\r\n    ]\r\n","import React,{useState} from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {companyDeck} from \"../constants/companyDeck\";\r\nimport {currentId} from \"../Game\";\r\nimport {\r\n    Draggable,\r\n    Droppable,\r\n    DragComponent,\r\n    DragState\r\n} from \"react-dragtastic\";\r\nimport CarbonValue from \"./CarbonValue\";\r\nimport { useDrag } from 'react-dnd';\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles =  makeStyles(theme => (\r\n    {\r\n    mainSection:   {\r\n        // display: \"flex\",\r\n        width:  \"120px\",\r\n        height: \"120px\" ,\r\n        borderRadius:\"10px\",\r\n        // backgroundColor:\"white\",\r\n        border:\"black\",\r\n    },\r\n\r\n    backImage: card =>( {\r\n        backgroundImage:`url(${process.env.PUBLIC_URL + '/img/airline.svg'})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'block',\r\n        margin: 'auto',\r\n        // flexDirection:\"column\",\r\n\r\n        // marginTop: \"2%\",\r\n        // marginLeft: \"3%%\",\r\n    }),\r\n    valuesMain: {},\r\n    synergyMain: {},\r\n    actualValues:{\r\n        display:\"flex\",\r\n        justifyContent:'space-between',\r\n        width:\"87%\",\r\n        height:\"26%\",\r\n        marginLeft:\"6%\",\r\n        marginTop:\"4%\",\r\n        paddingTop:\"6%\",\r\n    },\r\n    carbonActual: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft:\"6%\",\r\n    },\r\n    carbonDropAct:{\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        height: \"3%\",\r\n        width: \"1.5%\",\r\n\r\n    },\r\n    carbonActualText: {\r\n        color: \"grey\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    valueActual: {\r\n        backgroundColor: \"white\",\r\n        border: \"3px solid #539bc5\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft: 104,\r\n    },\r\n    valueActualText: {\r\n        color: \"black\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    initialValues:{\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\",\r\n        width:\"36%\",\r\n        height:\"17%\",\r\n        marginTop:\"12%\",\r\n        marginLeft:\"57%\",\r\n    },\r\n    initialCarbon: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        // height: \"100%\",\r\n        width: \"34%\",\r\n        borderRadius: 50,\r\n\r\n    },\r\n    initialValue: {\r\n        backgroundColor: \"white\",\r\n        border: \"3px solid #539bc5\",\r\n        // height: \"100%\",\r\n        width: \"34%\",\r\n        borderRadius: 50,\r\n\r\n    },\r\n    initialCarbonText: {\r\n        color: \"grey\",\r\n        fontSize: \"11pt\",\r\n        marginLeft: \"23%\",\r\n        marginTop: \"-19%\",\r\n        // fontWeight:501,\r\n    },\r\n    initialValueText: {\r\n        color: \"black\",\r\n        fontSize: \"11pt\",\r\n        marginLeft: \"23%\",\r\n        marginTop: \"-19%\",\r\n        // fontWeight:501,\r\n    },\r\n    synLeft:{\r\n        backgroundColor: \"white\",\r\n        border: \"2px solid #539bc5\",\r\n        height: \"10%\",\r\n        width: \"10%\",\r\n        marginTop: \"-18%\",\r\n        marginLeft: \"9%\",\r\n        borderRadius: 50,\r\n       },\r\n    synMid:{\r\n        backgroundColor: \"white\",\r\n        border: \"2px solid #539bc5\",\r\n        height: \"10%\",\r\n        borderRadius:50,\r\n        width: \"10%\",\r\n        marginTop: \"-21%\",\r\n        marginLeft: \"34%\",\r\n\r\n\r\n    },\r\n    synLeftText:{\r\n        color: \"black\",\r\n        fontSize: \"7pt\",\r\n        marginLeft: \"1%\",\r\n        marginTop: \"-5%\",\r\n    },\r\n    synMidText:{\r\n        // fontWeight:501,\r\n        color: \"black\",\r\n        fontSize: \"7pt\",\r\n        marginLeft: \"1%\",\r\n        marginTop: \"-5%\",\r\n    },\r\n    companyName:{\r\n        marginTop: \"30.5%\",\r\n        marginLeft:\"8.5%\",\r\n        fontSize:\"10pt\",\r\n\r\n    },\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\n\r\nconst CompanyCard = ({G,item,key,playerID}) => {\r\n    // const card = G.players[0].handCompanyDeck[0]\r\n    const classes = useStyles(item);\r\n    // console.log(ID)\r\n    // console.log(currentId)\r\n    // const [{ isDragging }, drag] = useDrag({\r\n    //     type: \"companyCard\",\r\n    //     id: `${key}`,\r\n    //     collect: (monitor) => ({\r\n    //         isDragging: !!monitor.isDragging(),\r\n    //     }),\r\n    // })\r\n\r\n    // console.log(props.ctx);w\r\n    //console.log(playerId);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/*<img src={process.env.PUBLIC_URL + '/img/company/cc12.png'} alt=\"\"/>*/}\r\n        <Box className={`${classes.mainSection}`}>\r\n\r\n\r\n            <Box className={`${classes.backImage}`}>\r\n                {/*<Box zIndex={1} className={classes.actualValues}>*/}\r\n\r\n\r\n                {/*    <Box className={classes.carbonActual}>*/}\r\n                {/*        <Typography className={classes.carbonActualText}>{G.players[\"2\"].handCompanyDeck[0].carbonCoins}</Typography>*/}\r\n                {/*    </Box>*/}\r\n\r\n\r\n                {/*    <Box className={classes.valueActual}>*/}\r\n                {/*        <Typography className={`${classes.valueActualText} `}>{G.players[1].handCompanyDeck[0].initialCarbon}</Typography>*/}\r\n                {/*    </Box>*/}\r\n\r\n\r\n                {/*</Box>*/}\r\n                {/*<Box zIndex={2} className={classes.initialValues}>*/}\r\n                {/*    <Box className={classes.initialValue}>*/}\r\n                {/*        <Typography className={classes.initialValueText}>{G.players[1].handCompanyDeck[0].carbonCoins}</Typography>*/}\r\n                {/*    </Box>*/}\r\n                {/*    <Box className={classes.initialCarbon}>*/}\r\n                {/*        <Typography className={classes.initialCarbonText}>{G.players[1].handCompanyDeck[0].initialCarbon}</Typography>*/}\r\n                {/*    </Box>*/}\r\n                {/*</Box>*/}\r\n\r\n\r\n                {/*<Box className={classes.synLeft}>*/}\r\n                {/*    <Typography className={classes.synLeftText}>+3</Typography>*/}\r\n                {/*</Box>*/}\r\n                {/*<Box className={classes.synMid}>*/}\r\n                {/*    <Typography className={classes.synMidText}>+3</Typography>*/}\r\n                {/*</Box>*/}\r\n                {/*<Box className={classes.companyName}>{item.companyName}</Box>*/}\r\n\r\n            </Box>\r\n\r\n        </Box>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default CompanyCard;","import React from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n    Draggable,\r\n    Droppable,\r\n    DragComponent,\r\n    DragState\r\n} from \"react-dragtastic\";\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    carbonActual: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft:\"6%\",\r\n    },\r\n    carbonActualText: {\r\n        color: \"grey\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    carbonDropAct:{\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        height: \"3%\",\r\n        width: \"1.5%\",\r\n\r\n    },\r\n\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CarbonValue = ({G,ctx,card,playerId,}) => {\r\n    const classes = useStyles();\r\n    return (\r\n<Box>\r\n        <Draggable id={card.id} type={\"actual\"} >\r\n            {dragState => (\r\n                <Box {...dragState.events} className={classes.carbonActual}>\r\n                    <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\r\n                </Box>\r\n            )}\r\n        </Draggable>\r\n\r\n    <DragComponent for={card.id} >\r\n        {dragState => (\r\n\r\n            <Box  className={classes.carbonDropAct} style={{\r\n                position:\"fixed\",\r\n                pointerEvents: 'none',\r\n                left: dragState.x -10  ,\r\n                top: dragState.y -30\r\n            }} onDrag={()=> {\r\n                console.log(...dragState.isOverAccepted);\r\n            }}\r\n            >\r\n                <Typography className={classes.carbonActualText}>1</Typography>\r\n            </Box>\r\n        )}\r\n    </DragComponent>\r\n</Box>\r\n    );\r\n};\r\n\r\n\r\nexport default CarbonValue;","import React from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"../Game\";\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport {\r\n    Draggable,\r\n    Droppable,\r\n    DragComponent,\r\n    DragState\r\n} from \"react-dragtastic\"\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    mainSection: {\r\n        // display: \"flex\",\r\n        width: \"120px\",\r\n        height: \"120px\",\r\n        borderRadius: \"8px\",\r\n        // border: \"1px solid #a49f9f\",\r\n        // backgroundColor:\"white\",\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg2.svg\"})`,\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        // margin:\"0 auto\",\r\n        zIndex: 0,\r\n\r\n    },\r\n    nameSection: {\r\n        width: \"100%\",\r\n        // height:\"20%\",\r\n        // paddingTop:\"5%\",\r\n    },\r\n    nameText: {\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        fontSize: \"8pt\",\r\n        fontWeight: \"1000\",\r\n\r\n    },\r\n    coinImg: {\r\n        height: \"30%\",\r\n        width: \"85%\",\r\n        marginLeft: \"5%\",\r\n    },\r\n    coinsImg: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: 50,\r\n        border: \"3px solid #539bc5\",\r\n        height: \"61%\",\r\n        width: \"22%\",\r\n    },\r\n    carbonImg: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        borderRadius: 50,\r\n        height: \"61%\",\r\n        width: \"22%\",\r\n    },\r\n    teamImg: {\r\n        backgroundColor: \"lightskyblue\",\r\n        borderRadius: 50,\r\n        border: \"3px solid purple\",\r\n        height: \"61%\",\r\n        width: \"22%\",\r\n    },\r\n    coinValue: {\r\n        height: \"30%\",\r\n        width: \"85%\",\r\n        marginLeft: \"5%\",\r\n    },\r\n\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst NamePlate = ({G, playerId}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Box position=\"relative\" className={classes.mainSection}>\r\n\r\n            {/*<Box className={classes.nameSection} >*/}\r\n            {/*    <Typography className={classes.nameText}>*/}\r\n            {/*                Business Leader*/}\r\n            {/*    </Typography>*/}\r\n            {/*</Box>*/}\r\n            {/*<Box display={\"flex\"} justifyContent={\"space-between\"} className={classes.coinImg}>*/}\r\n            {/*    <Box className={classes.coinsImg}></Box>*/}\r\n            {/*    <Box className={classes.carbonImg}></Box>*/}\r\n            {/*    <Box className={classes.teamImg}></Box>*/}\r\n            {/*</Box>*/}\r\n            {/*<Box display={\"flex\"} justifyContent={\"space-between\"} className={classes.coinValue} marginBottom={\"-10%\"}>*/}\r\n            {/*    <Box className={classes.coinsImg}></Box>*/}\r\n            {/*    <Box className={classes.carbonImg}></Box>*/}\r\n            {/*    <Box className={classes.teamImg}></Box>*/}\r\n            {/*</Box>*/}\r\n        </Box>\r\n\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default NamePlate;","import React, {useCallback, useState} from 'react';\r\nimport {Box, Grid} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"../Game\";\r\nimport CompanyCard from \"./CompanyCard\";\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    mainSection: {\r\n        height:255,\r\n\r\n        // backgroundImage:`url(${image})`,\r\n        // backgroundRepeat: \"no-repeat\",\r\n\r\n\r\n    },\r\n    root:{\r\n        width:250,\r\n    },\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CompanyStack = ({G,playerId,ctx,moves}) => {\r\n    const classes = useStyles();\r\n    console.log(G);\r\n    // const id = playerId.toString();\r\n    const player = G.players[playerId];\r\n\r\n\r\n\r\n    const cards = player.handCompanyDeck.map(card =>\r\n\r\n            <Grid item className={classes.root} sm={6} md={6} xs={6} lg={6} >\r\n                <CompanyCard card={card} key={card.id}  G={G}  ctx={ctx} moves={moves}/>\r\n            </Grid>\r\n\r\n            );\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n            <Box width={240} height={240}>\r\n                <Grid container spacing={1} justify={\"center\"} >\r\n                     {cards}\r\n                </Grid>\r\n            </Box>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default CompanyStack;","import React from \"react\";\r\nimport 'gridstack/dist/gridstack.min.css';\r\nimport { GridStack } from 'gridstack';\r\n// THEN to get HTML5 drag&drop\r\nimport 'gridstack/dist/h5/gridstack-dd-native';\r\n\r\nexport class DragItem extends React.Component {\r\n    state = {\r\n        count: 0,\r\n        info: \"\",\r\n        items: [\r\n            { x: 2, y: 1, h: 2 },\r\n            { x: 2, y: 4, w: 3 },\r\n            { x: 4, y: 2 },\r\n            { x: 3, y: 1, h: 2 },\r\n            { x: 0, y: 6, w: 2, h: 2 },\r\n        ],\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Provides access to the GridStack instance across the React component.\r\n        this.grid = GridStack.init({\r\n            float: true,\r\n            cellHeight: \"70px\",\r\n            minRow: 1,\r\n        });\r\n\r\n        this.grid.on(\"dragstop\", (event, element) => {\r\n            const node = element.gridstackNode;\r\n            this.setState({\r\n                info: `you just dragged node #${node.id} to ${node.x},${node.y} – good job!`,\r\n            });\r\n\r\n            // Clear the info text after a two second timeout.\r\n            // Clears previous timeout first.\r\n            window.clearTimeout(this.timerId);\r\n            this.timerId = window.setTimeout(() => {\r\n                this.setState({\r\n                    info: \"\",\r\n                });\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    addNewWidget = () => {\r\n        const node = this.state.items[this.state.count] || {\r\n            x: Math.round(12 * Math.random()),\r\n            y: Math.round(5 * Math.random()),\r\n            w: Math.round(1 + 3 * Math.random()),\r\n            h: Math.round(1 + 3 * Math.random()),\r\n        };\r\n        node.id = node.content = String(this.state.count);\r\n        this.setState((prevState) => ({\r\n            count: prevState.count + 1,\r\n        }));\r\n        this.grid.addWidget(node);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <button type=\"button\" onClick={this.addNewWidget}>\r\n                    Add Widget\r\n                </button>\r\n                {this.state.info}\r\n                <section class=\"grid-stack\"></section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useCallback, useState} from 'react';\r\nimport {Box, Grid, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {GridContextProvider, GridDropZone, GridItem} from \"react-grid-dnd\";\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    mainSection: {\r\n        width: \"60px\",\r\n        // border: \"0.5px solid #a49f9f\",\r\n        height: \"120px\",\r\n        // backgroundColor:\"limegreen\",\r\n        borderRadius: \"8px\",\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg.svg\"})`,\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        // margin:\"0 auto\",s\r\n        // zIndex:0,\r\n        // marginRight:\"1px\",\r\n        // marginTop:\"\",\r\n    },\r\n\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst TeamCard = ({G, card}) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <Box className={classes.mainSection}>\r\n\r\n        </Box>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default TeamCard;","import React, {useCallback, useState} from 'react';\r\nimport {Box, Grid, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"../Game\";\r\n// import CompanyCard from \"./CompanyCard\";\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    root:{\r\n        width:200,\r\n    },\r\n    mainSection:   {\r\n        // display: \"flex\",\r\n        width: 100,\r\n        height: 100 ,\r\n        borderRadius: 20,\r\n        backgroundColor:\"white\",\r\n        border:\"black\",\r\n    },\r\n\r\n    backImage: card =>( {\r\n        backgroundImage:`url(${card.synmain})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '86%',\r\n        backgroundRepeat: 'no-repeat',\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'block',\r\n        margin: 'auto',\r\n        // flexDirection:\"column\",\r\n\r\n        // marginTop: \"2%\",\r\n        // marginLeft: \"3%%\",\r\n    }),\r\n    valuesMain: {},\r\n    synergyMain: {},\r\n    actualValues:{\r\n        display:\"flex\",\r\n        justifyContent:'space-between',\r\n        width:\"87%\",\r\n        height:\"26%\",\r\n        marginLeft:\"6%\",\r\n        marginTop:\"4%\",\r\n        paddingTop:\"6%\",\r\n    },\r\n    carbonActual: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft:\"6%\",\r\n    },\r\n    carbonDropAct:{\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        height: \"3%\",\r\n        width: \"1.5%\",\r\n\r\n    },\r\n    carbonActualText: {\r\n        color: \"grey\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    valueActual: {\r\n        backgroundColor: \"white\",\r\n        border: \"3px solid #539bc5\",\r\n        height: \"90%\",\r\n        width: \"27%\",\r\n        borderRadius: 50,\r\n        marginTop:\"2%\",\r\n        // marginLeft: 104,\r\n    },\r\n    valueActualText: {\r\n        color: \"black\",\r\n        fontSize: \"16pt\",\r\n        marginLeft: \"28%\",\r\n        marginTop: \"-5%\",\r\n        fontWeight:501,\r\n    },\r\n    initialValues:{\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\",\r\n        width:\"36%\",\r\n        height:\"17%\",\r\n        marginTop:\"12%\",\r\n        marginLeft:\"57%\",\r\n    },\r\n    initialCarbon: {\r\n        backgroundColor: \"black\",\r\n        border: \"3px solid grey\",\r\n        // height: \"100%\",\r\n        width: \"34%\",\r\n        borderRadius: 50,\r\n\r\n    },\r\n    initialValue: {\r\n        backgroundColor: \"white\",\r\n        border: \"3px solid #539bc5\",\r\n        // height: \"100%\",\r\n        width: \"34%\",\r\n        borderRadius: 50,\r\n\r\n    },\r\n    initialCarbonText: {\r\n        color: \"grey\",\r\n        fontSize: \"11pt\",\r\n        marginLeft: \"23%\",\r\n        marginTop: \"-19%\",\r\n        // fontWeight:501,\r\n    },\r\n    initialValueText: {\r\n        color: \"black\",\r\n        fontSize: \"11pt\",\r\n        marginLeft: \"23%\",\r\n        marginTop: \"-19%\",\r\n        // fontWeight:501,\r\n    },\r\n    synLeft:{\r\n        backgroundColor: \"white\",\r\n        border: \"2px solid #539bc5\",\r\n        height: \"10%\",\r\n        width: \"10%\",\r\n        marginTop: \"-18%\",\r\n        marginLeft: \"9%\",\r\n        borderRadius: 50,\r\n    },\r\n    synMid:{\r\n        backgroundColor: \"white\",\r\n        border: \"2px solid #539bc5\",\r\n        height: \"10%\",\r\n        borderRadius:50,\r\n        width: \"10%\",\r\n        marginTop: \"-21%\",\r\n        marginLeft: \"34%\",\r\n\r\n\r\n    },\r\n    synLeftText:{\r\n        color: \"black\",\r\n        fontSize: \"7pt\",\r\n        marginLeft: \"1%\",\r\n        marginTop: \"-5%\",\r\n    },\r\n    synMidText:{\r\n        // fontWeight:501,\r\n        color: \"black\",\r\n        fontSize: \"7pt\",\r\n        marginLeft: \"1%\",\r\n        marginTop: \"-5%\",\r\n    },\r\n    companyName:{\r\n        marginTop: \"30.5%\",\r\n        marginLeft:\"8.5%\",\r\n        fontSize:\"10pt\",\r\n\r\n    },\r\n}))\r\n\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CompanyHand = ({G,playerId,ctx,moves}) => {\r\n    const classes = useStyles();\r\n\r\n    console.log(G);\r\n    // const id = playerId.toString();\r\n    const player = G.players[playerId];\r\n\r\n    const [handCards, setHandCards] = useState(player.handCompanyDeck);\r\n\r\n\r\n    const CompanyCard = ({card,key,G,ctx,moves}) => {\r\n\r\n        const classes = useStyles(card);\r\n        // console.log(currentId)\r\n\r\n\r\n        // console.log(props.ctx);\r\n        //console.log(playerId);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n            <Box\r\n                className={`${classes.mainSection}`}\r\n            >\r\n\r\n\r\n                <Box className={`${classes.backImage}`}>\r\n                    <Box zIndex={1} className={classes.actualValues}>\r\n\r\n\r\n                        <Box className={classes.carbonActual}>\r\n                            <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\r\n                        </Box>\r\n\r\n\r\n                        <Box className={classes.valueActual}>\r\n                            <Typography className={`${classes.valueActualText} `}>{card.actualValue}</Typography>\r\n                        </Box>\r\n\r\n\r\n                    </Box>\r\n                    <Box zIndex={2} className={classes.initialValues}>\r\n                        <Box className={classes.initialValue}>\r\n                            <Typography className={classes.initialValueText}>{card.initialValue}</Typography>\r\n                        </Box>\r\n                        <Box className={classes.initialCarbon}>\r\n                            <Typography className={classes.initialCarbonText}>{card.initialCarbon}</Typography>\r\n                        </Box>\r\n                    </Box>\r\n\r\n\r\n                    <Box className={classes.synLeft}>\r\n                        <Typography className={classes.synLeftText}>+3</Typography>\r\n                    </Box>\r\n                    <Box className={classes.synMid}>\r\n                        <Typography className={classes.synMidText}>+3</Typography>\r\n                    </Box>\r\n                    <Box className={classes.companyName}>{card.companyName}</Box>\r\n\r\n                </Box>\r\n\r\n            </Box>\r\n\r\n\r\n        );\r\n    };\r\n\r\n    const cards = handCards.map(card =>\r\n\r\n        <Grid item className={classes.root} sm={6} md={6} xs={6} lg={6} >\r\n            <CompanyCard card={card} key={card.id}  G={G}  ctx={ctx} moves={moves}/>\r\n        </Grid>\r\n\r\n    );\r\n\r\n    return (\r\n\r\n\r\n        <Box width={200} height={200}>\r\n            <Grid container spacing={1} justify={\"center\"} >\r\n                {cards}\r\n            </Grid>\r\n        </Box>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default CompanyHand;","import React, {useState} from 'react';\r\nimport {Box, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {carbonDeck} from \"../constants/carbonDeck\";\r\nimport {currentId} from \"../Game\";\r\nimport {\r\n    Draggable,\r\n    Droppable,\r\n    DragComponent,\r\n    DragState\r\n} from \"react-dragtastic\";\r\nimport CarbonValue from \"./CarbonValue\";\r\n\r\n\r\n// const image = \"../img/company/14/background-1.png\"\r\nconst useStyles = makeStyles(theme => ({\r\n    backCarbon: pic => ({\r\n        width: 240,\r\n        height: 240,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 7,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg5.svg\"})`,\r\n        // ${process.env.PUBLIC_URL + '/img/company/cc12.png'}/\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        // margin:\"0 auto\",\r\n        zIndex: 0,\r\n\r\n        // border: '1px solid #a49f9f',\r\n    }),\r\n    frontCarbon: {\r\n        width: 240,\r\n        height: 240,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 7,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/img/testsvg5.svg\"})`,\r\n        // position:\"absolute\",\r\n        alignContent: \"center\",\r\n        margin: \"0 auto\",\r\n        zIndex: 0,\r\n        // border: '1px solid #a49f9f',\r\n        // border: '0.5px solid #a49f9f',\r\n    },\r\n}))\r\n\r\n\r\n//TODO get the card with props of current player,hook only changables\r\n\r\nconst CarbonEventCard = () => {\r\n    const [event, setEvent] = useState(1)\r\n\r\n    const classes = useStyles(carbonDeck);\r\n\r\n    return (\r\n        <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"480px\"} height={\"240px\"} marginTop={\"-120px\"}\r\n             marginLeft={\"-20px\"}>\r\n            <Box display={\"inline-block\"} onClick={() => {\r\n                setEvent(event + 1)\r\n            }}\r\n                 className={classes.backCarbon}>\r\n\r\n            </Box>\r\n            <Box display={\"inline-block\"} className={classes.frontCarbon}></Box>\r\n        </Box>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default CarbonEventCard;","export const CELL_NAMES = {\r\n    a1: 'a1',\r\n    a2: 'a2',\r\n    a3: 'a3',\r\n    a4: 'a4',\r\n    a5: 'a5',\r\n    a6: 'a6',\r\n    a7: 'a7',\r\n    a8: 'a8',\r\n    a9: 'a9',\r\n    a0: 'a0',\r\n    b1: 'b1',\r\n    b2: 'b2',\r\n    b3: 'b3',\r\n    b4: 'b4',\r\n    b5: 'b5',\r\n    b6: 'b6',\r\n    b7: 'b7',\r\n    b8: 'b8',\r\n    b9: 'b9',\r\n    b0: 'b0',\r\n    c1: 'c1',\r\n    c2: 'c2',\r\n    c3: 'c3',\r\n    c4: 'c4',\r\n    c5: \"c5\",\r\n    c6: \"c6 \",\r\n    c7: \"c7\",\r\n    c8: \"c8\",\r\n    c9: \"c9\",\r\n    c0: \"c0\",\r\n    d1: 'd1',\r\n    d2: 'd2',\r\n    d3: 'd3',\r\n    d4: 'd4',\r\n    d5: \"d5\",\r\n    d6: \"d6\",\r\n    d7: \"d7\",\r\n    d8: \"d8\",\r\n    d9: \"d9\",\r\n    d0: \"d0\",\r\n}\r\n","import {CELL_NAMES} from \"./constants\";\r\n\r\n// const {oneC,twoC,threeC,fiveC,fourC,sixC} = COLUMN_NAMES;\r\nexport const tasks = [\r\n    {id: 1, name: 'Item 1', cell: CELL_NAMES.a0},\r\n    {id: 2, name: 'Item 2', cell: CELL_NAMES.a1},\r\n    {id: 3, name: 'Item 3', cell: CELL_NAMES.a5},\r\n    {id: 4, name: 'Item 4', cell: CELL_NAMES.b0},\r\n    {id: 5, name: 'Item 5', cell: CELL_NAMES.b1},\r\n    {id: 6, name: 'Item 6', cell: CELL_NAMES.b5},\r\n    {id: 7, name: 'Item 7', cell: CELL_NAMES.c0},\r\n    {id: 8, name: 'Item 8', cell: CELL_NAMES.c1},\r\n    {id: 9, name: 'Item 9', cell: CELL_NAMES.c5},\r\n    {id: 10, name: 'Item 10', cell: CELL_NAMES.d0},\r\n    {id: 11, name: 'Item 11', cell: CELL_NAMES.d1},\r\n    {id: 12, name: 'Item 12', cell: CELL_NAMES.d5},\r\n\r\n];\r\n\r\n\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {DndProvider, useDrag, useDrop} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {TouchBackend} from \"react-dnd-touch-backend\";\r\nimport './assets/styles/App.css';\r\nimport {CELL_NAMES} from \"./constants\";\r\nimport {tasks} from \"./tasks\";\r\nimport CompanyCard from \"../CompanyCard\";\r\nimport CarbonEventCard from \"../CarbonEventCard\";\r\nimport TeamCard from \"../TeamCard\";\r\n\r\n\r\nconst MovableItem = ({name, index, currentCellName, moveCardHandler, setItems, G, playerID, item}) => {\r\n    const changeItemCell = (currentItem, cellName) => {\r\n        setItems((prevState) => {\r\n            return prevState.map(e => {\r\n                return {\r\n                    ...e,\r\n                    cell: e.name === currentItem.name ? cellName : e.cell\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    // console.log(ID);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'Our first type',\r\n        hover(item: any, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            // Don't replace items with themselves\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            // Determine rectangle on screen\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            // Get vertical middle\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            // Determine mouse position\r\n            const clientOffset = monitor.getClientOffset();\r\n            // Get pixels to the top\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            // Only perform the move when the mouse has crossed half of the items height\r\n            // When dragging downwards, only move when the cursor is below 50%\r\n            // When dragging upwards, only move when the cursor is above 50%\r\n            // Dragging downwards\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Dragging upwards\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Time to actually perform the action\r\n            moveCardHandler(dragIndex, hoverIndex);\r\n            // Note: we're mutating the monitor item here!\r\n            // Generally it's better to avoid mutations,\r\n            // but it's good here for the sake of performance\r\n            // to avoid expensive index searches.\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [{isDragging}, drag] = useDrag({\r\n        item: {index, name, currentCellName, type: 'Our first type'},\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n\r\n            if (dropResult) {\r\n                const {name} = dropResult;\r\n                const {\r\n                    a1,\r\n                    a2,\r\n                    a3,\r\n                    a4,\r\n                    a5,\r\n                    a6,\r\n                    a7,\r\n                    a8,\r\n                    a9,\r\n                    a0,\r\n                    b1,\r\n                    b2,\r\n                    b3,\r\n                    b4,\r\n                    b5,\r\n                    b6,\r\n                    b7,\r\n                    b8,\r\n                    b9,\r\n                    b0,\r\n                    c1,\r\n                    c2,\r\n                    c3,\r\n                    c4,\r\n                    c5,\r\n                    c6,\r\n                    c7,\r\n                    c8,\r\n                    c9,\r\n                    c0,\r\n                    d1,\r\n                    d2,\r\n                    d3,\r\n                    d4,\r\n                    d5,\r\n                    d6,\r\n                    d7,\r\n                    d8,\r\n                    d9,\r\n                    d0\r\n                } = CELL_NAMES;\r\n                switch (name) {\r\n                    case a1:\r\n                        changeItemCell(item, a1);\r\n                        break;\r\n                    case a2:\r\n                        changeItemCell(item, a2);\r\n                        break;\r\n                    case a3:\r\n                        changeItemCell(item, a3);\r\n                        break;\r\n                    case a4:\r\n                        changeItemCell(item, a4);\r\n                        break;\r\n                    case a5:\r\n                        changeItemCell(item, a5);\r\n                        break;\r\n                    case a6:\r\n                        changeItemCell(item, a6);\r\n                        break;\r\n                    case a7:\r\n                        changeItemCell(item, a7);\r\n                        break;\r\n                    case a8:\r\n                        changeItemCell(item, a8);\r\n                        break;\r\n                    case a9:\r\n                        changeItemCell(item, a9);\r\n                        break;\r\n                    case a0:\r\n                        changeItemCell(item, a0);\r\n                        break;\r\n                    case b1:\r\n                        changeItemCell(item, b1);\r\n                        break;\r\n                    case b2:\r\n                        changeItemCell(item, b2);\r\n                        break;\r\n                    case b3:\r\n                        changeItemCell(item, b3);\r\n                        break;\r\n                    case b4:\r\n                        changeItemCell(item, b4);\r\n                        break;\r\n                    case b5:\r\n                        changeItemCell(item, b5);\r\n                        break;\r\n                    case b6:\r\n                        changeItemCell(item, b6);\r\n                        break;\r\n                    case b7:\r\n                        changeItemCell(item, b7);\r\n                        break;\r\n                    case b8:\r\n                        changeItemCell(item, b8);\r\n                        break;\r\n                    case b9:\r\n                        changeItemCell(item, b9);\r\n                        break;\r\n                    case b0:\r\n                        changeItemCell(item, b0);\r\n                        break;\r\n                    case c1:\r\n                        changeItemCell(item, c1);\r\n                        break;\r\n                    case c2:\r\n                        changeItemCell(item, c2);\r\n                        break;\r\n                    case c3:\r\n                        changeItemCell(item, c3);\r\n                        break;\r\n                    case c4:\r\n                        changeItemCell(item, c4);\r\n                        break;\r\n                    case c5:\r\n                        changeItemCell(item, c5);\r\n                        break;\r\n                    case c6:\r\n                        changeItemCell(item, c6);\r\n                        break;\r\n                    case c7:\r\n                        changeItemCell(item, c7);\r\n                        break;\r\n                    case c8:\r\n                        changeItemCell(item, c8);\r\n                        break;\r\n                    case c9:\r\n                        changeItemCell(item, c9);\r\n                        break;\r\n                    case c0:\r\n                        changeItemCell(item, c0);\r\n                        break;\r\n                    case d1:\r\n                        changeItemCell(item, d1);\r\n                        break;\r\n                    case d2:\r\n                        changeItemCell(item, d2);\r\n                        break;\r\n                    case d3:\r\n                        changeItemCell(item, d3);\r\n                        break;\r\n                    case d4:\r\n                        changeItemCell(item, d4);\r\n                        break;\r\n                    case d5:\r\n                        changeItemCell(item, d5);\r\n                        break;\r\n                    case d6:\r\n                        changeItemCell(item, d6);\r\n                        break;\r\n                    case d7:\r\n                        changeItemCell(item, d7);\r\n                        break;\r\n                    case d8:\r\n                        changeItemCell(item, d8);\r\n                        break;\r\n                    case d9:\r\n                        changeItemCell(item, d9);\r\n                        break;\r\n                    case d0:\r\n                        changeItemCell(item, d0);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div ref={ref} style={{opacity}}>\r\n            <CompanyCard G={G} item={item} playerID={playerID}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Cell = ({children, className, title, G, ctx, ID}) => {\r\n    const [{isOver, canDrop}, drop] = useDrop({\r\n        accept: 'Our first type',\r\n        drop: () => ({name: title}),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n        // Override monitor.canDrop() function\r\n        // canDrop: (item: any) => {\r\n        //     const {DO_IT, IN_PROGRESS, AWAITING_REVIEW, DONE} = COLUMN_NAMES;\r\n        //     const {currentColumnName} = item;\r\n        //     return (currentColumnName === title) ||\r\n        //         (currentColumnName === DO_IT && title === IN_PROGRESS) ||\r\n        //         (currentColumnName === IN_PROGRESS && (title === DO_IT || title === AWAITING_REVIEW)) ||\r\n        //         (currentColumnName === AWAITING_REVIEW && (title === IN_PROGRESS || title === DONE)) ||\r\n        //         (currentColumnName === DONE && (title === AWAITING_REVIEW));\r\n        // },\r\n    });\r\n\r\n    // const getBackgroundColor = () => {\r\n    // if (isOver) {\r\n    //     if (canDrop) {\r\n    //         return 'rgb(188,251,255)'\r\n    //     } else if (!canDrop) {\r\n    //         return 'rgb(255,188,188)'\r\n    //     }\r\n    // } else {\r\n    //     return '';\r\n    // }\r\n    // };\r\n\r\n    return (\r\n        <div ref={drop} className={className}>\r\n            {/* <p>{title}</p> */}\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n// const [items, setItems] = useState(tasks);\r\n\r\nexport const PlayerHand = ({G, ctx, ID}) => {\r\n    console.log(ID);\r\n    const [items, setItems] = useState(tasks);\r\n\r\n    const isMobile = window.innerWidth < 600;\r\n\r\n    const moveCardHandler = (dragIndex, hoverIndex) => {\r\n\r\n        const dragItem = items[dragIndex];\r\n\r\n        if (dragItem) {\r\n            setItems((prevState => {\r\n                const coppiedStateArray = [...prevState];\r\n\r\n                // remove item by \"hoverIndex\" and put \"dragItem\" instead\r\n                const prevItem = coppiedStateArray.splice(hoverIndex, 1, dragItem);\r\n\r\n                // remove item by \"dragIndex\" and put \"prevItem\" instead\r\n                coppiedStateArray.splice(dragIndex, 1, prevItem[0]);\r\n\r\n                return coppiedStateArray;\r\n            }));\r\n        }\r\n    };\r\n\r\n    const returnItemsForCell = (cellName) => {\r\n        return items\r\n            .filter((item) => item.cell === cellName)\r\n            .map((item, index) => (\r\n                <MovableItem key={item.id}\r\n                             name={item.name}\r\n                             currentCellName={item.cell}\r\n                             setItems={setItems}\r\n                             index={index}\r\n                             moveCardHandler={moveCardHandler}\r\n                             G={G}\r\n                             item={G.companyDeck[0]}\r\n                             playerID={ID}\r\n                />\r\n            ))\r\n    };\r\n\r\n    const {\r\n        a1,\r\n        a2,\r\n        a3,\r\n        a4,\r\n        a5,\r\n        a6,\r\n        a7,\r\n        a8,\r\n        a9,\r\n        a0,\r\n        b1,\r\n        b2,\r\n        b3,\r\n        b4,\r\n        b5,\r\n        b6,\r\n        b7,\r\n        b8,\r\n        b9,\r\n        b0,\r\n        c1,\r\n        c2,\r\n        c3,\r\n        c4,\r\n        c5,\r\n        c6,\r\n        c7,\r\n        c8,\r\n        c9,\r\n        c0,\r\n        d1,\r\n        d2,\r\n        d3,\r\n        d4,\r\n        d5,\r\n        d6,\r\n        d7,\r\n        d8,\r\n        d9,\r\n        d0\r\n    } = CELL_NAMES;\r\n\r\n    return (\r\n        <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n            <div className={\"companyBlock\"}>\r\n                <div className={\"companyFlex\"}>\r\n                    <div className=\"container\">\r\n                        <Cell title={a0} className='column '>\r\n                            {returnItemsForCell(a0)}\r\n                        </Cell>\r\n                        <Cell title={a1} className='column '>\r\n                            {returnItemsForCell(a1)}\r\n                        </Cell>\r\n                        <Cell title={a2} className='column '>\r\n                            {returnItemsForCell(a2)}\r\n                        </Cell>\r\n                        <Cell title={a3} className='column'>\r\n                            {returnItemsForCell(a3)}\r\n                        </Cell>\r\n                        <Cell title={a4} className='column'>\r\n                            {returnItemsForCell(a4)}\r\n                        </Cell>\r\n                        <Cell title={a5} className='column'>\r\n                            {returnItemsForCell(a5)}\r\n                        </Cell>\r\n                        <Cell title={a6} className='column'>\r\n                            {returnItemsForCell(a6)}\r\n                        </Cell>\r\n                        <Cell title={a7} className='column'>\r\n                            {returnItemsForCell(a7)}\r\n                        </Cell>\r\n                        <Cell title={a8} className='column'>\r\n                            {returnItemsForCell(a8)}\r\n                        </Cell>\r\n                        <Cell title={a9} className='column'>\r\n                            {returnItemsForCell(a9)}\r\n                        </Cell>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <Cell title={b0} className='column'>\r\n                            {returnItemsForCell(b0)}\r\n                        </Cell>\r\n                        <Cell title={b1} className='column'>\r\n                            {returnItemsForCell(b1)}\r\n                        </Cell>\r\n                        <Cell title={b2} className='column'>\r\n                            {returnItemsForCell(b2)}\r\n                        </Cell>\r\n                        <Cell title={b3} className='column'>\r\n                            {returnItemsForCell(b3)}\r\n                        </Cell>\r\n                        <Cell title={b4} className='column'>\r\n                            {returnItemsForCell(b4)}\r\n                        </Cell>\r\n                        <Cell title={b5} className='column'>\r\n                            {returnItemsForCell(b5)}\r\n                        </Cell>\r\n                        <Cell title={b6} className='column'>\r\n                            {returnItemsForCell(b6)}\r\n                        </Cell>\r\n                        <Cell title={b7} className='column'>\r\n                            {returnItemsForCell(b7)}\r\n                        </Cell>\r\n                        <Cell title={b8} className='column'>\r\n                            {returnItemsForCell(b8)}\r\n                        </Cell>\r\n                        <Cell title={b9} className='column'>\r\n                            {returnItemsForCell(b9)}\r\n                        </Cell>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={\"companyBlock lower\"}>\r\n                <div className={\"companyFlex\"}>\r\n                    <div className=\"container\">\r\n                        <Cell title={c0} className='column '>\r\n                            {returnItemsForCell(c0)}\r\n                        </Cell>\r\n                        <Cell title={c1} className='column '>\r\n                            {returnItemsForCell(c1)}\r\n                        </Cell>\r\n                        <Cell title={c2} className='column '>\r\n                            {returnItemsForCell(c2)}\r\n                        </Cell>\r\n                        <Cell title={c3} className='column'>\r\n                            {returnItemsForCell(c3)}\r\n                        </Cell>\r\n                        <Cell title={c4} className='column'>\r\n                            {returnItemsForCell(c4)}\r\n                        </Cell>\r\n                        <Cell title={c5} className='column'>\r\n                            {returnItemsForCell(c5)}\r\n                        </Cell>\r\n                        <Cell title={c6} className='column'>\r\n                            {returnItemsForCell(c6)}\r\n                        </Cell>\r\n                        <Cell title={c7} className='column'>\r\n                            {returnItemsForCell(c7)}\r\n                        </Cell>\r\n                        <Cell title={c8} className='column'>\r\n                            {returnItemsForCell(c8)}\r\n                        </Cell>\r\n                        <Cell title={c9} className='column'>\r\n                            {returnItemsForCell(c9)}\r\n                        </Cell>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <Cell title={d0} className='column '>\r\n                            {returnItemsForCell(d0)}\r\n                        </Cell>\r\n                        <Cell title={d1} className='column '>\r\n                            {returnItemsForCell(d1)}\r\n                        </Cell>\r\n                        <Cell title={d2} className='column '>\r\n                            {returnItemsForCell(d2)}\r\n                        </Cell>\r\n                        <Cell title={d3} className='column'>\r\n                            {returnItemsForCell(d3)}\r\n                        </Cell>\r\n                        <Cell title={d4} className='column'>\r\n                            {returnItemsForCell(d4)}\r\n                        </Cell>\r\n                        <Cell title={d5} className='column'>\r\n                            {returnItemsForCell(d5)}\r\n                        </Cell>\r\n                        <Cell title={d6} className='column'>\r\n                            {returnItemsForCell(d6)}\r\n                        </Cell>\r\n                        <Cell title={d7} className='column'>\r\n                            {returnItemsForCell(d7)}\r\n                        </Cell>\r\n                        <Cell title={d8} className='column'>\r\n                            {returnItemsForCell(d8)}\r\n                        </Cell>\r\n                        <Cell title={d9} className='column'>\r\n                            {returnItemsForCell(d9)}\r\n                        </Cell>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </DndProvider>\r\n    );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {\r\n    GridContextProvider,\r\n    GridDropZone,\r\n    GridItem,\r\n    swap,\r\n    move\r\n} from \"react-grid-dnd\";\r\nimport {Box, Grid, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport \"../styles/project.css\";\r\nimport NamePlate from \"./NamePlate\";\r\nimport CompanyHand from \"./CompanyHand\";\r\nimport CarbonEventCard from \"./CarbonEventCard\";\r\nimport TeamCard from \"./TeamCard\";\r\nimport {IsCard} from \"./TestCellDnd/IsCard\";\r\nimport {PlayerHand} from \"./TestCellState/PlayerHand\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root:{\r\n//         width:200,\r\n//     },\r\n//     mainSection:   {\r\n//         // display: \"flex\",\r\n//         width: \"90px\",\r\n//         height: 90 ,\r\n//         borderRadius: 15,\r\n//         backgroundColor:\"white\",\r\n//         // border:\"black\",\r\n//         marginBottom:\"20px\",\r\n//         cursor:\"pointer\",\r\n//     },\r\n//\r\n//     backImage: card =>( {\r\n//         backgroundImage:`url(${card.synmain})`,\r\n//         backgroundPosition: 'center',\r\n//         backgroundSize: '86%',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         height: '100%',\r\n//         width: '100%',\r\n//         display: 'block',\r\n//         margin: 'auto',\r\n//         // flexDirection:\"column\",\r\n//\r\n//         // marginTop: \"2%\",\r\n//         // marginLeft: \"3%%\",\r\n//     }),\r\n//     valuesMain: {},\r\n//     synergyMain: {},\r\n//     actualValues:{\r\n//         display:\"flex\",\r\n//         justifyContent:'space-between',\r\n//         width:\"87%\",\r\n//         height:\"26%\",\r\n//         marginLeft:\"6%\",\r\n//         marginTop:\"4%\",\r\n//         paddingTop:\"6%\",\r\n//     },\r\n//     carbonActual: {\r\n//         backgroundColor: \"black\",\r\n//         border: \"3px solid grey\",\r\n//         height: \"90%\",\r\n//         width: \"27%\",\r\n//         borderRadius: 50,\r\n//         marginTop:\"2%\",\r\n//         // marginLeft:\"6%\",\r\n//     },\r\n//\r\n//     carbonActualText: {\r\n//         color: \"grey\",\r\n//         fontSize: \"13pt\",\r\n//         marginLeft: \"28%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     valueActual: {\r\n//         backgroundColor: \"white\",\r\n//         border: \"3px solid #539bc5\",\r\n//         height: \"90%\",\r\n//         width: \"27%\",\r\n//         borderRadius: 50,\r\n//         marginTop:\"2%\",\r\n//         // marginLeft: 104,\r\n//     },\r\n//     valueActualText: {\r\n//         color: \"black\",\r\n//         fontSize: \"13pt\",\r\n//         marginLeft: \"28%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     initialValues:{\r\n//         display:\"flex\",\r\n//         justifyContent:\"space-between\",\r\n//         width:\"36%\",\r\n//         height:\"17%\",\r\n//         marginTop:\"12%\",\r\n//         marginLeft:\"57%\",\r\n//     },\r\n//     initialCarbon: {\r\n//         backgroundColor: \"black\",\r\n//         border: \"3px solid grey\",\r\n//         // height: \"100%\",\r\n//         width: \"34%\",\r\n//         borderRadius: 50,\r\n//\r\n//     },\r\n//     initialValue: {\r\n//         backgroundColor: \"white\",\r\n//         border: \"3px solid #539bc5\",\r\n//         // height: \"100%\",\r\n//         width: \"34%\",\r\n//         borderRadius: 50,\r\n//\r\n//     },\r\n//     initialCarbonText: {\r\n//         color: \"grey\",\r\n//         fontSize: \"8pt\",\r\n//         marginLeft: \"23%\",\r\n//         marginTop: \"-19%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     initialValueText: {\r\n//         color: \"black\",\r\n//         fontSize: \"8pt\",\r\n//         marginLeft: \"23%\",\r\n//         marginTop: \"-19%\",\r\n//         fontWeight:501,\r\n//     },\r\n//     synLeft:{\r\n//         backgroundColor: \"white\",\r\n//         border: \"2px solid #539bc5\",\r\n//         height: \"10%\",\r\n//         width: \"10%\",\r\n//         marginTop: \"-18%\",\r\n//         marginLeft: \"9%\",\r\n//         borderRadius: 50,\r\n//     },\r\n//     synMid:{\r\n//         backgroundColor: \"white\",\r\n//         border: \"2px solid #539bc5\",\r\n//         height: \"10%\",\r\n//         borderRadius:50,\r\n//         width: \"10%\",\r\n//         marginTop: \"-21%\",\r\n//         marginLeft: \"34%\",\r\n//\r\n//\r\n//     },\r\n//     synLeftText:{\r\n//         color: \"black\",\r\n//         fontSize: \"6pt\",\r\n//         marginLeft: \"1%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//\r\n//     },\r\n//     synMidText:{\r\n//         // fontWeight:501,\r\n//         color: \"black\",\r\n//         fontSize: \"6pt\",\r\n//         marginLeft: \"1%\",\r\n//         marginTop: \"-5%\",\r\n//         fontWeight:501,\r\n//\r\n//     },\r\n//     companyName:{\r\n//         marginTop: \"30.5%\",\r\n//         marginLeft:\"8.5%\",\r\n//         fontSize:\"8pt\",\r\n//\r\n//     },\r\n//     auction:{\r\n//         textAlign:\"center\",\r\n//         marginTop:\"17%\",\r\n//         fontSize:20,\r\n//     },\r\n//     bid:{\r\n//         backgroundColor: \"darkgreen\",\r\n//         border: \"5px solid white\",\r\n//         zIndex:0,\r\n//     },\r\n// }));\r\n\r\n\r\nexport const Card = ({G, ctx}) => {\r\n    // const playerID = [\"1\",\"2\",\"3\",\"4\"]\r\n    console.log(G.players[0].handCompanyDeck);\r\n    // const classes = useStyles();\r\n    //    const [items, setItems] = React.useState({\r\n    //     first: G.players[0].handCompanyDeck,\r\n    //     second: G.players[1].handCompanyDeck,\r\n    //     third: G.players[2].handCompanyDeck,\r\n    //     fourth: G.players[3].handCompanyDeck,\r\n    //        main:G.companyDeck,\r\n    //        firstTeam: G.players[0].handTeamDeck,\r\n    //        secondTeam: G.players[1].handTeamDeck,\r\n    //        thirdTeam: G.players[2].handTeamDeck,\r\n    //        fourthTeam: G.players[3].handTeamDeck,\r\n    //        mainTeam:G.teamDeck,\r\n    // });\r\n\r\n\r\n    //  const CompanyCard = ({card,key,G}) => {\r\n    //     const classes = useStyles(card);\r\n    //\r\n    //     return (\r\n    //\r\n    //         <Box\r\n    //             className={`${classes.mainSection}`}\r\n    //         >\r\n    //\r\n    //\r\n    //             <Box className={`${classes.backImage}`}>\r\n    //                 <Box zIndex={1} className={classes.actualValues}>\r\n    //\r\n    //\r\n    //                     <Box className={classes.carbonActual}>\r\n    //                         <Typography className={classes.carbonActualText}>{card.actualCarbon}</Typography>\r\n    //                     </Box>\r\n    //\r\n    //\r\n    //                     <Box className={classes.valueActual}>\r\n    //                         <Typography className={`${classes.valueActualText} `}>{card.actualValue}</Typography>\r\n    //                     </Box>\r\n    //\r\n    //\r\n    //                 </Box>\r\n    //                 <Box zIndex={2} className={classes.initialValues}>\r\n    //                     <Box className={classes.initialValue}>\r\n    //                         <Typography className={classes.initialValueText}>{card.initialValue}</Typography>\r\n    //                     </Box>\r\n    //                     <Box className={classes.initialCarbon}>\r\n    //                         <Typography className={classes.initialCarbonText}>{card.initialCarbon}</Typography>\r\n    //                     </Box>\r\n    //                 </Box>\r\n    //\r\n    //\r\n    //                 <Box className={classes.synLeft}>\r\n    //                     <Typography className={classes.synLeftText}>+3</Typography>\r\n    //                 </Box>\r\n    //                 <Box className={classes.synMid}>\r\n    //                     <Typography className={classes.synMidText}>+3</Typography>\r\n    //                 </Box>\r\n    //                 <Box className={classes.companyName}>{card.companyName}</Box>\r\n    //\r\n    //             </Box>\r\n    //\r\n    //         </Box>\r\n    //\r\n    //\r\n    //     );\r\n    // };\r\n\r\n\r\n    // function onChangeCompany(sourceId, sourceIndex, targetIndex, targetId) {\r\n    //     if (targetId) {\r\n    //         const result = move(\r\n    //             items[sourceId],\r\n    //             items[targetId],\r\n    //             sourceIndex,\r\n    //             targetIndex\r\n    //         );\r\n    //         return setItems({\r\n    //             ...items,\r\n    //             [sourceId]: result[0],\r\n    //             [targetId]: result[1]\r\n    //         });\r\n    //     }\r\n    //\r\n    //     const result = swap(items[sourceId], sourceIndex, targetIndex);\r\n    //     return setItems({\r\n    //         ...items,\r\n    //         [sourceId]: result\r\n    //     });\r\n    //     console.log(items);\r\n    // }\r\n\r\n// console.log(player.handCompanyDeck);\r\n\r\n\r\n    return (\r\n        // <GridContextProvider onChange={onChangeCompany}>\r\n        <>\r\n            <Box paddingLeft={\"60px\"} paddingTop={\"60px\"}>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1980px\"}>\r\n                    <Box display={\"flex\"} width={\"600px\"}>\r\n                        <NamePlate/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n                        <TeamCard/>\r\n\r\n                    </Box>\r\n                    <Box display={\"flex\"}>\r\n                        {/*<TeamCard />*/}\r\n                        {/*/!*<TeamCard />*!/*/}\r\n                        {/*<TeamCard />*/}\r\n                        {/*<NamePlate/>*/}\r\n\r\n                    </Box>\r\n\r\n                    {/*<NamePlate/>*/}\r\n                    {/*<NamePlate/>*/}\r\n\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n                    {/*    <NamePlate G={G} playerId={0} />*/}\r\n\r\n                    {/*    <GridDropZone*/}\r\n                    {/*        className={\"handTeam\"}*/}\r\n                    {/*        id=\"firstTeam\"*/}\r\n                    {/*        boxesPerRow={2}*/}\r\n                    {/*        rowHeight={95}*/}\r\n                    {/*    >*/}\r\n                    {/*        {items.firstTeam.map(item => (*/}\r\n                    {/*            <GridItem key={item.id}>*/}\r\n                    {/*                <TeamCard G={G} card = {item}/>*/}\r\n                    {/*            </GridItem>*/}\r\n                    {/*        ))}*/}\r\n                    {/*    </GridDropZone>*/}\r\n                    {/*</Box>*/}\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n\r\n\r\n                    {/*        <GridDropZone*/}\r\n                    {/*            className={\"handTeam\"}*/}\r\n                    {/*            id=\"secondTeam\"*/}\r\n                    {/*            boxesPerRow={3}*/}\r\n                    {/*            rowHeight={95}*/}\r\n                    {/*        >*/}\r\n                    {/*            {items.secondTeam.map(item => (*/}\r\n                    {/*                <GridItem key={item.id}>*/}\r\n                    {/*                    <TeamCard G={G} card = {item}/>*/}\r\n                    {/*                </GridItem>*/}\r\n                    {/*            ))}*/}\r\n                    {/*        </GridDropZone>*/}\r\n\r\n\r\n                    {/*    <NamePlate G={G} playerId={1} />*/}\r\n                    {/*</Box>*/}\r\n                </Box>\r\n                <Box className={\"container1\"}>\r\n                    {/*<Box width={\"620px\"}  display={\"flex\"} flexWrap={\"wrap\"}  justifyContent={\"space-between\"} >*/}\r\n\r\n                    {/*    <PlayerHand G={G} ctx={ctx} ID={0}/>*/}\r\n\r\n\r\n                    {/*</Box>*/}\r\n\r\n                    {/*<Box display={\"flex\"}>*/}\r\n                    {/*    <CarbonEventCard />*/}\r\n                    {/*        <TeamCard />*/}\r\n                    {/*</Box>*/}\r\n\r\n\r\n                    {/*<Box width={\"620px\"}   >*/}\r\n                    {/*    <PlayerHand G={G} ctx={ctx} ID={1}/>*/}\r\n\r\n                    {/*</Box>*/}\r\n\r\n                    <PlayerHand ID={0} ctx={ctx} G={G}/>\r\n\r\n                    {/*<Box  >*/}\r\n                    {/*    <CarbonEventCard />*/}\r\n\r\n                    {/*</Box>*/}\r\n\r\n\r\n                    {/*<GridDropZone*/}\r\n\r\n                    {/*    className={\"dropzone\"}*/}\r\n                    {/*    id=\"second\"*/}\r\n                    {/*    boxesPerRow={2}*/}\r\n                    {/*    rowHeight={95}*/}\r\n                    {/*>*/}\r\n                    {/*    {items.second.map(item => (*/}\r\n                    {/*        <GridItem key={item.id}>*/}\r\n                    {/*                    <CompanyCard card={item} key={item.id}  G={G} />*/}\r\n                    {/*        </GridItem>*/}\r\n                    {/*    ))}*/}\r\n                    {/*</GridDropZone>*/}\r\n                </Box>\r\n\r\n\r\n                {/*<GridDropZone*/}\r\n                {/*    className={\"mainTeamDeck\"}*/}\r\n                {/*    id = \"first\"*/}\r\n                {/*    boxesPerRow={9}*/}\r\n                {/*    rowHeight={95}*/}\r\n                {/*>*/}\r\n                {/*    {items.main.map(item => (*/}\r\n                {/*            <GridItem key={item.id}>*/}\r\n                {/*                <CompanyCard card={item} key={item.id}  G={G}/>*/}\r\n                {/*            </GridItem>*/}\r\n                {/*        ))}*/}\r\n\r\n                {/*</GridDropZone>*/}\r\n\r\n\r\n                {/*<Box display={\"flex\"} justifyContent={\"space-between\"} className={\"container1\"} mt={\"360px\"}>*/}\r\n                {/*<Box className={\"dropzone\"}>*/}\r\n                {/*<GridDropZone*/}\r\n\r\n\r\n                {/*    id=\"third\"*/}\r\n                {/*    boxesPerRow={2}*/}\r\n                {/*    rowHeight={95}*/}\r\n                {/*>*/}\r\n                {/*    {items.third.map(item => (*/}\r\n                {/*        <GridItem key={item.id}>*/}\r\n\r\n                {/*            <CompanyCard card={item} key={item.id}  G={G}/>*/}\r\n\r\n                {/*        </GridItem>*/}\r\n                {/*    ))}*/}\r\n                {/*</GridDropZone>*/}\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box width={\"620px\"}   >*/}\r\n                {/*    <PlayerHand G={G} ctx={ctx} ID={2}  />*/}\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box width={\"620px\"}   >*/}\r\n                {/*    <PlayerHand G={G} ctx={ctx} ID={3}/>*/}\r\n                {/*</Box>*/}\r\n                {/*<GridDropZone*/}\r\n\r\n                {/*    className={\"dropzone\"}*/}\r\n                {/*    id=\"fourth\"*/}\r\n                {/*    boxesPerRow={2}*/}\r\n                {/*    rowHeight={95}*/}\r\n                {/*>*/}\r\n                {/*    {items.fourth.map(item => (*/}\r\n                {/*        <GridItem key={item.id}>*/}\r\n                {/*            <CompanyCard card={item} key={item.id}  G={G} />*/}\r\n                {/*        </GridItem>*/}\r\n                {/*    ))}*/}\r\n                {/*</GridDropZone>*/}\r\n                {/*</Box>*/}\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1980px\"}>\r\n                    {/*<Box display={\"flex\"} width={\"1980px\"}>*/}\r\n                    {/*    <NamePlate/>*/}\r\n                    {/*    <TeamCard/>*/}\r\n                    {/*    <TeamCard/>*/}\r\n                    {/*    <TeamCard/>*/}\r\n                    {/*</Box>*/}\r\n                    <Box display={\"flex\"}>\r\n                        {/*<TeamCard />*/}\r\n                        {/*/!*<TeamCard />*!/*/}\r\n                        {/*<TeamCard />*/}\r\n                        {/*<NamePlate/>*/}\r\n\r\n                    </Box>\r\n\r\n                    {/*<NamePlate/>*/}\r\n                    {/*<NamePlate/>*/}\r\n\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n                    {/*    <NamePlate G={G} playerId={0} />*/}\r\n\r\n                    {/*    <GridDropZone*/}\r\n                    {/*        className={\"handTeam\"}*/}\r\n                    {/*        id=\"firstTeam\"*/}\r\n                    {/*        boxesPerRow={2}*/}\r\n                    {/*        rowHeight={95}*/}\r\n                    {/*    >*/}\r\n                    {/*        {items.firstTeam.map(item => (*/}\r\n                    {/*            <GridItem key={item.id}>*/}\r\n                    {/*                <TeamCard G={G} card = {item}/>*/}\r\n                    {/*            </GridItem>*/}\r\n                    {/*        ))}*/}\r\n                    {/*    </GridDropZone>*/}\r\n                    {/*</Box>*/}\r\n                    {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n\r\n\r\n                    {/*        <GridDropZone*/}\r\n                    {/*            className={\"handTeam\"}*/}\r\n                    {/*            id=\"secondTeam\"*/}\r\n                    {/*            boxesPerRow={3}*/}\r\n                    {/*            rowHeight={95}*/}\r\n                    {/*        >*/}\r\n                    {/*            {items.secondTeam.map(item => (*/}\r\n                    {/*                <GridItem key={item.id}>*/}\r\n                    {/*                    <TeamCard G={G} card = {item}/>*/}\r\n                    {/*                </GridItem>*/}\r\n                    {/*            ))}*/}\r\n                    {/*        </GridDropZone>*/}\r\n\r\n\r\n                    {/*    <NamePlate G={G} playerId={1} />*/}\r\n                    {/*</Box>*/}\r\n                </Box>\r\n                {/*<Box marginTop={1} display={\"flex\"} justifyContent={\"space-between\"} width={\"1525px\"}>*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n                {/*        <NamePlate G={G} playerId={2} />*/}\r\n\r\n                {/*            <GridDropZone*/}\r\n                {/*                className={\"handTeam\"}*/}\r\n                {/*                id=\"thirdTeam\"*/}\r\n                {/*                boxesPerRow={3}*/}\r\n                {/*                rowHeight={95}*/}\r\n                {/*            >*/}\r\n                {/*                {items.thirdTeam.map(item => (*/}\r\n                {/*                    <GridItem key={item.id}>*/}\r\n                {/*                        <TeamCard G={G} card = {item}/>*/}\r\n                {/*                    </GridItem>*/}\r\n                {/*                ))}*/}\r\n                {/*            </GridDropZone>*/}\r\n\r\n                {/*    </Box>*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={185}>*/}\r\n\r\n                {/*            <GridDropZone*/}\r\n                {/*                className={\"handTeam handTeam1\"}*/}\r\n                {/*                id=\"fourthTeam\"*/}\r\n                {/*                boxesPerRow={3}*/}\r\n                {/*                rowHeight={95}*/}\r\n                {/*            >*/}\r\n                {/*            {items.fourthTeam.map(item => (*/}\r\n                {/*                <GridItem key={item.id}>*/}\r\n                {/*                    <TeamCard G={G} card = {item}/>*/}\r\n                {/*                </GridItem>*/}\r\n                {/*            ))}*/}\r\n                {/*            </GridDropZone>*/}\r\n\r\n                {/*        <NamePlate G={G} playerId={3} />*/}\r\n                {/*    </Box>*/}\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box  position={\"absolute\"} marginTop={\"-208px\"} borderRadius={20} width={180} height={90} className={classes.bid} marginLeft={\"45%\"}>*/}\r\n                {/*    <Typography className={classes.auction}>Auction</Typography>*/}\r\n                {/*</Box>*/}\r\n            </Box>\r\n        </>\r\n        // </GridContextProvider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport '../styles/style.scss';\r\n\r\n\r\n// import 'nprogress/nprogress';\r\n\r\n// class App extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <div className=\"page-container\">\r\n//\r\n//                 <BlogCard />\r\n//                 <footer>\r\n//                     Image credit: <a href=\"https://78.media.tumblr.com/d98fb931adb117c70f0dbced9e947520/tumblr_pe582mbWip1tlgv32o1_1280.png\">8pxl on Tumblr</a>\r\n//                 </footer>\r\n//\r\n//         )\r\n//     }\r\n// }\r\nlet counter = 0;\r\nexport class CarbonEvent2 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { flipped: false };\r\n        this.flip = this.flip.bind(this);\r\n    }\r\n\r\n\r\n    flip = () => {\r\n        this.setState({ flipped: !this.state.flipped });\r\n\r\n\r\n    }\r\n    flip2 = () =>{\r\n        this.setState({ flipped: !this.state.flipped });\r\n    };\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"page-container\">\r\n            <div onClick={this.flip} onClick={this.flip2} className={\"card-container\" + (this.state.flipped ? \" flipped\" : \"\")}>\r\n\r\n                <Front G={this.props.G} ctx={this.props.ctx} />\r\n                <Back img={\"../../public/img/carbonevent/carbonEventBack.png\"} />\r\n            </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Front extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"front\">\r\n                <ImageArea />\r\n                <MainArea G={this.props.G} ctx={this.props.ctx} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Back extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"back\"} >\r\n                <img src={this.props.img} alt=\"backcarbon\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ImageArea extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"image-container\">\r\n                {/*<img className=\"card-image\" src=\"https://78.media.tumblr.com/d98fb931adb117c70f0dbced9e947520/tumblr_pe582mbWip1tlgv32o1_1280.png\"></img>*/}\r\n                <h1 className=\"title\">An example event card</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass MainArea extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main-area\">\r\n                <div className=\"blog-post\">\r\n                    <p>{this.props.G.currentCarbon[0].event1.id[0].toString()}</p>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport 'gridstack/dist/gridstack.min.css';\r\nimport { GridStack } from 'gridstack';\r\n// THEN to get HTML5 drag&drop\r\nimport 'gridstack/dist/h5/gridstack-dd-native';\r\n\r\nfunction Doit() {\r\n    // _________________________________________________\r\n    // Initialize Gridstack inside useEffect so that DOM is rendered when its initialized\r\n    // _________________________________________________\r\n    useEffect(() => {\r\n        let grid = GridStack.init();\r\n    });\r\n    // _________________________________________________\r\n    // _________________________________________________\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div class=\"grid-stack\">\r\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\r\n                    <div class=\"grid-stack-item-content\">Item 1</div>\r\n                </div>\r\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\r\n                    <div class=\"grid-stack-item-content\">Item 2</div>\r\n                </div>\r\n                <div class=\"grid-stack-item border-dark\" data-gs-width=\"4\" data-gs-height=\"4\">\r\n                    <div class=\"grid-stack-item-content\">Item 3</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Doit;","import React, { useCallback, useRef, useState } from 'react';\r\nimport CompanyCard from \"./components/CompanyCard\";\r\nimport {Box,Typography,Button, Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {currentId} from \"./Game\";\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport {companyDeck} from \"./constants/companyDeck\";\r\nimport CompanyStack from \"./components/CompanyStack\";\r\nimport NamePlate from \"./components/NamePlate\";\r\nimport {number} from \"prop-types\";\r\nimport {DragItem} from \"./components/DragItem\";\r\nimport {Card} from \"./components/Card\";\r\nimport CarbonEventCard from \"./components/CarbonEventCard\";\r\nimport {CarbonEvent2} from \"./components/CarbonEventCard2\";\r\nimport TeamCard from \"./components/TeamCard\";\r\nimport CompanyHand from \"./components/CompanyHand\";\r\nimport Doit from \"./components/Doit\";\r\nimport {\r\n    GridContextProvider,\r\n    GridDropZone,\r\n    GridItem,\r\n    swap,\r\n    move\r\n} from \"react-grid-dnd\";\r\nimport {Board} from \"./components/TestCellDnd/Board\";\r\nimport {PlayerHand} from \"./components/TestCellState/PlayerHand\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    bid:{\r\n        backgroundColor: \"green\",\r\n        border: \"5px solid white\",\r\n        zIndex:2,\r\n    },\r\n    background:{\r\n        // backgroundColor:\"#cbcaca\",\r\n        height:\"1200px\",\r\n        width:\"1980px\",\r\n        margin:90,\r\n        // padding:\"90px\",\r\n        backgroundImage:`url(${process.env.PUBLIC_URL + '/img/svgtestbg.svg'})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n\r\n        display: 'block',\r\n\r\n    },\r\n    auction:{\r\n        textAlign:\"center\",\r\n        marginTop:\"20%\",\r\n        fontSize:40,\r\n    },\r\n}));\r\n\r\nconst NZGBoard = ({ctx, G, moves, ...rest }) => {\r\n\r\n    // const [hidden1,setHidden1] = useState(true);\r\n    // const [hidden2,setHidden2] = useState(true);\r\n\r\n    // const [hidden3,setHidden3] = useState(true);\r\n    // const [hidden4,setHidden4] = useState(true);\r\n    // const [playerId1,setPlayerId1] = useState(-5);\r\n    // const [playerId2,setPlayerId2] = useState(-5);\r\n    // const [playerId3,setPlayerId3] = useState(-5);\r\n    // const [playerId4,setPlayerId4] = useState(-5);\r\n    // const [cardId1 , setCardId1] = useState(currentId);\r\n    // const [cardId2 , setCardId2] = useState(currentId);\r\n    // const [cardId3 , setCardId3] = useState(currentId);\r\n    // const [cardId4 , setCardId4] = useState(currentId);\r\n\r\n    // const [actualCard1,setActualCard1] = useState(0);\r\n    // const [actualCard2,setActualCard2] = useState(0);\r\n    // const [actualCard3,setActualCard3] = useState(0);\r\n    // const [actualCard4,setActualCard4] = useState(0);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // console.log(ctx.currentPlayer);\r\n    // console.log(G);\r\n\r\n   //  function playerData (cardId,PlayerId) {\r\n   //      this.cardId = cardId;\r\n   //      this.PlayerId = PlayerId;\r\n   //  };\r\n   //\r\n   // const getPlayerData = () => {\r\n   //     if (ctx.currentPlayer === 0){\r\n   //         const playerOne = new playerData(cardId,playerId)\r\n   //     } if (ctx.currentPlayer === 1){\r\n   //         const PlayerTwo = new playerData(cardId,playerId)\r\n   //     } if ( ctx.currentPlayer === 2){\r\n   //         const PlayerThree = new playerData(cardId,playerId)\r\n   //     }if ( ctx.currentPlayer === 3){\r\n   //         const PlayerFour = new playerData(cardId,playerId)\r\n   //     }\r\n   //\r\n   // };\r\n\r\n\r\n    // const cardidtrue = currentId;\r\n    // console.log(cardId);\r\n    // moves.InitialDraw();\r\n    // moves.initialDraw();\r\n    // let actualId = currentId - 1;\r\n\r\n\r\n    // const onDraw = useCallback(() => {\r\n    //     // moves.InitialDraw();\r\n    //      // setPlayerId1(ctx.currentPlayer);\r\n    //      console.log(playerId1);\r\n    //\r\n    //      if (ctx.currentPlayer.toString() === \"0\")\r\n    //      {\r\n    //         setPlayerId1(ctx.currentPlayer);\r\n    //\r\n    //     } if (ctx.currentPlayer.toString() === \"1\")\r\n    //     {\r\n    //         setPlayerId2(ctx.currentPlayer);\r\n    //\r\n    //     } if ( ctx.currentPlayer.toString() === \"2\")\r\n    //     {\r\n    //         setPlayerId3(ctx.currentPlayer);\r\n    //     }if ( ctx.currentPlayer.toString() === \"3\")\r\n    //     {\r\n    //         setPlayerId4(ctx.currentPlayer);\r\n    //     // moves,setHidden1,hidden1,hidden2,hidden3,hidden4,cardId1,cardId2,cardId3,cardId4,playerId1,playerId2,playerId3,playerId4,ctx,G,actualCard1,actualCard2,actualCard3,actualCard4\r\n    //     }\r\n    //\r\n    // }, [moves,G,ctx,playerId1,playerId2,playerId3,playerId4]);\r\n\r\n    // function onChange(sourceId, sourceIndex, targetIndex, targetId) {\r\n    //     if (targetId) {\r\n    //         const result = move(\r\n    //             items[sourceId],\r\n    //             items[targetId],\r\n    //             sourceIndex,\r\n    //             targetIndex\r\n    //         );\r\n    //         return setItems({\r\n    //             ...items,\r\n    //             [sourceId]: result[0],\r\n    //             [targetId]: result[1]\r\n    //         });\r\n    //     }\r\n    //\r\n    //     const result = swap(items[sourceId], sourceIndex, targetIndex);\r\n    //     return setItems({\r\n    //         ...items,\r\n    //         [sourceId]: result\r\n    //     });\r\n    // }\r\n\r\n\r\n    return(\r\n        // <DndProvider backend={HTML5Backend}>\r\n\r\n        <div className={classes.background}>\r\n                {/*        <Box     width={\"100%\"} >*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"} width={\"100%\"} >*/}\r\n                {/*        <NamePlate G={G} playerId={0} />*/}\r\n                {/*        <NamePlate G={G} playerId={1} />*/}\r\n                {/*    </Box>*/}\r\n                {/*    /!*{*!/*/}\r\n                {/*    /!*    (playerId1.toString()) >= \"0\"  ? <CompanyStack G={G} playerId={playerId1} ctx={ctx} moves={moves} />  : null*!/*/}\r\n                {/*    /!*}*!/*/}\r\n\r\n                {/*    /!*{*!/*/}\r\n                {/*    /!*    (playerId2.toString()) >= \"1\"  ? <CompanyStack G={G} playerId={playerId2} ctx={ctx} moves={moves} />  : null*!/*/}\r\n                {/*    /!*}*!/*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-between\"}>*/}\r\n                {/*        <CompanyHand G={G} playerId={0} ctx={ctx} moves={moves}/>*/}\r\n                {/*        <CompanyHand G={G} playerId={1} ctx={ctx} moves={moves}/>*/}\r\n                {/*    </Box>*/}\r\n                {/*    <Box display={\"flex\"} justifyContent={\"space-around\"}>*/}\r\n                {/*        <CarbonEvent2 G={G} ctx={ctx} />*/}\r\n\r\n                {/*        <TeamCard />*/}\r\n\r\n                {/*    </Box>*/}\r\n\r\n                {/*        <Box  position={\"fixed\"} marginTop={40} borderRadius={50} width={240} height={170} className={classes.bid} marginLeft={\"40%\"}>*/}\r\n                {/*        <Typography className={classes.auction}>Auction</Typography>*/}\r\n                {/*        </Box>*/}\r\n\r\n\r\n\r\n\r\n                {/*</Box>*/}\r\n\r\n                {/*<Box display={\"flex\"} justifyContent={\"space-between\"} width={\"1505px\"} marginTop={16} >*/}\r\n\r\n\r\n                {/*    <CompanyHand G={G} playerId={2} ctx={ctx} moves={moves}/>*/}\r\n                {/*    <CompanyHand G={G} playerId={3} ctx={ctx} moves={moves}/>*/}\r\n                {/*    </Box>*/}\r\n                {/*    <Box marginTop={3} display={\"flex\"} justifyContent={\"space-between\"} width={\"100%\"}>*/}\r\n                {/*        <NamePlate G={G} playerId={2} />*/}\r\n                {/*        <NamePlate G={G} playerId={3} />*/}\r\n                {/*    </Box>*/}\r\n\r\n            {/*<DragItem/>*/}\r\n\r\n\r\n\r\n\r\n            <Card G={G} ctx={ctx}  />\r\n\r\n            {/* <TestBoardDnd G={G}/> */}\r\n            {/*<Board G={G}/>*/}\r\n            {/*<PlayerHand G={G}/>*/}\r\n\r\n    </div>\r\n    // {/*</DndProvider>*/}\r\n\r\n    )\r\n};\r\nexport default NZGBoard;","import React from \"react\";\r\nimport {Client} from \"boardgame.io/react\";\r\n// import { Local } from \"boardgame.io/multiplayer\"; //TODO: Multiplayer\r\nimport NZGBoard from \"./NZGBoard\";\r\nimport {Game} from \"./Game.js\";\r\nimport { Debug } from 'boardgame.io/debug';\r\n\r\n\r\n\r\nconst App = Client({\r\n    game: Game,\r\n    board: NZGBoard,\r\n    numPlayers: 4,\r\n    debug:false,\r\n});\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import \"./styles/project.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}